{
	"id": "67087af3fdbe9c833f9d33fc9ee402ea",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/LiquidtyLocker.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\";\r\nimport \"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol\";\r\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\r\n\r\ncontract LiquidityLocker is Initializable, Ownable2StepUpgradeable {\r\n    address public token;\r\n    address public governanceContract;\r\n\r\n    struct Lock {\r\n        address user;\r\n        uint256 amount;\r\n        uint256 unlockTime;\r\n    }\r\n\r\n    mapping(address => Lock) public locks;\r\n\r\n    event TokensLocked(address indexed user, uint256 amount, uint256 unlockTime);\r\n    event TokensUnlocked(address indexed user, uint256 amount);\r\n\r\n    modifier onlyDAO() {\r\n        require(msg.sender == governanceContract, \"Only DAO can call\");\r\n        _;\r\n    }\r\n\r\n    function initialize(address _token, address _governance) public initializer {\r\n        require(_token != address(0), \"Invalid token address\");\r\n        require(_governance != address(0), \"Invalid governance address\");\r\n        __Ownable2Step_init();\r\n        token = _token;\r\n        governanceContract = _governance;\r\n        _transferOwnership(governanceContract);\r\n    }\r\n\r\n    function lockForDEX(address user, uint256 amount, address dex, uint256 unlockTime) external onlyDAO {\r\n        require(amount > 0, \"Amount must be greater than 0\");\r\n        require(unlockTime > block.timestamp, \"Invalid unlock time\");\r\n        require(IERC20Upgradeable(token).transferFrom(user, address(this), amount), \"Transfer failed\");\r\n\r\n        locks[dex] = Lock(user, amount, unlockTime);\r\n        emit TokensLocked(user, amount, unlockTime);\r\n    }\r\n\r\n    function unlockTokens(address dex) external {\r\n        Lock storage lock = locks[dex];\r\n        require(lock.amount > 0, \"No tokens locked\");\r\n        require(block.timestamp >= lock.unlockTime, \"Tokens still locked\");\r\n        require(IERC20Upgradeable(token).transfer(lock.user, lock.amount), \"Transfer failed\");\r\n\r\n        emit TokensUnlocked(lock.user, lock.amount);\r\n        delete locks[dex];\r\n    }\r\n}"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reinitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Pointer to storage slot. Allows integrators to override it with a custom storage location.\n     *\n     * NOTE: Consider following the ERC-7201 formula to derive storage locations.\n     */\n    function _initializableStorageSlot() internal pure virtual returns (bytes32) {\n        return INITIALIZABLE_STORAGE;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        bytes32 slot = _initializableStorageSlot();\n        assembly {\n            $.slot := slot\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (access/Ownable2Step.sol)\n\npragma solidity ^0.8.20;\n\nimport {OwnableUpgradeable} from \"./OwnableUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * This extension of the {Ownable} contract includes a two-step mechanism to transfer\n * ownership, where the new owner must call {acceptOwnership} in order to replace the\n * old one. This can help prevent common mistakes, such as transfers of ownership to\n * incorrect accounts, or to contracts that are unable to interact with the\n * permission system.\n *\n * The initial owner is specified at deployment time in the constructor for `Ownable`. This\n * can later be changed with {transferOwnership} and {acceptOwnership}.\n *\n * This module is used through inheritance. It will make available all functions\n * from parent (Ownable).\n */\nabstract contract Ownable2StepUpgradeable is Initializable, OwnableUpgradeable {\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable2Step\n    struct Ownable2StepStorage {\n        address _pendingOwner;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Ownable2Step\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant Ownable2StepStorageLocation = 0x237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c00;\n\n    function _getOwnable2StepStorage() private pure returns (Ownable2StepStorage storage $) {\n        assembly {\n            $.slot := Ownable2StepStorageLocation\n        }\n    }\n\n    event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner);\n\n    function __Ownable2Step_init() internal onlyInitializing {\n    }\n\n    function __Ownable2Step_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Returns the address of the pending owner.\n     */\n    function pendingOwner() public view virtual returns (address) {\n        Ownable2StepStorage storage $ = _getOwnable2StepStorage();\n        return $._pendingOwner;\n    }\n\n    /**\n     * @dev Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one.\n     * Can only be called by the current owner.\n     *\n     * Setting `newOwner` to the zero address is allowed; this can be used to cancel an initiated ownership transfer.\n     */\n    function transferOwnership(address newOwner) public virtual override onlyOwner {\n        Ownable2StepStorage storage $ = _getOwnable2StepStorage();\n        $._pendingOwner = newOwner;\n        emit OwnershipTransferStarted(owner(), newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`) and deletes any pending owner.\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual override {\n        Ownable2StepStorage storage $ = _getOwnable2StepStorage();\n        delete $._pendingOwner;\n        super._transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev The new owner accepts the ownership transfer.\n     */\n    function acceptOwnership() public virtual {\n        address sender = _msgSender();\n        if (pendingOwner() != sender) {\n            revert OwnableUnauthorizedAccount(sender);\n        }\n        _transferOwnership(sender);\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20Upgradeable {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\n    struct OwnableStorage {\n        address _owner;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Ownable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\n\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\n        assembly {\n            $.slot := OwnableStorageLocation\n        }\n    }\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\n        __Ownable_init_unchained(initialOwner);\n    }\n\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        OwnableStorage storage $ = _getOwnableStorage();\n        return $._owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        OwnableStorage storage $ = _getOwnableStorage();\n        address oldOwner = $._owner;\n        $._owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol": {
				"Ownable2StepUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferStarted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "acceptOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pendingOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. This extension of the {Ownable} contract includes a two-step mechanism to transfer ownership, where the new owner must call {acceptOwnership} in order to replace the old one. This can help prevent common mistakes, such as transfers of ownership to incorrect accounts, or to contracts that are unable to interact with the permission system. The initial owner is specified at deployment time in the constructor for `Ownable`. This can later be changed with {transferOwnership} and {acceptOwnership}. This module is used through inheritance. It will make available all functions from parent (Ownable).",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {
							"acceptOwnership()": {
								"details": "The new owner accepts the ownership transfer."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"pendingOwner()": {
								"details": "Returns the address of the pending owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner. Setting `newOwner` to the zero address is allowed; this can be used to cancel an initiated ownership transfer."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"acceptOwnership()": "79ba5097",
							"owner()": "8da5cb5b",
							"pendingOwner()": "e30c3978",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. This extension of the {Ownable} contract includes a two-step mechanism to transfer ownership, where the new owner must call {acceptOwnership} in order to replace the old one. This can help prevent common mistakes, such as transfers of ownership to incorrect accounts, or to contracts that are unable to interact with the permission system. The initial owner is specified at deployment time in the constructor for `Ownable`. This can later be changed with {transferOwnership} and {acceptOwnership}. This module is used through inheritance. It will make available all functions from parent (Ownable).\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"acceptOwnership()\":{\"details\":\"The new owner accepts the ownership transfer.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pendingOwner()\":{\"details\":\"Returns the address of the pending owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner. Setting `newOwner` to the zero address is allowed; this can be used to cancel an initiated ownership transfer.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol\":\"Ownable2StepUpgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol\":{\"keccak256\":\"0xe9570c90b688339474e80090b0cdf0b2c85c25aa28cc6044d489dda9efc2c716\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f358f7eab8cc53b784d5ff3f82073124d797638aee71487beca3543414a46a23\",\"dweb:/ipfs/QmWy153MjdHfUbqtCKELubAmMavjBEeRByTDv9MMoUVZN4\"]},\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"OwnableUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol": {
				"IERC20Upgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":\"IERC20Upgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f\",\"dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ContextUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/LiquidtyLocker.sol": {
				"LiquidityLocker": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferStarted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "unlockTime",
									"type": "uint256"
								}
							],
							"name": "TokensLocked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TokensUnlocked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "acceptOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "governanceContract",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_governance",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "dex",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "unlockTime",
									"type": "uint256"
								}
							],
							"name": "lockForDEX",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "locks",
							"outputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "unlockTime",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pendingOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "dex",
									"type": "address"
								}
							],
							"name": "unlockTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {
							"acceptOwnership()": {
								"details": "The new owner accepts the ownership transfer."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"pendingOwner()": {
								"details": "Returns the address of the pending owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner. Setting `newOwner` to the zero address is allowed; this can be used to cancel an initiated ownership transfer."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/LiquidtyLocker.sol\":303:2121  contract LiquidityLocker is Initializable, Ownable2StepUpgradeable {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/LiquidtyLocker.sol\":303:2121  contract LiquidityLocker is Initializable, Ownable2StepUpgradeable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xb172b222\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xcb67f948\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xe30c3978\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xfc0c546a\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      dup1\n      0x40678be4\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x485cc955\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x5de9a137\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x79ba5097\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/LiquidtyLocker.sol\":1248:1705  function lockForDEX(address user, uint256 amount, address dex, uint256 unlockTime) external onlyDAO {... */\n    tag_3:\n      tag_15\n      tag_16\n      calldatasize\n      0x04\n      tag_17\n      jump\t// in\n    tag_16:\n      tag_18\n      jump\t// in\n    tag_15:\n      stop\n        /* \"contracts/LiquidtyLocker.sol\":867:1240  function initialize(address _token, address _governance) public initializer {... */\n    tag_4:\n      tag_15\n      tag_20\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n        /* \"contracts/LiquidtyLocker.sol\":551:588  mapping(address => Lock) public locks */\n    tag_5:\n      tag_23\n      tag_24\n      calldatasize\n      0x04\n      tag_25\n      jump\t// in\n    tag_24:\n      0x02\n      0x20\n      dup2\n      swap1\n      mstore\n      0x00\n      swap2\n      dup3\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n      dup1\n      sload\n      0x01\n      dup3\n      add\n      sload\n      swap2\n      swap1\n      swap3\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      swap2\n      dup4\n      jump\n    tag_23:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1270:1302   */\n      swap1\n      swap5\n      and\n        /* \"#utility.yul\":1252:1303   */\n      dup5\n      mstore\n        /* \"#utility.yul\":1334:1336   */\n      0x20\n        /* \"#utility.yul\":1319:1337   */\n      dup5\n      add\n        /* \"#utility.yul\":1312:1346   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":1362:1380   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":1355:1389   */\n      mstore\n        /* \"#utility.yul\":1240:1242   */\n      0x60\n        /* \"#utility.yul\":1225:1243   */\n      add\n        /* \"contracts/LiquidtyLocker.sol\":551:588  mapping(address => Lock) public locks */\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n    tag_6:\n      tag_15\n      tag_30\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol\":3257:3486  function acceptOwnership() public virtual {... */\n    tag_7:\n      tag_15\n      tag_32\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n    tag_8:\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1564:1596   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1546:1597   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1534:1536   */\n      0x20\n        /* \"#utility.yul\":1519:1537   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n      tag_27\n        /* \"#utility.yul\":1400:1603   */\n      jump\n        /* \"contracts/LiquidtyLocker.sol\":404:437  address public governanceContract */\n    tag_9:\n      sload(0x01)\n      tag_33\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/LiquidtyLocker.sol\":1713:2118  function unlockTokens(address dex) external {... */\n    tag_10:\n      tag_15\n      tag_41\n      calldatasize\n      0x04\n      tag_25\n      jump\t// in\n    tag_41:\n      tag_42\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol\":2038:2206  function pendingOwner() public view virtual returns (address) {... */\n    tag_11:\n      tag_33\n      tag_44\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol\":2524:2771  function transferOwnership(address newOwner) public virtual override onlyOwner {... */\n    tag_12:\n      tag_15\n      tag_47\n      calldatasize\n      0x04\n      tag_25\n      jump\t// in\n    tag_47:\n      tag_48\n      jump\t// in\n        /* \"contracts/LiquidtyLocker.sol\":377:397  address public token */\n    tag_13:\n      sload(0x00)\n      tag_33\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/LiquidtyLocker.sol\":1248:1705  function lockForDEX(address user, uint256 amount, address dex, uint256 unlockTime) external onlyDAO {... */\n    tag_18:\n        /* \"contracts/LiquidtyLocker.sol\":799:817  governanceContract */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"contracts/LiquidtyLocker.sol\":785:795  msg.sender */\n      caller\n        /* \"contracts/LiquidtyLocker.sol\":785:817  msg.sender == governanceContract */\n      eq\n        /* \"contracts/LiquidtyLocker.sol\":777:839  require(msg.sender == governanceContract, \"Only DAO can call\") */\n      tag_53\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1810:1812   */\n      0x20\n        /* \"contracts/LiquidtyLocker.sol\":777:839  require(msg.sender == governanceContract, \"Only DAO can call\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1792:1813   */\n      mstore\n        /* \"#utility.yul\":1849:1851   */\n      0x11\n        /* \"#utility.yul\":1829:1847   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1822:1852   */\n      mstore\n      shl(0x7a, 0x13db9b1e48111053c818d85b8818d85b1b)\n        /* \"#utility.yul\":1868:1886   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1861:1908   */\n      mstore\n        /* \"#utility.yul\":1925:1943   */\n      0x64\n      add\n        /* \"contracts/LiquidtyLocker.sol\":777:839  require(msg.sender == governanceContract, \"Only DAO can call\") */\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_53:\n        /* \"contracts/LiquidtyLocker.sol\":1376:1377  0 */\n      0x00\n        /* \"contracts/LiquidtyLocker.sol\":1367:1373  amount */\n      dup4\n        /* \"contracts/LiquidtyLocker.sol\":1367:1377  amount > 0 */\n      gt\n        /* \"contracts/LiquidtyLocker.sol\":1359:1411  require(amount > 0, \"Amount must be greater than 0\") */\n      tag_57\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2156:2158   */\n      0x20\n        /* \"contracts/LiquidtyLocker.sol\":1359:1411  require(amount > 0, \"Amount must be greater than 0\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2138:2159   */\n      mstore\n        /* \"#utility.yul\":2195:2197   */\n      0x1d\n        /* \"#utility.yul\":2175:2193   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2168:2198   */\n      mstore\n        /* \"#utility.yul\":2234:2265   */\n      0x416d6f756e74206d7573742062652067726561746572207468616e2030000000\n        /* \"#utility.yul\":2214:2232   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2207:2266   */\n      mstore\n        /* \"#utility.yul\":2283:2301   */\n      0x64\n      add\n        /* \"contracts/LiquidtyLocker.sol\":1359:1411  require(amount > 0, \"Amount must be greater than 0\") */\n      tag_54\n        /* \"#utility.yul\":1954:2307   */\n      jump\n        /* \"contracts/LiquidtyLocker.sol\":1359:1411  require(amount > 0, \"Amount must be greater than 0\") */\n    tag_57:\n        /* \"contracts/LiquidtyLocker.sol\":1443:1458  block.timestamp */\n      timestamp\n        /* \"contracts/LiquidtyLocker.sol\":1430:1440  unlockTime */\n      dup2\n        /* \"contracts/LiquidtyLocker.sol\":1430:1458  unlockTime > block.timestamp */\n      gt\n        /* \"contracts/LiquidtyLocker.sol\":1422:1482  require(unlockTime > block.timestamp, \"Invalid unlock time\") */\n      tag_60\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2514:2516   */\n      0x20\n        /* \"contracts/LiquidtyLocker.sol\":1422:1482  require(unlockTime > block.timestamp, \"Invalid unlock time\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2496:2517   */\n      mstore\n        /* \"#utility.yul\":2553:2555   */\n      0x13\n        /* \"#utility.yul\":2533:2551   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2526:2556   */\n      mstore\n      shl(0x68, 0x496e76616c696420756e6c6f636b2074696d65)\n        /* \"#utility.yul\":2572:2590   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2565:2614   */\n      mstore\n        /* \"#utility.yul\":2631:2649   */\n      0x64\n      add\n        /* \"contracts/LiquidtyLocker.sol\":1422:1482  require(unlockTime > block.timestamp, \"Invalid unlock time\") */\n      tag_54\n        /* \"#utility.yul\":2312:2655   */\n      jump\n        /* \"contracts/LiquidtyLocker.sol\":1422:1482  require(unlockTime > block.timestamp, \"Invalid unlock time\") */\n    tag_60:\n        /* \"contracts/LiquidtyLocker.sol\":1519:1524  token */\n      sload(0x00)\n        /* \"contracts/LiquidtyLocker.sol\":1501:1567  IERC20Upgradeable(token).transferFrom(user, address(this), amount) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2918:2933   */\n      dup7\n      dup2\n      and\n        /* \"contracts/LiquidtyLocker.sol\":1501:1567  IERC20Upgradeable(token).transferFrom(user, address(this), amount) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":2900:2934   */\n      mstore\n        /* \"contracts/LiquidtyLocker.sol\":1553:1557  this */\n      address\n        /* \"#utility.yul\":2950:2968   */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":2943:2986   */\n      mstore\n        /* \"#utility.yul\":3002:3020   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2995:3029   */\n      dup7\n      swap1\n      mstore\n        /* \"contracts/LiquidtyLocker.sol\":1519:1524  token */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/LiquidtyLocker.sol\":1501:1538  IERC20Upgradeable(token).transferFrom */\n      0x23b872dd\n      swap1\n        /* \"#utility.yul\":2835:2853   */\n      0x64\n      add\n        /* \"contracts/LiquidtyLocker.sol\":1501:1567  IERC20Upgradeable(token).transferFrom(user, address(this), amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_66\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_66:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_67\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n        /* \"contracts/LiquidtyLocker.sol\":1493:1587  require(IERC20Upgradeable(token).transferFrom(user, address(this), amount), \"Transfer failed\") */\n      tag_69\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3524:3526   */\n      0x20\n        /* \"contracts/LiquidtyLocker.sol\":1493:1587  require(IERC20Upgradeable(token).transferFrom(user, address(this), amount), \"Transfer failed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3506:3527   */\n      mstore\n        /* \"#utility.yul\":3563:3565   */\n      0x0f\n        /* \"#utility.yul\":3543:3561   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3536:3566   */\n      mstore\n      shl(0x8a, 0x151c985b9cd9995c8819985a5b1959)\n        /* \"#utility.yul\":3582:3600   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3575:3620   */\n      mstore\n        /* \"#utility.yul\":3637:3655   */\n      0x64\n      add\n        /* \"contracts/LiquidtyLocker.sol\":1493:1587  require(IERC20Upgradeable(token).transferFrom(user, address(this), amount), \"Transfer failed\") */\n      tag_54\n        /* \"#utility.yul\":3322:3661   */\n      jump\n        /* \"contracts/LiquidtyLocker.sol\":1493:1587  require(IERC20Upgradeable(token).transferFrom(user, address(this), amount), \"Transfer failed\") */\n    tag_69:\n        /* \"contracts/LiquidtyLocker.sol\":1613:1643  Lock(user, amount, unlockTime) */\n      0x40\n      dup1\n      mload\n      0x60\n      dup2\n      add\n      dup3\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n      dup7\n      dup2\n      and\n      dup1\n      dup4\n      mstore\n      0x20\n      dup1\n      dup5\n      add\n      dup9\n      dup2\n      mstore\n      dup5\n      dup7\n      add\n      dup8\n      dup2\n      mstore\n        /* \"contracts/LiquidtyLocker.sol\":1600:1610  locks[dex] */\n      dup9\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/LiquidtyLocker.sol\":1600:1605  locks */\n      0x02\n        /* \"contracts/LiquidtyLocker.sol\":1600:1610  locks[dex] */\n      dup1\n      dup6\n      mstore\n      swap1\n      dup9\n      swap1\n      keccak256\n        /* \"contracts/LiquidtyLocker.sol\":1600:1643  locks[dex] = Lock(user, amount, unlockTime) */\n      swap7\n      mload\n      dup8\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap7\n      and\n      swap6\n      swap1\n      swap6\n      or\n      dup7\n      sstore\n      swap1\n      mload\n      0x01\n      dup7\n      add\n      sstore\n      mload\n      swap4\n      swap1\n      swap3\n      add\n      swap3\n      swap1\n      swap3\n      sstore\n        /* \"contracts/LiquidtyLocker.sol\":1659:1697  TokensLocked(user, amount, unlockTime) */\n      dup3\n      mload\n        /* \"#utility.yul\":3840:3865   */\n      dup7\n      dup2\n      mstore\n        /* \"#utility.yul\":3881:3899   */\n      swap1\n      dup2\n      add\n        /* \"#utility.yul\":3874:3908   */\n      dup5\n      swap1\n      mstore\n        /* \"contracts/LiquidtyLocker.sol\":1613:1643  Lock(user, amount, unlockTime) */\n      swap1\n      swap2\n        /* \"contracts/LiquidtyLocker.sol\":1659:1697  TokensLocked(user, amount, unlockTime) */\n      0xd741e738a23fd18a03a26522320d9fc6cac1fed483e215ea9150fbc2fc43385d\n      swap2\n        /* \"#utility.yul\":3813:3831   */\n      add\n        /* \"contracts/LiquidtyLocker.sol\":1659:1697  TokensLocked(user, amount, unlockTime) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/LiquidtyLocker.sol\":1248:1705  function lockForDEX(address user, uint256 amount, address dex, uint256 unlockTime) external onlyDAO {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/LiquidtyLocker.sol\":867:1240  function initialize(address _token, address _governance) public initializer {... */\n    tag_22:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3147:3213  0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00 */\n      0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4302:4317  $._initializing */\n      dup1\n      sload\n      shl(0x40, 0x01)\n      dup2\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4301:4317  !$._initializing */\n      iszero\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4348:4362  $._initialized */\n      0xffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4158:4188  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4724:4740  initialized == 0 */\n      dup2\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4724:4758  initialized == 0 && isTopLevelCall */\n      dup1\n      iszero\n      tag_77\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4744:4758  isTopLevelCall */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4724:4758  initialized == 0 && isTopLevelCall */\n    tag_77:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4704:4758  bool initialSetup = initialized == 0 && isTopLevelCall */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4768:4785  bool construction */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4788:4799  initialized */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4788:4804  initialized == 1 */\n      0xffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4803:4804  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4788:4804  initialized == 1 */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4788:4838  initialized == 1 && address(this).code.length == 0 */\n      dup1\n      iszero\n      tag_78\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4816:4820  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4808:4833  address(this).code.length */\n      extcodesize\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4808:4838  address(this).code.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4788:4838  initialized == 1 && address(this).code.length == 0 */\n    tag_78:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4768:4838  bool construction = initialized == 1 && address(this).code.length == 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4854:4866  initialSetup */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4853:4866  !initialSetup */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4853:4883  !initialSetup && !construction */\n      dup1\n      iszero\n      tag_79\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4871:4883  construction */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4870:4883  !construction */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4853:4883  !initialSetup && !construction */\n    tag_79:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4849:4940  if (!initialSetup && !construction) {... */\n      iszero\n      tag_80\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4906:4929  InvalidInitialization() */\n      mload(0x40)\n      shl(0xe0, 0xf92ee8a9)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4849:4940  if (!initialSetup && !construction) {... */\n    tag_80:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4949:4967  $._initialized = 1 */\n      dup5\n      sload\n      not(0xffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4966:4967  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4949:4967  $._initialized = 1 */\n      or\n      dup6\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4977:5044  if (isTopLevelCall) {... */\n      dup4\n      iszero\n      tag_81\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5011:5033  $._initializing = true */\n      dup5\n      sload\n      not(shl(0x40, 0xff))\n      and\n      shl(0x40, 0x01)\n      or\n      dup6\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4977:5044  if (isTopLevelCall) {... */\n    tag_81:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/LiquidtyLocker.sol\":962:982  _token != address(0) */\n      dup8\n      and\n        /* \"contracts/LiquidtyLocker.sol\":954:1008  require(_token != address(0), \"Invalid token address\") */\n      tag_83\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4121:4123   */\n      0x20\n        /* \"contracts/LiquidtyLocker.sol\":954:1008  require(_token != address(0), \"Invalid token address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4103:4124   */\n      mstore\n        /* \"#utility.yul\":4160:4162   */\n      0x15\n        /* \"#utility.yul\":4140:4158   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4133:4163   */\n      mstore\n      shl(0x58, 0x496e76616c696420746f6b656e2061646472657373)\n        /* \"#utility.yul\":4179:4197   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4172:4223   */\n      mstore\n        /* \"#utility.yul\":4240:4258   */\n      0x64\n      add\n        /* \"contracts/LiquidtyLocker.sol\":954:1008  require(_token != address(0), \"Invalid token address\") */\n      tag_54\n        /* \"#utility.yul\":3919:4264   */\n      jump\n        /* \"contracts/LiquidtyLocker.sol\":954:1008  require(_token != address(0), \"Invalid token address\") */\n    tag_83:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/LiquidtyLocker.sol\":1027:1052  _governance != address(0) */\n      dup7\n      and\n        /* \"contracts/LiquidtyLocker.sol\":1019:1083  require(_governance != address(0), \"Invalid governance address\") */\n      tag_86\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4471:4473   */\n      0x20\n        /* \"contracts/LiquidtyLocker.sol\":1019:1083  require(_governance != address(0), \"Invalid governance address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4453:4474   */\n      mstore\n        /* \"#utility.yul\":4510:4512   */\n      0x1a\n        /* \"#utility.yul\":4490:4508   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4483:4513   */\n      mstore\n        /* \"#utility.yul\":4549:4577   */\n      0x496e76616c696420676f7665726e616e63652061646472657373000000000000\n        /* \"#utility.yul\":4529:4547   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4522:4578   */\n      mstore\n        /* \"#utility.yul\":4595:4613   */\n      0x64\n      add\n        /* \"contracts/LiquidtyLocker.sol\":1019:1083  require(_governance != address(0), \"Invalid governance address\") */\n      tag_54\n        /* \"#utility.yul\":4269:4619   */\n      jump\n        /* \"contracts/LiquidtyLocker.sol\":1019:1083  require(_governance != address(0), \"Invalid governance address\") */\n    tag_86:\n        /* \"contracts/LiquidtyLocker.sol\":1094:1115  __Ownable2Step_init() */\n      tag_89\n        /* \"contracts/LiquidtyLocker.sol\":1094:1113  __Ownable2Step_init */\n      tag_90\n        /* \"contracts/LiquidtyLocker.sol\":1094:1115  __Ownable2Step_init() */\n      jump\t// in\n    tag_89:\n        /* \"contracts/LiquidtyLocker.sol\":1126:1131  token */\n      0x00\n        /* \"contracts/LiquidtyLocker.sol\":1126:1140  token = _token */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup11\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap3\n      dup4\n      and\n      or\n      swap1\n      swap3\n      sstore\n      0x01\n        /* \"contracts/LiquidtyLocker.sol\":1151:1183  governanceContract = _governance */\n      dup1\n      sload\n      swap3\n      dup10\n      and\n      swap3\n      swap1\n      swap2\n      and\n      dup3\n      or\n      swap1\n      sstore\n        /* \"contracts/LiquidtyLocker.sol\":1194:1232  _transferOwnership(governanceContract) */\n      tag_91\n      swap1\n        /* \"contracts/LiquidtyLocker.sol\":1194:1212  _transferOwnership */\n      tag_92\n        /* \"contracts/LiquidtyLocker.sol\":1194:1232  _transferOwnership(governanceContract) */\n      jump\t// in\n    tag_91:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5068:5082  isTopLevelCall */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5064:5165  if (isTopLevelCall) {... */\n      iszero\n      tag_93\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5098:5121  $._initializing = false */\n      dup5\n      sload\n      not(shl(0x40, 0xff))\n      and\n      dup6\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5140:5154  Initialized(1) */\n      mload(0x40)\n      0x01\n        /* \"#utility.yul\":4777:4827   */\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5140:5154  Initialized(1) */\n      0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2\n      swap1\n        /* \"#utility.yul\":4765:4767   */\n      0x20\n        /* \"#utility.yul\":4750:4768   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5140:5154  Initialized(1) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5064:5165  if (isTopLevelCall) {... */\n    tag_93:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4092:5171  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/LiquidtyLocker.sol\":867:1240  function initialize(address _token, address _governance) public initializer {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n    tag_30:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_97\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_98\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_97:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3249  _transferOwnership(address(0)) */\n      tag_100\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3246:3247  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3237  _transferOwnership */\n      tag_92\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3249  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_100:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol\":3257:3486  function acceptOwnership() public virtual {... */\n    tag_32:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol\":3352:3366  pendingOwner() */\n      tag_104\n        /* \"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol\":3352:3364  pendingOwner */\n      tag_44\n        /* \"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol\":3352:3366  pendingOwner() */\n      jump\t// in\n    tag_104:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol\":3352:3376  pendingOwner() != sender */\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol\":3348:3444  if (pendingOwner() != sender) {... */\n      tag_105\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol\":3399:3433  OwnableUnauthorizedAccount(sender) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1564:1596   */\n      dup3\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol\":3399:3433  OwnableUnauthorizedAccount(sender) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1546:1597   */\n      mstore\n        /* \"#utility.yul\":1519:1537   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol\":3399:3433  OwnableUnauthorizedAccount(sender) */\n      tag_54\n        /* \"#utility.yul\":1400:1603   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol\":3348:3444  if (pendingOwner() != sender) {... */\n    tag_105:\n        /* \"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol\":3453:3479  _transferOwnership(sender) */\n      tag_107\n        /* \"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol\":3472:3478  sender */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol\":3453:3471  _transferOwnership */\n      tag_92\n        /* \"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol\":3453:3479  _transferOwnership(sender) */\n      jump\t// in\n    tag_107:\n        /* \"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol\":3299:3486  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol\":3257:3486  function acceptOwnership() public virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n    tag_34:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2487:2494  address */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1313:1335  OwnableStorageLocation */\n      0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2533:2553  _getOwnableStorage() */\n    tag_109:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2570:2578  $._owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/LiquidtyLocker.sol\":1713:2118  function unlockTokens(address dex) external {... */\n    tag_42:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/LiquidtyLocker.sol\":1788:1798  locks[dex] */\n      dup2\n      and\n        /* \"contracts/LiquidtyLocker.sol\":1768:1785  Lock storage lock */\n      0x00\n        /* \"contracts/LiquidtyLocker.sol\":1788:1798  locks[dex] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/LiquidtyLocker.sol\":1788:1793  locks */\n      0x02\n        /* \"contracts/LiquidtyLocker.sol\":1788:1798  locks[dex] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/LiquidtyLocker.sol\":1817:1828  lock.amount */\n      0x01\n      dup2\n      add\n      sload\n        /* \"contracts/LiquidtyLocker.sol\":1809:1853  require(lock.amount > 0, \"No tokens locked\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5040:5042   */\n      0x20\n        /* \"contracts/LiquidtyLocker.sol\":1809:1853  require(lock.amount > 0, \"No tokens locked\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5022:5043   */\n      mstore\n        /* \"#utility.yul\":5079:5081   */\n      0x10\n        /* \"#utility.yul\":5059:5077   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5052:5082   */\n      mstore\n      shl(0x82, 0x139bc81d1bdad95b9cc81b1bd8dad959)\n        /* \"#utility.yul\":5098:5116   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5091:5137   */\n      mstore\n        /* \"#utility.yul\":5154:5172   */\n      0x64\n      add\n        /* \"contracts/LiquidtyLocker.sol\":1809:1853  require(lock.amount > 0, \"No tokens locked\") */\n      tag_54\n        /* \"#utility.yul\":4838:5178   */\n      jump\n        /* \"contracts/LiquidtyLocker.sol\":1809:1853  require(lock.amount > 0, \"No tokens locked\") */\n    tag_112:\n        /* \"contracts/LiquidtyLocker.sol\":1891:1895  lock */\n      dup1\n        /* \"contracts/LiquidtyLocker.sol\":1891:1906  lock.unlockTime */\n      0x02\n      add\n      sload\n        /* \"contracts/LiquidtyLocker.sol\":1872:1887  block.timestamp */\n      timestamp\n        /* \"contracts/LiquidtyLocker.sol\":1872:1906  block.timestamp >= lock.unlockTime */\n      lt\n      iszero\n        /* \"contracts/LiquidtyLocker.sol\":1864:1930  require(block.timestamp >= lock.unlockTime, \"Tokens still locked\") */\n      tag_115\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5385:5387   */\n      0x20\n        /* \"contracts/LiquidtyLocker.sol\":1864:1930  require(block.timestamp >= lock.unlockTime, \"Tokens still locked\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5367:5388   */\n      mstore\n        /* \"#utility.yul\":5424:5426   */\n      0x13\n        /* \"#utility.yul\":5404:5422   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5397:5427   */\n      mstore\n      shl(0x6a, 0x151bdad95b9cc81cdd1a5b1b081b1bd8dad959)\n        /* \"#utility.yul\":5443:5461   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5436:5485   */\n      mstore\n        /* \"#utility.yul\":5502:5520   */\n      0x64\n      add\n        /* \"contracts/LiquidtyLocker.sol\":1864:1930  require(block.timestamp >= lock.unlockTime, \"Tokens still locked\") */\n      tag_54\n        /* \"#utility.yul\":5183:5526   */\n      jump\n        /* \"contracts/LiquidtyLocker.sol\":1864:1930  require(block.timestamp >= lock.unlockTime, \"Tokens still locked\") */\n    tag_115:\n        /* \"contracts/LiquidtyLocker.sol\":1967:1972  token */\n      sload(0x00)\n        /* \"contracts/LiquidtyLocker.sol\":1983:1992  lock.user */\n      dup2\n      sload\n        /* \"contracts/LiquidtyLocker.sol\":1967:1972  token */\n      0x01\n        /* \"contracts/LiquidtyLocker.sol\":1994:2005  lock.amount */\n      dup4\n      add\n      sload\n        /* \"contracts/LiquidtyLocker.sol\":1949:2006  IERC20Upgradeable(token).transfer(lock.user, lock.amount) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/LiquidtyLocker.sol\":1983:1992  lock.user */\n      swap3\n      dup4\n      and\n        /* \"contracts/LiquidtyLocker.sol\":1949:2006  IERC20Upgradeable(token).transfer(lock.user, lock.amount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5705:5756   */\n      mstore\n        /* \"#utility.yul\":5772:5790   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":5765:5799   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"contracts/LiquidtyLocker.sol\":1967:1972  token */\n      swap2\n      and\n      swap1\n        /* \"contracts/LiquidtyLocker.sol\":1949:1982  IERC20Upgradeable(token).transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":5678:5696   */\n      0x44\n      add\n        /* \"contracts/LiquidtyLocker.sol\":1949:2006  IERC20Upgradeable(token).transfer(lock.user, lock.amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_121\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_121:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_122\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_122:\n        /* \"contracts/LiquidtyLocker.sol\":1941:2026  require(IERC20Upgradeable(token).transfer(lock.user, lock.amount), \"Transfer failed\") */\n      tag_123\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3524:3526   */\n      0x20\n        /* \"contracts/LiquidtyLocker.sol\":1941:2026  require(IERC20Upgradeable(token).transfer(lock.user, lock.amount), \"Transfer failed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3506:3527   */\n      mstore\n        /* \"#utility.yul\":3563:3565   */\n      0x0f\n        /* \"#utility.yul\":3543:3561   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3536:3566   */\n      mstore\n      shl(0x8a, 0x151c985b9cd9995c8819985a5b1959)\n        /* \"#utility.yul\":3582:3600   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3575:3620   */\n      mstore\n        /* \"#utility.yul\":3637:3655   */\n      0x64\n      add\n        /* \"contracts/LiquidtyLocker.sol\":1941:2026  require(IERC20Upgradeable(token).transfer(lock.user, lock.amount), \"Transfer failed\") */\n      tag_54\n        /* \"#utility.yul\":3322:3661   */\n      jump\n        /* \"contracts/LiquidtyLocker.sol\":1941:2026  require(IERC20Upgradeable(token).transfer(lock.user, lock.amount), \"Transfer failed\") */\n    tag_123:\n        /* \"contracts/LiquidtyLocker.sol\":2059:2068  lock.user */\n      dup1\n      sload\n      0x01\n        /* \"contracts/LiquidtyLocker.sol\":2070:2081  lock.amount */\n      dup3\n      add\n      sload\n        /* \"contracts/LiquidtyLocker.sol\":2044:2082  TokensUnlocked(lock.user, lock.amount) */\n      mload(0x40)\n        /* \"#utility.yul\":5956:5981   */\n      swap1\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/LiquidtyLocker.sol\":2059:2068  lock.user */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/LiquidtyLocker.sol\":2044:2082  TokensUnlocked(lock.user, lock.amount) */\n      0xe7b379c6c1fa169e9079c25e9143b127637eef8ec8c9d5c06ddb4ab3e1195888\n      swap1\n        /* \"#utility.yul\":5944:5946   */\n      0x20\n        /* \"#utility.yul\":5929:5947   */\n      add\n        /* \"contracts/LiquidtyLocker.sol\":2044:2082  TokensUnlocked(lock.user, lock.amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/LiquidtyLocker.sol\":2100:2110  locks[dex] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/LiquidtyLocker.sol\":2100:2105  locks */\n      0x02\n        /* \"contracts/LiquidtyLocker.sol\":2100:2110  locks[dex] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup3\n      keccak256\n        /* \"contracts/LiquidtyLocker.sol\":2093:2110  delete locks[dex] */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      dup2\n      sstore\n      0x01\n      dup2\n      add\n      dup4\n      swap1\n      sstore\n      add\n      sstore\n        /* \"contracts/LiquidtyLocker.sol\":1713:2118  function unlockTokens(address dex) external {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol\":2038:2206  function pendingOwner() public view virtual returns (address) {... */\n    tag_44:\n        /* \"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol\":2091:2098  address */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol\":1676:1703  Ownable2StepStorageLocation */\n      0x237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c00\n        /* \"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol\":2142:2167  _getOwnable2StepStorage() */\n      tag_109\n        /* \"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol\":1545:1719  function _getOwnable2StepStorage() private pure returns (Ownable2StepStorage storage $) {... */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol\":2524:2771  function transferOwnership(address newOwner) public virtual override onlyOwner {... */\n    tag_48:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_131\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_98\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_131:\n        /* \"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol\":1676:1703  Ownable2StepStorageLocation */\n      0x237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c00\n        /* \"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol\":2680:2706  $._pendingOwner = newOwner */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      swap1\n      dup2\n      or\n      dup3\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol\":2746:2753  owner() */\n      tag_134\n        /* \"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol\":2746:2751  owner */\n      tag_34\n        /* \"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol\":2746:2753  owner() */\n      jump\t// in\n    tag_134:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol\":2721:2764  OwnershipTransferStarted(owner(), newOwner) */\n      and\n      0x38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e22700\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol\":2603:2771  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol\":2524:2771  function transferOwnership(address newOwner) public virtual override onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol\":1819:1883  function __Ownable2Step_init() internal onlyInitializing {... */\n    tag_90:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6949  _checkInitializing() */\n      tag_100\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6947  _checkInitializing */\n      tag_140\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6949  _checkInitializing() */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol\":2955:3177  function _transferOwnership(address newOwner) internal virtual override {... */\n    tag_92:\n        /* \"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol\":1676:1703  Ownable2StepStorageLocation */\n      0x237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c00\n        /* \"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol\":3104:3126  delete $._pendingOwner */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      dup2\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol\":3136:3170  super._transferOwnership(newOwner) */\n      tag_144\n        /* \"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol\":3161:3169  newOwner */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol\":3136:3160  super._transferOwnership */\n      tag_145\n        /* \"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol\":3136:3170  super._transferOwnership(newOwner) */\n      jump\t// in\n    tag_144:\n        /* \"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol\":3027:3177  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol\":2955:3177  function _transferOwnership(address newOwner) internal virtual override {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2658:2820  function _checkOwner() internal view virtual {... */\n    tag_98:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2724  owner() */\n      tag_148\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2722  owner */\n      tag_34\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2724  owner() */\n      jump\t// in\n    tag_148:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2740  owner() != _msgSender() */\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2713:2814  if (owner() != _msgSender()) {... */\n      tag_100\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2763:2803  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2763:2803  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1546:1597   */\n      mstore\n        /* \"#utility.yul\":1519:1537   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2763:2803  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_54\n        /* \"#utility.yul\":1400:1603   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7082:7223  function _checkInitializing() internal view virtual {... */\n    tag_140:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3147:3213  0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00 */\n      0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8558:8598  _getInitializableStorage()._initializing */\n      sload\n      shl(0x40, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7144:7217  if (!_isInitializing()) {... */\n      tag_100\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7189:7206  NotInitializing() */\n      mload(0x40)\n      shl(0xe3, 0x1afcd79f)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3774:4022  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_145:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1313:1335  OwnableStorageLocation */\n      0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3923:3931  $._owner */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3941:3960  $._owner = newOwner */\n      dup2\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      dup2\n      and\n      swap2\n      dup3\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3975:4015  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3923:3931  $._owner */\n      swap3\n      and\n      swap2\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3975:4015  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3847:3871  OwnableStorage storage $ */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3975:4015  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3837:4022  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3774:4022  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:187   */\n    tag_164:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_167\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:181   */\n    tag_167:\n        /* \"#utility.yul\":14:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:589   */\n    tag_17:\n        /* \"#utility.yul\":278:284   */\n      0x00\n        /* \"#utility.yul\":286:292   */\n      dup1\n        /* \"#utility.yul\":294:300   */\n      0x00\n        /* \"#utility.yul\":302:308   */\n      dup1\n        /* \"#utility.yul\":355:358   */\n      0x80\n        /* \"#utility.yul\":343:352   */\n      dup6\n        /* \"#utility.yul\":334:341   */\n      dup8\n        /* \"#utility.yul\":330:353   */\n      sub\n        /* \"#utility.yul\":326:359   */\n      slt\n        /* \"#utility.yul\":323:376   */\n      iszero\n      tag_169\n      jumpi\n        /* \"#utility.yul\":372:373   */\n      0x00\n        /* \"#utility.yul\":369:370   */\n      dup1\n        /* \"#utility.yul\":362:374   */\n      revert\n        /* \"#utility.yul\":323:376   */\n    tag_169:\n        /* \"#utility.yul\":395:424   */\n      tag_170\n        /* \"#utility.yul\":414:423   */\n      dup6\n        /* \"#utility.yul\":395:424   */\n      tag_164\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":385:424   */\n      swap4\n      pop\n        /* \"#utility.yul\":471:473   */\n      0x20\n        /* \"#utility.yul\":460:469   */\n      dup6\n        /* \"#utility.yul\":456:474   */\n      add\n        /* \"#utility.yul\":443:475   */\n      calldataload\n        /* \"#utility.yul\":433:475   */\n      swap3\n      pop\n        /* \"#utility.yul\":494:532   */\n      tag_171\n        /* \"#utility.yul\":528:530   */\n      0x40\n        /* \"#utility.yul\":517:526   */\n      dup7\n        /* \"#utility.yul\":513:531   */\n      add\n        /* \"#utility.yul\":494:532   */\n      tag_164\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":192:589   */\n      swap4\n      swap7\n      swap3\n      swap6\n      pop\n        /* \"#utility.yul\":484:532   */\n      swap3\n      swap4\n        /* \"#utility.yul\":579:581   */\n      0x60\n        /* \"#utility.yul\":564:582   */\n      add\n        /* \"#utility.yul\":551:583   */\n      calldataload\n      swap3\n      pop\n      pop\n        /* \"#utility.yul\":192:589   */\n      jump\t// out\n        /* \"#utility.yul\":594:854   */\n    tag_21:\n        /* \"#utility.yul\":662:668   */\n      0x00\n        /* \"#utility.yul\":670:676   */\n      dup1\n        /* \"#utility.yul\":723:725   */\n      0x40\n        /* \"#utility.yul\":711:720   */\n      dup4\n        /* \"#utility.yul\":702:709   */\n      dup6\n        /* \"#utility.yul\":698:721   */\n      sub\n        /* \"#utility.yul\":694:726   */\n      slt\n        /* \"#utility.yul\":691:743   */\n      iszero\n      tag_173\n      jumpi\n        /* \"#utility.yul\":739:740   */\n      0x00\n        /* \"#utility.yul\":736:737   */\n      dup1\n        /* \"#utility.yul\":729:741   */\n      revert\n        /* \"#utility.yul\":691:743   */\n    tag_173:\n        /* \"#utility.yul\":762:791   */\n      tag_174\n        /* \"#utility.yul\":781:790   */\n      dup4\n        /* \"#utility.yul\":762:791   */\n      tag_164\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":752:791   */\n      swap2\n      pop\n        /* \"#utility.yul\":810:848   */\n      tag_175\n        /* \"#utility.yul\":844:846   */\n      0x20\n        /* \"#utility.yul\":833:842   */\n      dup5\n        /* \"#utility.yul\":829:847   */\n      add\n        /* \"#utility.yul\":810:848   */\n      tag_164\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":800:848   */\n      swap1\n      pop\n        /* \"#utility.yul\":594:854   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":859:1045   */\n    tag_25:\n        /* \"#utility.yul\":918:924   */\n      0x00\n        /* \"#utility.yul\":971:973   */\n      0x20\n        /* \"#utility.yul\":959:968   */\n      dup3\n        /* \"#utility.yul\":950:957   */\n      dup5\n        /* \"#utility.yul\":946:969   */\n      sub\n        /* \"#utility.yul\":942:974   */\n      slt\n        /* \"#utility.yul\":939:991   */\n      iszero\n      tag_177\n      jumpi\n        /* \"#utility.yul\":987:988   */\n      0x00\n        /* \"#utility.yul\":984:985   */\n      dup1\n        /* \"#utility.yul\":977:989   */\n      revert\n        /* \"#utility.yul\":939:991   */\n    tag_177:\n        /* \"#utility.yul\":1010:1039   */\n      tag_178\n        /* \"#utility.yul\":1029:1038   */\n      dup3\n        /* \"#utility.yul\":1010:1039   */\n      tag_164\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":1000:1039   */\n      swap4\n        /* \"#utility.yul\":859:1045   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3040:3317   */\n    tag_68:\n        /* \"#utility.yul\":3107:3113   */\n      0x00\n        /* \"#utility.yul\":3160:3162   */\n      0x20\n        /* \"#utility.yul\":3148:3157   */\n      dup3\n        /* \"#utility.yul\":3139:3146   */\n      dup5\n        /* \"#utility.yul\":3135:3158   */\n      sub\n        /* \"#utility.yul\":3131:3163   */\n      slt\n        /* \"#utility.yul\":3128:3180   */\n      iszero\n      tag_186\n      jumpi\n        /* \"#utility.yul\":3176:3177   */\n      0x00\n        /* \"#utility.yul\":3173:3174   */\n      dup1\n        /* \"#utility.yul\":3166:3178   */\n      revert\n        /* \"#utility.yul\":3128:3180   */\n    tag_186:\n        /* \"#utility.yul\":3208:3217   */\n      dup2\n        /* \"#utility.yul\":3202:3218   */\n      mload\n        /* \"#utility.yul\":3261:3266   */\n      dup1\n        /* \"#utility.yul\":3254:3267   */\n      iszero\n        /* \"#utility.yul\":3247:3268   */\n      iszero\n        /* \"#utility.yul\":3240:3245   */\n      dup2\n        /* \"#utility.yul\":3237:3269   */\n      eq\n        /* \"#utility.yul\":3227:3287   */\n      tag_178\n      jumpi\n        /* \"#utility.yul\":3283:3284   */\n      0x00\n        /* \"#utility.yul\":3280:3281   */\n      dup1\n        /* \"#utility.yul\":3273:3285   */\n      revert\n\n    auxdata: 0xa2646970667358221220fd19e1bc840714369b9ca6675dadbaeec4b6270758b38c40672af0e2e2e23e1664736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50610b1a8061001d5f395ff3fe608060405234801561000f575f80fd5b50600436106100a6575f3560e01c80638da5cb5b1161006e5780638da5cb5b14610145578063b172b22214610165578063cb67f94814610178578063e30c39781461018b578063f2fde38b14610193578063fc0c546a146101a6575f80fd5b806340678be4146100aa578063485cc955146100bf5780635de9a137146100d2578063715018a61461013557806379ba50971461013d575b5f80fd5b6100bd6100b8366004610a33565b6101b8565b005b6100bd6100cd366004610a74565b6103f0565b61010b6100e0366004610aa5565b600260208190525f91825260409091208054600182015491909201546001600160a01b039092169183565b604080516001600160a01b0390941684526020840192909252908201526060015b60405180910390f35b6100bd6105d8565b6100bd6105eb565b61014d610633565b6040516001600160a01b03909116815260200161012c565b60015461014d906001600160a01b031681565b6100bd610186366004610aa5565b610667565b61014d61083c565b6100bd6101a1366004610aa5565b610864565b5f5461014d906001600160a01b031681565b6001546001600160a01b0316331461020b5760405162461bcd60e51b815260206004820152601160248201527013db9b1e48111053c818d85b8818d85b1b607a1b60448201526064015b60405180910390fd5b5f831161025a5760405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e20300000006044820152606401610202565b42811161029f5760405162461bcd60e51b8152602060048201526013602482015272496e76616c696420756e6c6f636b2074696d6560681b6044820152606401610202565b5f546040516323b872dd60e01b81526001600160a01b03868116600483015230602483015260448201869052909116906323b872dd906064016020604051808303815f875af11580156102f4573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103189190610ac5565b6103565760405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b6044820152606401610202565b604080516060810182526001600160a01b0386811680835260208084018881528486018781528885165f908152600280855290889020965187546001600160a01b031916961695909517865590516001860155519390920192909255825186815290810184905290917fd741e738a23fd18a03a26522320d9fc6cac1fed483e215ea9150fbc2fc43385d910160405180910390a250505050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff16159067ffffffffffffffff165f811580156104355750825b90505f8267ffffffffffffffff1660011480156104515750303b155b90508115801561045f575080155b1561047d5760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff1916600117855583156104a757845460ff60401b1916600160401b1785555b6001600160a01b0387166104f55760405162461bcd60e51b8152602060048201526015602482015274496e76616c696420746f6b656e206164647265737360581b6044820152606401610202565b6001600160a01b03861661054b5760405162461bcd60e51b815260206004820152601a60248201527f496e76616c696420676f7665726e616e636520616464726573730000000000006044820152606401610202565b6105536108e9565b5f80546001600160a01b03808a166001600160a01b031992831617909255600180549289169290911682179055610589906108f1565b83156105cf57845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50505050505050565b6105e061092d565b6105e95f6108f1565b565b33806105f561083c565b6001600160a01b0316146106275760405163118cdaa760e01b81526001600160a01b0382166004820152602401610202565b610630816108f1565b50565b5f807f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c1993005b546001600160a01b031692915050565b6001600160a01b0381165f90815260026020526040902060018101546106c25760405162461bcd60e51b815260206004820152601060248201526f139bc81d1bdad95b9cc81b1bd8dad95960821b6044820152606401610202565b806002015442101561070c5760405162461bcd60e51b8152602060048201526013602482015272151bdad95b9cc81cdd1a5b1b081b1bd8dad959606a1b6044820152606401610202565b5f548154600183015460405163a9059cbb60e01b81526001600160a01b039283166004820152602481019190915291169063a9059cbb906044016020604051808303815f875af1158015610762573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107869190610ac5565b6107c45760405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b6044820152606401610202565b805460018201546040519081526001600160a01b03909116907fe7b379c6c1fa169e9079c25e9143b127637eef8ec8c9d5c06ddb4ab3e11958889060200160405180910390a2506001600160a01b03165f908152600260208190526040822080546001600160a01b0319168155600181018390550155565b5f807f237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c00610657565b61086c61092d565b7f237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c0080546001600160a01b0319166001600160a01b03831690811782556108b0610633565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a35050565b6105e961095f565b7f237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c0080546001600160a01b0319168155610929826109a8565b5050565b33610936610633565b6001600160a01b0316146105e95760405163118cdaa760e01b8152336004820152602401610202565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff166105e957604051631afcd79f60e31b815260040160405180910390fd5b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a3505050565b80356001600160a01b0381168114610a2e575f80fd5b919050565b5f805f8060808587031215610a46575f80fd5b610a4f85610a18565b935060208501359250610a6460408601610a18565b9396929550929360600135925050565b5f8060408385031215610a85575f80fd5b610a8e83610a18565b9150610a9c60208401610a18565b90509250929050565b5f60208284031215610ab5575f80fd5b610abe82610a18565b9392505050565b5f60208284031215610ad5575f80fd5b81518015158114610abe575f80fdfea2646970667358221220fd19e1bc840714369b9ca6675dadbaeec4b6270758b38c40672af0e2e2e23e1664736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xB1A DUP1 PUSH2 0x1D PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA6 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x6E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x145 JUMPI DUP1 PUSH4 0xB172B222 EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0xCB67F948 EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0xE30C3978 EQ PUSH2 0x18B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x1A6 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x40678BE4 EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0x485CC955 EQ PUSH2 0xBF JUMPI DUP1 PUSH4 0x5DE9A137 EQ PUSH2 0xD2 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x13D JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xBD PUSH2 0xB8 CALLDATASIZE PUSH1 0x4 PUSH2 0xA33 JUMP JUMPDEST PUSH2 0x1B8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xBD PUSH2 0xCD CALLDATASIZE PUSH1 0x4 PUSH2 0xA74 JUMP JUMPDEST PUSH2 0x3F0 JUMP JUMPDEST PUSH2 0x10B PUSH2 0xE0 CALLDATASIZE PUSH1 0x4 PUSH2 0xAA5 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD SWAP2 SWAP1 SWAP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBD PUSH2 0x5D8 JUMP JUMPDEST PUSH2 0xBD PUSH2 0x5EB JUMP JUMPDEST PUSH2 0x14D PUSH2 0x633 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x12C JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x14D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xBD PUSH2 0x186 CALLDATASIZE PUSH1 0x4 PUSH2 0xAA5 JUMP JUMPDEST PUSH2 0x667 JUMP JUMPDEST PUSH2 0x14D PUSH2 0x83C JUMP JUMPDEST PUSH2 0xBD PUSH2 0x1A1 CALLDATASIZE PUSH1 0x4 PUSH2 0xAA5 JUMP JUMPDEST PUSH2 0x864 JUMP JUMPDEST PUSH0 SLOAD PUSH2 0x14D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x20B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x13DB9B1E48111053C818D85B8818D85B1B PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP4 GT PUSH2 0x25A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E2030000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x202 JUMP JUMPDEST TIMESTAMP DUP2 GT PUSH2 0x29F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x496E76616C696420756E6C6F636B2074696D65 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x202 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP7 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2F4 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x318 SWAP2 SWAP1 PUSH2 0xAC5 JUMP JUMPDEST PUSH2 0x356 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x151C985B9CD9995C8819985A5B1959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x202 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP1 DUP4 MSTORE PUSH1 0x20 DUP1 DUP5 ADD DUP9 DUP2 MSTORE DUP5 DUP7 ADD DUP8 DUP2 MSTORE DUP9 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 DUP1 DUP6 MSTORE SWAP1 DUP9 SWAP1 KECCAK256 SWAP7 MLOAD DUP8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP7 AND SWAP6 SWAP1 SWAP6 OR DUP7 SSTORE SWAP1 MLOAD PUSH1 0x1 DUP7 ADD SSTORE MLOAD SWAP4 SWAP1 SWAP3 ADD SWAP3 SWAP1 SWAP3 SSTORE DUP3 MLOAD DUP7 DUP2 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 SWAP2 PUSH32 0xD741E738A23FD18A03A26522320D9FC6CAC1FED483E215EA9150FBC2FC43385D SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 DIV PUSH1 0xFF AND ISZERO SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH0 DUP2 ISZERO DUP1 ISZERO PUSH2 0x435 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0x451 JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x45F JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x47D JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 OR DUP6 SSTORE DUP4 ISZERO PUSH2 0x4A7 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND PUSH1 0x1 PUSH1 0x40 SHL OR DUP6 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH2 0x4F5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x496E76616C696420746F6B656E2061646472657373 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x202 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH2 0x54B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420676F7665726E616E63652061646472657373000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x202 JUMP JUMPDEST PUSH2 0x553 PUSH2 0x8E9 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP11 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR SWAP1 SWAP3 SSTORE PUSH1 0x1 DUP1 SLOAD SWAP3 DUP10 AND SWAP3 SWAP1 SWAP2 AND DUP3 OR SWAP1 SSTORE PUSH2 0x589 SWAP1 PUSH2 0x8F1 JUMP JUMPDEST DUP4 ISZERO PUSH2 0x5CF JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND DUP6 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x5E0 PUSH2 0x92D JUMP JUMPDEST PUSH2 0x5E9 PUSH0 PUSH2 0x8F1 JUMP JUMPDEST JUMP JUMPDEST CALLER DUP1 PUSH2 0x5F5 PUSH2 0x83C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x627 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x202 JUMP JUMPDEST PUSH2 0x630 DUP2 PUSH2 0x8F1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 JUMPDEST SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD PUSH2 0x6C2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x139BC81D1BDAD95B9CC81B1BD8DAD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x202 JUMP JUMPDEST DUP1 PUSH1 0x2 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0x70C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x151BDAD95B9CC81CDD1A5B1B081B1BD8DAD959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x202 JUMP JUMPDEST PUSH0 SLOAD DUP2 SLOAD PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x762 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x786 SWAP2 SWAP1 PUSH2 0xAC5 JUMP JUMPDEST PUSH2 0x7C4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x151C985B9CD9995C8819985A5B1959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x202 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0xE7B379C6C1FA169E9079C25E9143B127637EEF8EC8C9D5C06DDB4AB3E1195888 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP2 SSTORE PUSH1 0x1 DUP2 ADD DUP4 SWAP1 SSTORE ADD SSTORE JUMP JUMPDEST PUSH0 DUP1 PUSH32 0x237E158222E3E6968B72B9DB0D8043AACF074AD9F650F0D1606B4D82EE432C00 PUSH2 0x657 JUMP JUMPDEST PUSH2 0x86C PUSH2 0x92D JUMP JUMPDEST PUSH32 0x237E158222E3E6968B72B9DB0D8043AACF074AD9F650F0D1606B4D82EE432C00 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR DUP3 SSTORE PUSH2 0x8B0 PUSH2 0x633 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x38D16B8CAC22D99FC7C124B9CD0DE2D3FA1FAEF420BFE791D8C362D765E22700 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x5E9 PUSH2 0x95F JUMP JUMPDEST PUSH32 0x237E158222E3E6968B72B9DB0D8043AACF074AD9F650F0D1606B4D82EE432C00 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP2 SSTORE PUSH2 0x929 DUP3 PUSH2 0x9A8 JUMP JUMPDEST POP POP JUMP JUMPDEST CALLER PUSH2 0x936 PUSH2 0x633 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x5E9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x202 JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x5E9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 DUP3 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP3 AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xA2E JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xA46 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xA4F DUP6 PUSH2 0xA18 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH2 0xA64 PUSH1 0x40 DUP7 ADD PUSH2 0xA18 JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP3 SWAP4 PUSH1 0x60 ADD CALLDATALOAD SWAP3 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA85 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xA8E DUP4 PUSH2 0xA18 JUMP JUMPDEST SWAP2 POP PUSH2 0xA9C PUSH1 0x20 DUP5 ADD PUSH2 0xA18 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAB5 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xABE DUP3 PUSH2 0xA18 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAD5 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xABE JUMPI PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 REVERT NOT 0xE1 0xBC DUP5 SMOD EQ CALLDATASIZE SWAP12 SWAP13 0xA6 PUSH8 0x5DADBAEEC4B62707 PC 0xB3 DUP13 BLOCKHASH PUSH8 0x2AF0E2E2E23E1664 PUSH20 0x6F6C634300081400330000000000000000000000 ",
							"sourceMap": "303:1818:5:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@__Ownable2Step_init_37": {
									"entryPoint": 2281,
									"id": 37,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkInitializing_507": {
									"entryPoint": 2399,
									"id": 507,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_259": {
									"entryPoint": 2349,
									"id": 259,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getInitializableStorage_598": {
									"entryPoint": null,
									"id": 598,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getOwnable2StepStorage_25": {
									"entryPoint": null,
									"id": 25,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getOwnableStorage_162": {
									"entryPoint": null,
									"id": 162,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_initializableStorageSlot_584": {
									"entryPoint": null,
									"id": 584,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_isInitializing_575": {
									"entryPoint": null,
									"id": 575,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_msgSender_705": {
									"entryPoint": null,
									"id": 705,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 2289,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_330": {
									"entryPoint": 2472,
									"id": 330,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@acceptOwnership_135": {
									"entryPoint": 1515,
									"id": 135,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@governanceContract_736": {
									"entryPoint": null,
									"id": 736,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@initialize_819": {
									"entryPoint": 1008,
									"id": 819,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@lockForDEX_879": {
									"entryPoint": 440,
									"id": 879,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@locks_748": {
									"entryPoint": null,
									"id": 748,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_242": {
									"entryPoint": 1587,
									"id": 242,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pendingOwner_59": {
									"entryPoint": 2108,
									"id": 59,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_273": {
									"entryPoint": 1496,
									"id": 273,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@token_734": {
									"entryPoint": null,
									"id": 734,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_87": {
									"entryPoint": 2148,
									"id": 87,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@unlockTokens_934": {
									"entryPoint": 1639,
									"id": 934,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 2584,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2725,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 2676,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256t_addresst_uint256": {
									"entryPoint": 2611,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 2757,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0d7c6f828de87952fca262cc4b14b50f81b65b63cac9cf1ed7420737d6d7e32a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_23776fb288274964545f569a8ed394955609b3a092d15c2921488382ceadb7e6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_30ffff19ac546a939931fb7c95cf4c9a2a3d5bf3e75c143dfb2075e4b78f021d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_613fd76440d4b379fde309457caabc84e732a7046afb346ee2e95eb2e6a4f407__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e4b297bc74c0ea843dcb41a7c34db9c9a65b1e779888213d098f02662d62d9ab__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5989:6",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:6"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:6",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:6"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:6"
															},
															"nodeType": "YulIf",
															"src": "111:70:6"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:6",
														"type": ""
													}
												],
												"src": "14:173:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "313:276:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "360:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "369:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "372:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "362:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "362:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "362:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "334:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "343:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "330:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "330:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "355:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "326:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "326:33:6"
															},
															"nodeType": "YulIf",
															"src": "323:53:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "385:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "414:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "395:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "395:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "385:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "433:42:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "460:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "471:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "456:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "456:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "443:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "443:32:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "484:48:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "517:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "528:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "513:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "513:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "494:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "494:38:6"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "484:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "541:42:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "568:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "579:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "564:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "564:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "551:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "551:32:6"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "541:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "255:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "266:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "278:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "286:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "294:6:6",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "302:6:6",
														"type": ""
													}
												],
												"src": "192:397:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "681:173:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "727:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "736:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "739:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "729:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "729:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "729:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "702:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "711:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "698:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "698:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "723:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "694:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "694:32:6"
															},
															"nodeType": "YulIf",
															"src": "691:52:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "752:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "781:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "762:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "762:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "752:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "800:48:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "833:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "844:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "829:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "829:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "810:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "810:38:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "800:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "639:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "650:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "662:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "670:6:6",
														"type": ""
													}
												],
												"src": "594:260:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "929:116:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "975:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "984:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "987:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "977:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "977:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "977:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "950:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "959:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "946:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "946:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "971:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "942:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "942:32:6"
															},
															"nodeType": "YulIf",
															"src": "939:52:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1000:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1029:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1010:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1010:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1000:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "895:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "906:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "918:6:6",
														"type": ""
													}
												],
												"src": "859:186:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1207:188:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1217:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1229:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1240:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1225:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1225:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1217:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1259:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1274:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1290:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1295:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1286:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1286:11:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1299:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1282:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1282:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1270:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1270:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1252:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1252:51:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1252:51:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1323:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1334:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1319:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1319:18:6"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "1339:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1312:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1312:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1312:34:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1366:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1377:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1362:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1362:18:6"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "1382:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1355:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1355:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1355:34:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1160:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1171:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1179:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1187:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1198:4:6",
														"type": ""
													}
												],
												"src": "1050:345:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1501:102:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1511:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1523:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1534:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1519:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1519:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1511:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1553:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1568:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1584:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1589:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1580:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1580:11:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1593:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1576:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1576:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1564:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1564:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1546:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1546:51:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1546:51:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1470:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1481:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1492:4:6",
														"type": ""
													}
												],
												"src": "1400:203:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1782:167:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1799:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1810:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1792:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1792:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1792:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1833:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1844:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1829:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1829:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1849:2:6",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1822:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1822:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1822:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1872:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1883:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1868:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1868:18:6"
																	},
																	{
																		"hexValue": "4f6e6c792044414f2063616e2063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1888:19:6",
																		"type": "",
																		"value": "Only DAO can call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1861:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1861:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1861:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1917:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1929:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1940:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1925:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1925:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1917:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e4b297bc74c0ea843dcb41a7c34db9c9a65b1e779888213d098f02662d62d9ab__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1759:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1773:4:6",
														"type": ""
													}
												],
												"src": "1608:341:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2128:179:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2145:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2156:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2138:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2138:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2138:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2179:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2190:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2175:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2175:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2195:2:6",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2168:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2168:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2168:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2218:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2229:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2214:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2214:18:6"
																	},
																	{
																		"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e2030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2234:31:6",
																		"type": "",
																		"value": "Amount must be greater than 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2207:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2207:59:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2207:59:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2275:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2287:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2298:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2283:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2283:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2275:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2105:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2119:4:6",
														"type": ""
													}
												],
												"src": "1954:353:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2486:169:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2503:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2514:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2496:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2496:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2496:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2537:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2548:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2533:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2533:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2553:2:6",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2526:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2526:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2526:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2576:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2587:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2572:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2572:18:6"
																	},
																	{
																		"hexValue": "496e76616c696420756e6c6f636b2074696d65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2592:21:6",
																		"type": "",
																		"value": "Invalid unlock time"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2565:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2565:49:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2565:49:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2623:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2635:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2646:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2631:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2631:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2623:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_613fd76440d4b379fde309457caabc84e732a7046afb346ee2e95eb2e6a4f407__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2463:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2477:4:6",
														"type": ""
													}
												],
												"src": "2312:343:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2817:218:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2827:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2839:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2850:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2835:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2835:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2827:4:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2862:29:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2880:3:6",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2885:1:6",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2876:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2876:11:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2889:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "2872:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2872:19:6"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2866:2:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2907:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2922:6:6"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2930:2:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2918:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2918:15:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2900:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2900:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2900:34:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2954:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2965:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2950:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2950:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "2974:6:6"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2982:2:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2970:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2970:15:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2943:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2943:43:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2943:43:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3006:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3017:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3002:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3002:18:6"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "3022:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2995:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2995:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2995:34:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2770:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2781:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2789:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2797:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2808:4:6",
														"type": ""
													}
												],
												"src": "2660:375:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3118:199:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3164:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3173:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3176:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3166:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3166:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3166:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3139:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3148:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3135:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3135:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3160:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3131:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3131:32:6"
															},
															"nodeType": "YulIf",
															"src": "3128:52:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3189:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3208:9:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3202:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3202:16:6"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3193:5:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3271:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3280:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3283:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3273:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3273:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3273:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3240:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "3261:5:6"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "3254:6:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3254:13:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "3247:6:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3247:21:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3237:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3237:32:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3230:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3230:40:6"
															},
															"nodeType": "YulIf",
															"src": "3227:60:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3296:15:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3306:5:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3296:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3084:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3095:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3107:6:6",
														"type": ""
													}
												],
												"src": "3040:277:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3496:165:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3513:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3524:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3506:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3506:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3506:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3547:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3558:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3543:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3543:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3563:2:6",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3536:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3536:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3536:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3586:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3597:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3582:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3582:18:6"
																	},
																	{
																		"hexValue": "5472616e73666572206661696c6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3602:17:6",
																		"type": "",
																		"value": "Transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3575:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3575:45:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3575:45:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3629:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3641:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3652:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3637:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3637:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3629:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3473:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3487:4:6",
														"type": ""
													}
												],
												"src": "3322:339:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3795:119:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3805:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3817:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3828:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3813:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3813:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3805:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3847:9:6"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3858:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3840:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3840:25:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3840:25:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3885:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3896:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3881:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3881:18:6"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3901:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3874:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3874:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3874:34:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3756:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3767:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3775:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3786:4:6",
														"type": ""
													}
												],
												"src": "3666:248:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4093:171:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4110:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4121:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4103:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4103:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4103:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4144:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4155:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4140:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4140:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4160:2:6",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4133:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4133:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4133:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4183:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4194:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4179:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4179:18:6"
																	},
																	{
																		"hexValue": "496e76616c696420746f6b656e2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4199:23:6",
																		"type": "",
																		"value": "Invalid token address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4172:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4172:51:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4172:51:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4232:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4244:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4255:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4240:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4240:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4232:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4070:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4084:4:6",
														"type": ""
													}
												],
												"src": "3919:345:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4443:176:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4460:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4471:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4453:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4453:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4453:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4494:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4505:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4490:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4490:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4510:2:6",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4483:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4483:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4483:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4533:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4544:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4529:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4529:18:6"
																	},
																	{
																		"hexValue": "496e76616c696420676f7665726e616e63652061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4549:28:6",
																		"type": "",
																		"value": "Invalid governance address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4522:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4522:56:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4522:56:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4587:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4599:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4610:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4595:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4595:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4587:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_23776fb288274964545f569a8ed394955609b3a092d15c2921488382ceadb7e6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4420:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4434:4:6",
														"type": ""
													}
												],
												"src": "4269:350:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4732:101:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4742:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4754:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4765:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4750:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4750:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4742:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4784:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4799:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4807:18:6",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4795:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4795:31:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4777:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4777:50:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4777:50:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4701:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4712:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4723:4:6",
														"type": ""
													}
												],
												"src": "4624:209:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5012:166:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5029:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5040:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5022:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5022:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5022:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5063:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5074:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5059:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5059:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5079:2:6",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5052:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5052:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5052:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5102:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5113:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5098:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5098:18:6"
																	},
																	{
																		"hexValue": "4e6f20746f6b656e73206c6f636b6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5118:18:6",
																		"type": "",
																		"value": "No tokens locked"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5091:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5091:46:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5091:46:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5146:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5158:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5169:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5154:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5154:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5146:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0d7c6f828de87952fca262cc4b14b50f81b65b63cac9cf1ed7420737d6d7e32a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4989:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5003:4:6",
														"type": ""
													}
												],
												"src": "4838:340:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5357:169:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5374:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5385:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5367:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5367:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5367:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5408:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5419:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5404:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5404:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5424:2:6",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5397:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5397:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5397:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5447:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5458:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5443:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5443:18:6"
																	},
																	{
																		"hexValue": "546f6b656e73207374696c6c206c6f636b6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5463:21:6",
																		"type": "",
																		"value": "Tokens still locked"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5436:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5436:49:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5436:49:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5494:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5506:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5517:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5502:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5502:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5494:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_30ffff19ac546a939931fb7c95cf4c9a2a3d5bf3e75c143dfb2075e4b78f021d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5334:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5348:4:6",
														"type": ""
													}
												],
												"src": "5183:343:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5660:145:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5670:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5682:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5693:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5678:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5678:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5670:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5712:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5727:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5743:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5748:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "5739:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5739:11:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5752:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "5735:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5735:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5723:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5723:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5705:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5705:51:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5705:51:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5776:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5787:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5772:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5772:18:6"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5792:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5765:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5765:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5765:34:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5621:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5632:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5640:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5651:4:6",
														"type": ""
													}
												],
												"src": "5531:274:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5911:76:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5921:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5933:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5944:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5929:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5929:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5921:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5963:9:6"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5974:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5956:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5956:25:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5956:25:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5880:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5891:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5902:4:6",
														"type": ""
													}
												],
												"src": "5810:177:6"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := abi_decode_address(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_e4b297bc74c0ea843dcb41a7c34db9c9a65b1e779888213d098f02662d62d9ab__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"Only DAO can call\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Amount must be greater than 0\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_613fd76440d4b379fde309457caabc84e732a7046afb346ee2e95eb2e6a4f407__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Invalid unlock time\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Transfer failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Invalid token address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_23776fb288274964545f569a8ed394955609b3a092d15c2921488382ceadb7e6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Invalid governance address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffff))\n    }\n    function abi_encode_tuple_t_stringliteral_0d7c6f828de87952fca262cc4b14b50f81b65b63cac9cf1ed7420737d6d7e32a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"No tokens locked\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_30ffff19ac546a939931fb7c95cf4c9a2a3d5bf3e75c143dfb2075e4b78f021d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Tokens still locked\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100a6575f3560e01c80638da5cb5b1161006e5780638da5cb5b14610145578063b172b22214610165578063cb67f94814610178578063e30c39781461018b578063f2fde38b14610193578063fc0c546a146101a6575f80fd5b806340678be4146100aa578063485cc955146100bf5780635de9a137146100d2578063715018a61461013557806379ba50971461013d575b5f80fd5b6100bd6100b8366004610a33565b6101b8565b005b6100bd6100cd366004610a74565b6103f0565b61010b6100e0366004610aa5565b600260208190525f91825260409091208054600182015491909201546001600160a01b039092169183565b604080516001600160a01b0390941684526020840192909252908201526060015b60405180910390f35b6100bd6105d8565b6100bd6105eb565b61014d610633565b6040516001600160a01b03909116815260200161012c565b60015461014d906001600160a01b031681565b6100bd610186366004610aa5565b610667565b61014d61083c565b6100bd6101a1366004610aa5565b610864565b5f5461014d906001600160a01b031681565b6001546001600160a01b0316331461020b5760405162461bcd60e51b815260206004820152601160248201527013db9b1e48111053c818d85b8818d85b1b607a1b60448201526064015b60405180910390fd5b5f831161025a5760405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e20300000006044820152606401610202565b42811161029f5760405162461bcd60e51b8152602060048201526013602482015272496e76616c696420756e6c6f636b2074696d6560681b6044820152606401610202565b5f546040516323b872dd60e01b81526001600160a01b03868116600483015230602483015260448201869052909116906323b872dd906064016020604051808303815f875af11580156102f4573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103189190610ac5565b6103565760405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b6044820152606401610202565b604080516060810182526001600160a01b0386811680835260208084018881528486018781528885165f908152600280855290889020965187546001600160a01b031916961695909517865590516001860155519390920192909255825186815290810184905290917fd741e738a23fd18a03a26522320d9fc6cac1fed483e215ea9150fbc2fc43385d910160405180910390a250505050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff16159067ffffffffffffffff165f811580156104355750825b90505f8267ffffffffffffffff1660011480156104515750303b155b90508115801561045f575080155b1561047d5760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff1916600117855583156104a757845460ff60401b1916600160401b1785555b6001600160a01b0387166104f55760405162461bcd60e51b8152602060048201526015602482015274496e76616c696420746f6b656e206164647265737360581b6044820152606401610202565b6001600160a01b03861661054b5760405162461bcd60e51b815260206004820152601a60248201527f496e76616c696420676f7665726e616e636520616464726573730000000000006044820152606401610202565b6105536108e9565b5f80546001600160a01b03808a166001600160a01b031992831617909255600180549289169290911682179055610589906108f1565b83156105cf57845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50505050505050565b6105e061092d565b6105e95f6108f1565b565b33806105f561083c565b6001600160a01b0316146106275760405163118cdaa760e01b81526001600160a01b0382166004820152602401610202565b610630816108f1565b50565b5f807f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c1993005b546001600160a01b031692915050565b6001600160a01b0381165f90815260026020526040902060018101546106c25760405162461bcd60e51b815260206004820152601060248201526f139bc81d1bdad95b9cc81b1bd8dad95960821b6044820152606401610202565b806002015442101561070c5760405162461bcd60e51b8152602060048201526013602482015272151bdad95b9cc81cdd1a5b1b081b1bd8dad959606a1b6044820152606401610202565b5f548154600183015460405163a9059cbb60e01b81526001600160a01b039283166004820152602481019190915291169063a9059cbb906044016020604051808303815f875af1158015610762573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107869190610ac5565b6107c45760405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b6044820152606401610202565b805460018201546040519081526001600160a01b03909116907fe7b379c6c1fa169e9079c25e9143b127637eef8ec8c9d5c06ddb4ab3e11958889060200160405180910390a2506001600160a01b03165f908152600260208190526040822080546001600160a01b0319168155600181018390550155565b5f807f237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c00610657565b61086c61092d565b7f237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c0080546001600160a01b0319166001600160a01b03831690811782556108b0610633565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a35050565b6105e961095f565b7f237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c0080546001600160a01b0319168155610929826109a8565b5050565b33610936610633565b6001600160a01b0316146105e95760405163118cdaa760e01b8152336004820152602401610202565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff166105e957604051631afcd79f60e31b815260040160405180910390fd5b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a3505050565b80356001600160a01b0381168114610a2e575f80fd5b919050565b5f805f8060808587031215610a46575f80fd5b610a4f85610a18565b935060208501359250610a6460408601610a18565b9396929550929360600135925050565b5f8060408385031215610a85575f80fd5b610a8e83610a18565b9150610a9c60208401610a18565b90509250929050565b5f60208284031215610ab5575f80fd5b610abe82610a18565b9392505050565b5f60208284031215610ad5575f80fd5b81518015158114610abe575f80fdfea2646970667358221220fd19e1bc840714369b9ca6675dadbaeec4b6270758b38c40672af0e2e2e23e1664736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA6 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x6E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x145 JUMPI DUP1 PUSH4 0xB172B222 EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0xCB67F948 EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0xE30C3978 EQ PUSH2 0x18B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x1A6 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x40678BE4 EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0x485CC955 EQ PUSH2 0xBF JUMPI DUP1 PUSH4 0x5DE9A137 EQ PUSH2 0xD2 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x13D JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xBD PUSH2 0xB8 CALLDATASIZE PUSH1 0x4 PUSH2 0xA33 JUMP JUMPDEST PUSH2 0x1B8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xBD PUSH2 0xCD CALLDATASIZE PUSH1 0x4 PUSH2 0xA74 JUMP JUMPDEST PUSH2 0x3F0 JUMP JUMPDEST PUSH2 0x10B PUSH2 0xE0 CALLDATASIZE PUSH1 0x4 PUSH2 0xAA5 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD SWAP2 SWAP1 SWAP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBD PUSH2 0x5D8 JUMP JUMPDEST PUSH2 0xBD PUSH2 0x5EB JUMP JUMPDEST PUSH2 0x14D PUSH2 0x633 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x12C JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x14D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xBD PUSH2 0x186 CALLDATASIZE PUSH1 0x4 PUSH2 0xAA5 JUMP JUMPDEST PUSH2 0x667 JUMP JUMPDEST PUSH2 0x14D PUSH2 0x83C JUMP JUMPDEST PUSH2 0xBD PUSH2 0x1A1 CALLDATASIZE PUSH1 0x4 PUSH2 0xAA5 JUMP JUMPDEST PUSH2 0x864 JUMP JUMPDEST PUSH0 SLOAD PUSH2 0x14D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x20B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x13DB9B1E48111053C818D85B8818D85B1B PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP4 GT PUSH2 0x25A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E2030000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x202 JUMP JUMPDEST TIMESTAMP DUP2 GT PUSH2 0x29F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x496E76616C696420756E6C6F636B2074696D65 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x202 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP7 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2F4 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x318 SWAP2 SWAP1 PUSH2 0xAC5 JUMP JUMPDEST PUSH2 0x356 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x151C985B9CD9995C8819985A5B1959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x202 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP1 DUP4 MSTORE PUSH1 0x20 DUP1 DUP5 ADD DUP9 DUP2 MSTORE DUP5 DUP7 ADD DUP8 DUP2 MSTORE DUP9 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 DUP1 DUP6 MSTORE SWAP1 DUP9 SWAP1 KECCAK256 SWAP7 MLOAD DUP8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP7 AND SWAP6 SWAP1 SWAP6 OR DUP7 SSTORE SWAP1 MLOAD PUSH1 0x1 DUP7 ADD SSTORE MLOAD SWAP4 SWAP1 SWAP3 ADD SWAP3 SWAP1 SWAP3 SSTORE DUP3 MLOAD DUP7 DUP2 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 SWAP2 PUSH32 0xD741E738A23FD18A03A26522320D9FC6CAC1FED483E215EA9150FBC2FC43385D SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 DIV PUSH1 0xFF AND ISZERO SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH0 DUP2 ISZERO DUP1 ISZERO PUSH2 0x435 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0x451 JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x45F JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x47D JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 OR DUP6 SSTORE DUP4 ISZERO PUSH2 0x4A7 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND PUSH1 0x1 PUSH1 0x40 SHL OR DUP6 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH2 0x4F5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x496E76616C696420746F6B656E2061646472657373 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x202 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH2 0x54B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420676F7665726E616E63652061646472657373000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x202 JUMP JUMPDEST PUSH2 0x553 PUSH2 0x8E9 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP11 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR SWAP1 SWAP3 SSTORE PUSH1 0x1 DUP1 SLOAD SWAP3 DUP10 AND SWAP3 SWAP1 SWAP2 AND DUP3 OR SWAP1 SSTORE PUSH2 0x589 SWAP1 PUSH2 0x8F1 JUMP JUMPDEST DUP4 ISZERO PUSH2 0x5CF JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND DUP6 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x5E0 PUSH2 0x92D JUMP JUMPDEST PUSH2 0x5E9 PUSH0 PUSH2 0x8F1 JUMP JUMPDEST JUMP JUMPDEST CALLER DUP1 PUSH2 0x5F5 PUSH2 0x83C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x627 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x202 JUMP JUMPDEST PUSH2 0x630 DUP2 PUSH2 0x8F1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 JUMPDEST SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD PUSH2 0x6C2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x139BC81D1BDAD95B9CC81B1BD8DAD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x202 JUMP JUMPDEST DUP1 PUSH1 0x2 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0x70C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x151BDAD95B9CC81CDD1A5B1B081B1BD8DAD959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x202 JUMP JUMPDEST PUSH0 SLOAD DUP2 SLOAD PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x762 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x786 SWAP2 SWAP1 PUSH2 0xAC5 JUMP JUMPDEST PUSH2 0x7C4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x151C985B9CD9995C8819985A5B1959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x202 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0xE7B379C6C1FA169E9079C25E9143B127637EEF8EC8C9D5C06DDB4AB3E1195888 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP2 SSTORE PUSH1 0x1 DUP2 ADD DUP4 SWAP1 SSTORE ADD SSTORE JUMP JUMPDEST PUSH0 DUP1 PUSH32 0x237E158222E3E6968B72B9DB0D8043AACF074AD9F650F0D1606B4D82EE432C00 PUSH2 0x657 JUMP JUMPDEST PUSH2 0x86C PUSH2 0x92D JUMP JUMPDEST PUSH32 0x237E158222E3E6968B72B9DB0D8043AACF074AD9F650F0D1606B4D82EE432C00 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR DUP3 SSTORE PUSH2 0x8B0 PUSH2 0x633 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x38D16B8CAC22D99FC7C124B9CD0DE2D3FA1FAEF420BFE791D8C362D765E22700 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x5E9 PUSH2 0x95F JUMP JUMPDEST PUSH32 0x237E158222E3E6968B72B9DB0D8043AACF074AD9F650F0D1606B4D82EE432C00 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP2 SSTORE PUSH2 0x929 DUP3 PUSH2 0x9A8 JUMP JUMPDEST POP POP JUMP JUMPDEST CALLER PUSH2 0x936 PUSH2 0x633 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x5E9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x202 JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x5E9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 DUP3 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP3 AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xA2E JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xA46 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xA4F DUP6 PUSH2 0xA18 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH2 0xA64 PUSH1 0x40 DUP7 ADD PUSH2 0xA18 JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP3 SWAP4 PUSH1 0x60 ADD CALLDATALOAD SWAP3 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA85 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xA8E DUP4 PUSH2 0xA18 JUMP JUMPDEST SWAP2 POP PUSH2 0xA9C PUSH1 0x20 DUP5 ADD PUSH2 0xA18 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAB5 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xABE DUP3 PUSH2 0xA18 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAD5 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xABE JUMPI PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 REVERT NOT 0xE1 0xBC DUP5 SMOD EQ CALLDATASIZE SWAP12 SWAP13 0xA6 PUSH8 0x5DADBAEEC4B62707 PC 0xB3 DUP13 BLOCKHASH PUSH8 0x2AF0E2E2E23E1664 PUSH20 0x6F6C634300081400330000000000000000000000 ",
							"sourceMap": "303:1818:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1248:457;;;;;;:::i;:::-;;:::i;:::-;;867:373;;;;;;:::i;:::-;;:::i;551:37::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;551:37:5;;;;;;;;;;-1:-1:-1;;;;;1270:32:6;;;1252:51;;1334:2;1319:18;;1312:34;;;;1362:18;;;1355:34;1240:2;1225:18;551:37:5;;;;;;;;3155:101:1;;;:::i;3257:229:0:-;;;:::i;2441:144:1:-;;;:::i;:::-;;;-1:-1:-1;;;;;1564:32:6;;;1546:51;;1534:2;1519:18;2441:144:1;1400:203:6;404:33:5;;;;;-1:-1:-1;;;;;404:33:5;;;1713:405;;;;;;:::i;:::-;;:::i;2038:168:0:-;;;:::i;2524:247::-;;;;;;:::i;:::-;;:::i;377:20:5:-;;;;;-1:-1:-1;;;;;377:20:5;;;1248:457;799:18;;-1:-1:-1;;;;;799:18:5;785:10;:32;777:62;;;;-1:-1:-1;;;777:62:5;;1810:2:6;777:62:5;;;1792:21:6;1849:2;1829:18;;;1822:30;-1:-1:-1;;;1868:18:6;;;1861:47;1925:18;;777:62:5;;;;;;;;;1376:1:::1;1367:6;:10;1359:52;;;::::0;-1:-1:-1;;;1359:52:5;;2156:2:6;1359:52:5::1;::::0;::::1;2138:21:6::0;2195:2;2175:18;;;2168:30;2234:31;2214:18;;;2207:59;2283:18;;1359:52:5::1;1954:353:6::0;1359:52:5::1;1443:15;1430:10;:28;1422:60;;;::::0;-1:-1:-1;;;1422:60:5;;2514:2:6;1422:60:5::1;::::0;::::1;2496:21:6::0;2553:2;2533:18;;;2526:30;-1:-1:-1;;;2572:18:6;;;2565:49;2631:18;;1422:60:5::1;2312:343:6::0;1422:60:5::1;1519:5;::::0;1501:66:::1;::::0;-1:-1:-1;;;1501:66:5;;-1:-1:-1;;;;;2918:15:6;;;1501:66:5::1;::::0;::::1;2900:34:6::0;1553:4:5::1;2950:18:6::0;;;2943:43;3002:18;;;2995:34;;;1519:5:5;;::::1;::::0;1501:37:::1;::::0;2835:18:6;;1501:66:5::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1493:94;;;::::0;-1:-1:-1;;;1493:94:5;;3524:2:6;1493:94:5::1;::::0;::::1;3506:21:6::0;3563:2;3543:18;;;3536:30;-1:-1:-1;;;3582:18:6;;;3575:45;3637:18;;1493:94:5::1;3322:339:6::0;1493:94:5::1;1613:30;::::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;;1613:30:5;;::::1;::::0;;;::::1;::::0;;::::1;::::0;;;;;;;;;1600:10;;::::1;-1:-1:-1::0;1600:10:5;;;:5:::1;:10:::0;;;;;;;:43;;;;-1:-1:-1;;;;;;1600:43:5::1;::::0;::::1;::::0;;;::::1;::::0;;;;-1:-1:-1;1600:43:5;::::1;::::0;;;;;::::1;::::0;;;;1659:38;;3840:25:6;;;3881:18;;;3874:34;;;1613:30:5;;1659:38:::1;::::0;3813:18:6;1659:38:5::1;;;;;;;1248:457:::0;;;;:::o;867:373::-;3147:66:2;4302:15;;-1:-1:-1;;;4302:15:2;;;;4301:16;;4348:14;;4158:30;4724:16;;:34;;;;;4744:14;4724:34;4704:54;;4768:17;4788:11;:16;;4803:1;4788:16;:50;;;;-1:-1:-1;4816:4:2;4808:25;:30;4788:50;4768:70;;4854:12;4853:13;:30;;;;;4871:12;4870:13;4853:30;4849:91;;;4906:23;;-1:-1:-1;;;4906:23:2;;;;;;;;;;;4849:91;4949:18;;-1:-1:-1;;4949:18:2;4966:1;4949:18;;;4977:67;;;;5011:22;;-1:-1:-1;;;;5011:22:2;-1:-1:-1;;;5011:22:2;;;4977:67;-1:-1:-1;;;;;962:20:5;::::1;954:54;;;::::0;-1:-1:-1;;;954:54:5;;4121:2:6;954:54:5::1;::::0;::::1;4103:21:6::0;4160:2;4140:18;;;4133:30;-1:-1:-1;;;4179:18:6;;;4172:51;4240:18;;954:54:5::1;3919:345:6::0;954:54:5::1;-1:-1:-1::0;;;;;1027:25:5;::::1;1019:64;;;::::0;-1:-1:-1;;;1019:64:5;;4471:2:6;1019:64:5::1;::::0;::::1;4453:21:6::0;4510:2;4490:18;;;4483:30;4549:28;4529:18;;;4522:56;4595:18;;1019:64:5::1;4269:350:6::0;1019:64:5::1;1094:21;:19;:21::i;:::-;1126:5;:14:::0;;-1:-1:-1;;;;;1126:14:5;;::::1;-1:-1:-1::0;;;;;;1126:14:5;;::::1;;::::0;;;;1151:32;;;;::::1;::::0;;;::::1;::::0;::::1;::::0;;1194:38:::1;::::0;:18:::1;:38::i;:::-;5068:14:2::0;5064:101;;;5098:23;;-1:-1:-1;;;;5098:23:2;;;5140:14;;-1:-1:-1;4777:50:6;;5140:14:2;;4765:2:6;4750:18;5140:14:2;;;;;;;5064:101;4092:1079;;;;;867:373:5;;:::o;3155:101:1:-;2334:13;:11;:13::i;:::-;3219:30:::1;3246:1;3219:18;:30::i;:::-;3155:101::o:0;3257:229:0:-;966:10:4;;3352:14:0;:12;:14::i;:::-;-1:-1:-1;;;;;3352:24:0;;3348:96;;3399:34;;-1:-1:-1;;;3399:34:0;;-1:-1:-1;;;;;1564:32:6;;3399:34:0;;;1546:51:6;1519:18;;3399:34:0;1400:203:6;3348:96:0;3453:26;3472:6;3453:18;:26::i;:::-;3299:187;3257:229::o;2441:144:1:-;2487:7;;1313:22;2533:20;2570:8;-1:-1:-1;;;;;2570:8:1;;2441:144;-1:-1:-1;;2441:144:1:o;1713:405:5:-;-1:-1:-1;;;;;1788:10:5;;1768:17;1788:10;;;:5;:10;;;;;1817:11;;;;1809:44;;;;-1:-1:-1;;;1809:44:5;;5040:2:6;1809:44:5;;;5022:21:6;5079:2;5059:18;;;5052:30;-1:-1:-1;;;5098:18:6;;;5091:46;5154:18;;1809:44:5;4838:340:6;1809:44:5;1891:4;:15;;;1872;:34;;1864:66;;;;-1:-1:-1;;;1864:66:5;;5385:2:6;1864:66:5;;;5367:21:6;5424:2;5404:18;;;5397:30;-1:-1:-1;;;5443:18:6;;;5436:49;5502:18;;1864:66:5;5183:343:6;1864:66:5;1967:5;;1983:9;;1967:5;1994:11;;;1949:57;;-1:-1:-1;;;1949:57:5;;-1:-1:-1;;;;;1983:9:5;;;1949:57;;;5705:51:6;5772:18;;;5765:34;;;;1967:5:5;;;1949:33;;5678:18:6;;1949:57:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1941:85;;;;-1:-1:-1;;;1941:85:5;;3524:2:6;1941:85:5;;;3506:21:6;3563:2;3543:18;;;3536:30;-1:-1:-1;;;3582:18:6;;;3575:45;3637:18;;1941:85:5;3322:339:6;1941:85:5;2059:9;;;2070:11;;;2044:38;;5956:25:6;;;-1:-1:-1;;;;;2059:9:5;;;;2044:38;;5944:2:6;5929:18;2044:38:5;;;;;;;-1:-1:-1;;;;;;2100:10:5;;;;;:5;:10;;;;;;;2093:17;;-1:-1:-1;;;;;;2093:17:5;;;;;;;;;;;1713:405::o;2038:168:0:-;2091:7;;1676:27;2142:25;1545:174;2524:247;2334:13:1;:11;:13::i;:::-;1676:27:0;2680:26;;-1:-1:-1;;;;;;2680:26:0::1;-1:-1:-1::0;;;;;2680:26:0;::::1;::::0;;::::1;::::0;;2746:7:::1;:5;:7::i;:::-;-1:-1:-1::0;;;;;2721:43:0::1;;;;;;;;;;;2603:168;2524:247:::0;:::o;1819:64::-;6929:20:2;:18;:20::i;2955:222:0:-;1676:27;3104:22;;-1:-1:-1;;;;;;3104:22:0;;;3136:34;3161:8;3136:24;:34::i;:::-;3027:150;2955:222;:::o;2658:162:1:-;966:10:4;2717:7:1;:5;:7::i;:::-;-1:-1:-1;;;;;2717:23:1;;2713:101;;2763:40;;-1:-1:-1;;;2763:40:1;;966:10:4;2763:40:1;;;1546:51:6;1519:18;;2763:40:1;1400:203:6;7082:141:2;3147:66;8558:40;-1:-1:-1;;;8558:40:2;;;;7144:73;;7189:17;;-1:-1:-1;;;7189:17:2;;;;;;;;;;;3774:248:1;1313:22;3923:8;;-1:-1:-1;;;;;;3941:19:1;;-1:-1:-1;;;;;3941:19:1;;;;;;;;3975:40;;3923:8;;;;;3975:40;;3847:24;;3975:40;3837:185;;3774:248;:::o;14:173:6:-;82:20;;-1:-1:-1;;;;;131:31:6;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:397::-;278:6;286;294;302;355:3;343:9;334:7;330:23;326:33;323:53;;;372:1;369;362:12;323:53;395:29;414:9;395:29;:::i;:::-;385:39;;471:2;460:9;456:18;443:32;433:42;;494:38;528:2;517:9;513:18;494:38;:::i;:::-;192:397;;;;-1:-1:-1;484:48:6;;579:2;564:18;551:32;;-1:-1:-1;;192:397:6:o;594:260::-;662:6;670;723:2;711:9;702:7;698:23;694:32;691:52;;;739:1;736;729:12;691:52;762:29;781:9;762:29;:::i;:::-;752:39;;810:38;844:2;833:9;829:18;810:38;:::i;:::-;800:48;;594:260;;;;;:::o;859:186::-;918:6;971:2;959:9;950:7;946:23;942:32;939:52;;;987:1;984;977:12;939:52;1010:29;1029:9;1010:29;:::i;:::-;1000:39;859:186;-1:-1:-1;;;859:186:6:o;3040:277::-;3107:6;3160:2;3148:9;3139:7;3135:23;3131:32;3128:52;;;3176:1;3173;3166:12;3128:52;3208:9;3202:16;3261:5;3254:13;3247:21;3240:5;3237:32;3227:60;;3283:1;3280;3273:12"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "568400",
								"executionCost": "598",
								"totalCost": "568998"
							},
							"external": {
								"acceptOwnership()": "52538",
								"governanceContract()": "2358",
								"initialize(address,address)": "infinite",
								"lockForDEX(address,uint256,address,uint256)": "infinite",
								"locks(address)": "6873",
								"owner()": "2358",
								"pendingOwner()": "2435",
								"renounceOwnership()": "infinite",
								"token()": "2445",
								"transferOwnership(address)": "infinite",
								"unlockTokens(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 303,
									"end": 2121,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 303,
									"end": 2121,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 303,
									"end": 2121,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 303,
									"end": 2121,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 303,
									"end": 2121,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 303,
									"end": 2121,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 303,
									"end": 2121,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 303,
									"end": 2121,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 303,
									"end": 2121,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 303,
									"end": 2121,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 303,
									"end": 2121,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 303,
									"end": 2121,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 303,
									"end": 2121,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 303,
									"end": 2121,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 303,
									"end": 2121,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 303,
									"end": 2121,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 303,
									"end": 2121,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 303,
									"end": 2121,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 303,
									"end": 2121,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 303,
									"end": 2121,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 303,
									"end": 2121,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fd19e1bc840714369b9ca6675dadbaeec4b6270758b38c40672af0e2e2e23e1664736f6c63430008140033",
									".code": [
										{
											"begin": 303,
											"end": 2121,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 303,
											"end": 2121,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 303,
											"end": 2121,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 303,
											"end": 2121,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 303,
											"end": 2121,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 303,
											"end": 2121,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 303,
											"end": 2121,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 303,
											"end": 2121,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 303,
											"end": 2121,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 303,
											"end": 2121,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 303,
											"end": 2121,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 303,
											"end": 2121,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 303,
											"end": 2121,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 303,
											"end": 2121,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 303,
											"end": 2121,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 303,
											"end": 2121,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 303,
											"end": 2121,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 303,
											"end": 2121,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 303,
											"end": 2121,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 303,
											"end": 2121,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 303,
											"end": 2121,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 303,
											"end": 2121,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 303,
											"end": 2121,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 303,
											"end": 2121,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 303,
											"end": 2121,
											"name": "PUSH",
											"source": 5,
											"value": "8DA5CB5B"
										},
										{
											"begin": 303,
											"end": 2121,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 303,
											"end": 2121,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 303,
											"end": 2121,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 303,
											"end": 2121,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 303,
											"end": 2121,
											"name": "PUSH",
											"source": 5,
											"value": "8DA5CB5B"
										},
										{
											"begin": 303,
											"end": 2121,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 303,
											"end": 2121,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 303,
											"end": 2121,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 303,
											"end": 2121,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 303,
											"end": 2121,
											"name": "PUSH",
											"source": 5,
											"value": "B172B222"
										},
										{
											"begin": 303,
											"end": 2121,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 303,
											"end": 2121,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 303,
											"end": 2121,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 303,
											"end": 2121,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 303,
											"end": 2121,
											"name": "PUSH",
											"source": 5,
											"value": "CB67F948"
										},
										{
											"begin": 303,
											"end": 2121,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 303,
											"end": 2121,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 303,
											"end": 2121,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 303,
											"end": 2121,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 303,
											"end": 2121,
											"name": "PUSH",
											"source": 5,
											"value": "E30C3978"
										},
										{
											"begin": 303,
											"end": 2121,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 303,
											"end": 2121,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 303,
											"end": 2121,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 303,
											"end": 2121,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 303,
											"end": 2121,
											"name": "PUSH",
											"source": 5,
											"value": "F2FDE38B"
										},
										{
											"begin": 303,
											"end": 2121,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 303,
											"end": 2121,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 303,
											"end": 2121,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 303,
											"end": 2121,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 303,
											"end": 2121,
											"name": "PUSH",
											"source": 5,
											"value": "FC0C546A"
										},
										{
											"begin": 303,
											"end": 2121,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 303,
											"end": 2121,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 303,
											"end": 2121,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 303,
											"end": 2121,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 303,
											"end": 2121,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 303,
											"end": 2121,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 303,
											"end": 2121,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 303,
											"end": 2121,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 303,
											"end": 2121,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 303,
											"end": 2121,
											"name": "PUSH",
											"source": 5,
											"value": "40678BE4"
										},
										{
											"begin": 303,
											"end": 2121,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 303,
											"end": 2121,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 303,
											"end": 2121,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 303,
											"end": 2121,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 303,
											"end": 2121,
											"name": "PUSH",
											"source": 5,
											"value": "485CC955"
										},
										{
											"begin": 303,
											"end": 2121,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 303,
											"end": 2121,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 303,
											"end": 2121,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 303,
											"end": 2121,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 303,
											"end": 2121,
											"name": "PUSH",
											"source": 5,
											"value": "5DE9A137"
										},
										{
											"begin": 303,
											"end": 2121,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 303,
											"end": 2121,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 303,
											"end": 2121,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 303,
											"end": 2121,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 303,
											"end": 2121,
											"name": "PUSH",
											"source": 5,
											"value": "715018A6"
										},
										{
											"begin": 303,
											"end": 2121,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 303,
											"end": 2121,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 303,
											"end": 2121,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 303,
											"end": 2121,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 303,
											"end": 2121,
											"name": "PUSH",
											"source": 5,
											"value": "79BA5097"
										},
										{
											"begin": 303,
											"end": 2121,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 303,
											"end": 2121,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 303,
											"end": 2121,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 303,
											"end": 2121,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 303,
											"end": 2121,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 303,
											"end": 2121,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 303,
											"end": 2121,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 303,
											"end": 2121,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1248,
											"end": 1705,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 1248,
											"end": 1705,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1248,
											"end": 1705,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 1248,
											"end": 1705,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 1248,
											"end": 1705,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1248,
											"end": 1705,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1248,
											"end": 1705,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 1248,
											"end": 1705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1248,
											"end": 1705,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 1248,
											"end": 1705,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1248,
											"end": 1705,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 1248,
											"end": 1705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1248,
											"end": 1705,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 1248,
											"end": 1705,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1248,
											"end": 1705,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 867,
											"end": 1240,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 867,
											"end": 1240,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 867,
											"end": 1240,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 867,
											"end": 1240,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 867,
											"end": 1240,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 867,
											"end": 1240,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 867,
											"end": 1240,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 867,
											"end": 1240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 867,
											"end": 1240,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 867,
											"end": 1240,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 867,
											"end": 1240,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 867,
											"end": 1240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 551,
											"end": 588,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 551,
											"end": 588,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 551,
											"end": 588,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 551,
											"end": 588,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 551,
											"end": 588,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 551,
											"end": 588,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 551,
											"end": 588,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 551,
											"end": 588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 551,
											"end": 588,
											"name": "tag",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 551,
											"end": 588,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 551,
											"end": 588,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 551,
											"end": 588,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 551,
											"end": 588,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 551,
											"end": 588,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 551,
											"end": 588,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 551,
											"end": 588,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 551,
											"end": 588,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 551,
											"end": 588,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 551,
											"end": 588,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 551,
											"end": 588,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 551,
											"end": 588,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 551,
											"end": 588,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 551,
											"end": 588,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 551,
											"end": 588,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 551,
											"end": 588,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 551,
											"end": 588,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 551,
											"end": 588,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 551,
											"end": 588,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 551,
											"end": 588,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 551,
											"end": 588,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 551,
											"end": 588,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 551,
											"end": 588,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 551,
											"end": 588,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 551,
											"end": 588,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 551,
											"end": 588,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 551,
											"end": 588,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 551,
											"end": 588,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 551,
											"end": 588,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 551,
											"end": 588,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 551,
											"end": 588,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 551,
											"end": 588,
											"name": "tag",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 551,
											"end": 588,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 551,
											"end": 588,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 551,
											"end": 588,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 551,
											"end": 588,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1270,
											"end": 1302,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1270,
											"end": 1302,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 1270,
											"end": 1302,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1252,
											"end": 1303,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1252,
											"end": 1303,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1334,
											"end": 1336,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1319,
											"end": 1337,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1319,
											"end": 1337,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1312,
											"end": 1346,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1312,
											"end": 1346,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1312,
											"end": 1346,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1312,
											"end": 1346,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1362,
											"end": 1380,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1362,
											"end": 1380,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1362,
											"end": 1380,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1355,
											"end": 1389,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1240,
											"end": 1242,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1225,
											"end": 1243,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 551,
											"end": 588,
											"name": "tag",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 551,
											"end": 588,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 551,
											"end": 588,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 551,
											"end": 588,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 551,
											"end": 588,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 551,
											"end": 588,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 551,
											"end": 588,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 551,
											"end": 588,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 551,
											"end": 588,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 3155,
											"end": 3256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3257,
											"end": 3486,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3257,
											"end": 3486,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3257,
											"end": 3486,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 3257,
											"end": 3486,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 3257,
											"end": 3486,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 2441,
											"end": 2585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1564,
											"end": 1596,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1564,
											"end": 1596,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1564,
											"end": 1596,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1546,
											"end": 1597,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1546,
											"end": 1597,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1534,
											"end": 1536,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1519,
											"end": 1537,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1400,
											"end": 1603,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 404,
											"end": 437,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 404,
											"end": 437,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 404,
											"end": 437,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 404,
											"end": 437,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 404,
											"end": 437,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 404,
											"end": 437,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 404,
											"end": 437,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 404,
											"end": 437,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 404,
											"end": 437,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1713,
											"end": 2118,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 1713,
											"end": 2118,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1713,
											"end": 2118,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 1713,
											"end": 2118,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 1713,
											"end": 2118,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1713,
											"end": 2118,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1713,
											"end": 2118,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 1713,
											"end": 2118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1713,
											"end": 2118,
											"name": "tag",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 1713,
											"end": 2118,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1713,
											"end": 2118,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 1713,
											"end": 2118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2038,
											"end": 2206,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2038,
											"end": 2206,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2038,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2038,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2038,
											"end": 2206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2524,
											"end": 2771,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2524,
											"end": 2771,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2524,
											"end": 2771,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2524,
											"end": 2771,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2524,
											"end": 2771,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2524,
											"end": 2771,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2524,
											"end": 2771,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2524,
											"end": 2771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2524,
											"end": 2771,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2524,
											"end": 2771,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2524,
											"end": 2771,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2524,
											"end": 2771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 377,
											"end": 397,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 377,
											"end": 397,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 377,
											"end": 397,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 377,
											"end": 397,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 377,
											"end": 397,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 377,
											"end": 397,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 377,
											"end": 397,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 377,
											"end": 397,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 377,
											"end": 397,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1248,
											"end": 1705,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 1248,
											"end": 1705,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 799,
											"end": 817,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 799,
											"end": 817,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 799,
											"end": 817,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 785,
											"end": 795,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 785,
											"end": 817,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 777,
											"end": 839,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 777,
											"end": 839,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 777,
											"end": 839,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 777,
											"end": 839,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 777,
											"end": 839,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 777,
											"end": 839,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1810,
											"end": 1812,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 777,
											"end": 839,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 777,
											"end": 839,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 777,
											"end": 839,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1792,
											"end": 1813,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1851,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 1829,
											"end": 1847,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1829,
											"end": 1847,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1847,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 1852,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "13DB9B1E48111053C818D85B8818D85B1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1868,
											"end": 1886,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 1868,
											"end": 1886,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1868,
											"end": 1886,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1861,
											"end": 1908,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1925,
											"end": 1943,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 1925,
											"end": 1943,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 777,
											"end": 839,
											"name": "tag",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 777,
											"end": 839,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 777,
											"end": 839,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 777,
											"end": 839,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 777,
											"end": 839,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 777,
											"end": 839,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 777,
											"end": 839,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 777,
											"end": 839,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 777,
											"end": 839,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 777,
											"end": 839,
											"name": "tag",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 777,
											"end": 839,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1376,
											"end": 1377,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1367,
											"end": 1373,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1367,
											"end": 1377,
											"modifierDepth": 1,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1359,
											"end": 1411,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 1359,
											"end": 1411,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1359,
											"end": 1411,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1359,
											"end": 1411,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1359,
											"end": 1411,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1359,
											"end": 1411,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2156,
											"end": 2158,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1359,
											"end": 1411,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1359,
											"end": 1411,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1359,
											"end": 1411,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2138,
											"end": 2159,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2195,
											"end": 2197,
											"name": "PUSH",
											"source": 6,
											"value": "1D"
										},
										{
											"begin": 2175,
											"end": 2193,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 2175,
											"end": 2193,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2175,
											"end": 2193,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2168,
											"end": 2198,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2234,
											"end": 2265,
											"name": "PUSH",
											"source": 6,
											"value": "416D6F756E74206D7573742062652067726561746572207468616E2030000000"
										},
										{
											"begin": 2214,
											"end": 2232,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 2214,
											"end": 2232,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2214,
											"end": 2232,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2207,
											"end": 2266,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2283,
											"end": 2301,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 2283,
											"end": 2301,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1359,
											"end": 1411,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 1954,
											"end": 2307,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1359,
											"end": 1411,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 1359,
											"end": 1411,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1443,
											"end": 1458,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 1430,
											"end": 1440,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1430,
											"end": 1458,
											"modifierDepth": 1,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1422,
											"end": 1482,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1422,
											"end": 1482,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1422,
											"end": 1482,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1422,
											"end": 1482,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1422,
											"end": 1482,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1422,
											"end": 1482,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2514,
											"end": 2516,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1422,
											"end": 1482,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1422,
											"end": 1482,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1422,
											"end": 1482,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2496,
											"end": 2517,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2553,
											"end": 2555,
											"name": "PUSH",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 2533,
											"end": 2551,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 2533,
											"end": 2551,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2533,
											"end": 2551,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2526,
											"end": 2556,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E76616C696420756E6C6F636B2074696D65"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "68"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2572,
											"end": 2590,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 2572,
											"end": 2590,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2572,
											"end": 2590,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2565,
											"end": 2614,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2631,
											"end": 2649,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 2631,
											"end": 2649,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1422,
											"end": 1482,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 2312,
											"end": 2655,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1422,
											"end": 1482,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1422,
											"end": 1482,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1519,
											"end": 1524,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1519,
											"end": 1524,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1501,
											"end": 1567,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1501,
											"end": 1567,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1501,
											"end": 1567,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1501,
											"end": 1567,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2918,
											"end": 2933,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2918,
											"end": 2933,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2918,
											"end": 2933,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1501,
											"end": 1567,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1501,
											"end": 1567,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1501,
											"end": 1567,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2900,
											"end": 2934,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1553,
											"end": 1557,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 2950,
											"end": 2968,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 2950,
											"end": 2968,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2950,
											"end": 2968,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2943,
											"end": 2986,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3002,
											"end": 3020,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 3002,
											"end": 3020,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3002,
											"end": 3020,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2995,
											"end": 3029,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2995,
											"end": 3029,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2995,
											"end": 3029,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1519,
											"end": 1524,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1519,
											"end": 1524,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1519,
											"end": 1524,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1519,
											"end": 1524,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1501,
											"end": 1538,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 1501,
											"end": 1538,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2835,
											"end": 2853,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 2835,
											"end": 2853,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1501,
											"end": 1567,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1501,
											"end": 1567,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1501,
											"end": 1567,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1501,
											"end": 1567,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1501,
											"end": 1567,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1501,
											"end": 1567,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1501,
											"end": 1567,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1501,
											"end": 1567,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1501,
											"end": 1567,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1501,
											"end": 1567,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 1501,
											"end": 1567,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 1501,
											"end": 1567,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1501,
											"end": 1567,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1501,
											"end": 1567,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1501,
											"end": 1567,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 1501,
											"end": 1567,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1501,
											"end": 1567,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1501,
											"end": 1567,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1501,
											"end": 1567,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1501,
											"end": 1567,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 1501,
											"end": 1567,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1501,
											"end": 1567,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1501,
											"end": 1567,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1501,
											"end": 1567,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 1501,
											"end": 1567,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1501,
											"end": 1567,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1501,
											"end": 1567,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1501,
											"end": 1567,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1501,
											"end": 1567,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1501,
											"end": 1567,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1501,
											"end": 1567,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1501,
											"end": 1567,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1501,
											"end": 1567,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1501,
											"end": 1567,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1501,
											"end": 1567,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1501,
											"end": 1567,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1501,
											"end": 1567,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1501,
											"end": 1567,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1501,
											"end": 1567,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1501,
											"end": 1567,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1501,
											"end": 1567,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1501,
											"end": 1567,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1501,
											"end": 1567,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1501,
											"end": 1567,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1501,
											"end": 1567,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1501,
											"end": 1567,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1501,
											"end": 1567,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1501,
											"end": 1567,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 1501,
											"end": 1567,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1501,
											"end": 1567,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1501,
											"end": 1567,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 1501,
											"end": 1567,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1501,
											"end": 1567,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 1501,
											"end": 1567,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1493,
											"end": 1587,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 1493,
											"end": 1587,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1493,
											"end": 1587,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1493,
											"end": 1587,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1493,
											"end": 1587,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1493,
											"end": 1587,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3524,
											"end": 3526,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1493,
											"end": 1587,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1493,
											"end": 1587,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1493,
											"end": 1587,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3506,
											"end": 3527,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3563,
											"end": 3565,
											"name": "PUSH",
											"source": 6,
											"value": "F"
										},
										{
											"begin": 3543,
											"end": 3561,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3543,
											"end": 3561,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3543,
											"end": 3561,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3536,
											"end": 3566,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "151C985B9CD9995C8819985A5B1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3582,
											"end": 3600,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 3582,
											"end": 3600,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3582,
											"end": 3600,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3575,
											"end": 3620,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3637,
											"end": 3655,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 3637,
											"end": 3655,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1493,
											"end": 1587,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 3322,
											"end": 3661,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1493,
											"end": 1587,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 1493,
											"end": 1587,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1613,
											"end": 1643,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1613,
											"end": 1643,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1613,
											"end": 1643,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1613,
											"end": 1643,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1613,
											"end": 1643,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1613,
											"end": 1643,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1613,
											"end": 1643,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1613,
											"end": 1643,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1613,
											"end": 1643,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1613,
											"end": 1643,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1613,
											"end": 1643,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1613,
											"end": 1643,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1613,
											"end": 1643,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1613,
											"end": 1643,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1613,
											"end": 1643,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1613,
											"end": 1643,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1613,
											"end": 1643,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1613,
											"end": 1643,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1613,
											"end": 1643,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 1613,
											"end": 1643,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1613,
											"end": 1643,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1613,
											"end": 1643,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1613,
											"end": 1643,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1613,
											"end": 1643,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1613,
											"end": 1643,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1613,
											"end": 1643,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1613,
											"end": 1643,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1600,
											"end": 1610,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 1600,
											"end": 1610,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1600,
											"end": 1610,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1600,
											"end": 1610,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1600,
											"end": 1610,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1600,
											"end": 1610,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1600,
											"end": 1605,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1600,
											"end": 1610,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1600,
											"end": 1610,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1600,
											"end": 1610,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1600,
											"end": 1610,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1600,
											"end": 1610,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 1600,
											"end": 1610,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1600,
											"end": 1610,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1600,
											"end": 1643,
											"name": "SWAP7",
											"source": 5
										},
										{
											"begin": 1600,
											"end": 1643,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1600,
											"end": 1643,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1600,
											"end": 1643,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1600,
											"end": 1643,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1600,
											"end": 1643,
											"name": "SWAP7",
											"source": 5
										},
										{
											"begin": 1600,
											"end": 1643,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1600,
											"end": 1643,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 1600,
											"end": 1643,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1600,
											"end": 1643,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 1600,
											"end": 1643,
											"modifierDepth": 1,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 1600,
											"end": 1643,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1600,
											"end": 1643,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1600,
											"end": 1643,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1600,
											"end": 1643,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 1600,
											"end": 1643,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1600,
											"end": 1643,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1600,
											"end": 1643,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1600,
											"end": 1643,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1600,
											"end": 1643,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1600,
											"end": 1643,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1600,
											"end": 1643,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1600,
											"end": 1643,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1600,
											"end": 1643,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1600,
											"end": 1643,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1600,
											"end": 1643,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1600,
											"end": 1643,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1659,
											"end": 1697,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1659,
											"end": 1697,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3881,
											"end": 3899,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3881,
											"end": 3899,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3881,
											"end": 3899,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3874,
											"end": 3908,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3874,
											"end": 3908,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3874,
											"end": 3908,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1613,
											"end": 1643,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1613,
											"end": 1643,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1659,
											"end": 1697,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "D741E738A23FD18A03A26522320D9FC6CAC1FED483E215EA9150FBC2FC43385D"
										},
										{
											"begin": 1659,
											"end": 1697,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3813,
											"end": 3831,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1659,
											"end": 1697,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1659,
											"end": 1697,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1659,
											"end": 1697,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1659,
											"end": 1697,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1659,
											"end": 1697,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1659,
											"end": 1697,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1659,
											"end": 1697,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 5
										},
										{
											"begin": 1248,
											"end": 1705,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1248,
											"end": 1705,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1248,
											"end": 1705,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1248,
											"end": 1705,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1248,
											"end": 1705,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 867,
											"end": 1240,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 867,
											"end": 1240,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3147,
											"end": 3213,
											"name": "PUSH",
											"source": 2,
											"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4301,
											"end": 4317,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4301,
											"end": 4317,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4158,
											"end": 4188,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4724,
											"end": 4740,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4724,
											"end": 4740,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4744,
											"end": 4758,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4704,
											"end": 4758,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4704,
											"end": 4758,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4768,
											"end": 4785,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4788,
											"end": 4799,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4788,
											"end": 4804,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4788,
											"end": 4804,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4803,
											"end": 4804,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4788,
											"end": 4804,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4816,
											"end": 4820,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 4808,
											"end": 4833,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 4808,
											"end": 4838,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4768,
											"end": 4838,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4768,
											"end": 4838,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4854,
											"end": 4866,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4853,
											"end": 4866,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4871,
											"end": 4883,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4870,
											"end": 4883,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4849,
											"end": 4940,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4849,
											"end": 4940,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 4849,
											"end": 4940,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F92EE8A9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4849,
											"end": 4940,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 4849,
											"end": 4940,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 4967,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 4977,
											"end": 5044,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4977,
											"end": 5044,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4977,
											"end": 5044,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 4977,
											"end": 5044,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 4977,
											"end": 5044,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 4977,
											"end": 5044,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 962,
											"end": 982,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 962,
											"end": 982,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 954,
											"end": 1008,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 954,
											"end": 1008,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 954,
											"end": 1008,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 954,
											"end": 1008,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 954,
											"end": 1008,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 954,
											"end": 1008,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4121,
											"end": 4123,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 954,
											"end": 1008,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 954,
											"end": 1008,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 954,
											"end": 1008,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4103,
											"end": 4124,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4160,
											"end": 4162,
											"name": "PUSH",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 4140,
											"end": 4158,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4140,
											"end": 4158,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4140,
											"end": 4158,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4133,
											"end": 4163,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E76616C696420746F6B656E2061646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "58"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4179,
											"end": 4197,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4179,
											"end": 4197,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4179,
											"end": 4197,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4172,
											"end": 4223,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4240,
											"end": 4258,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 4240,
											"end": 4258,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 954,
											"end": 1008,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 3919,
											"end": 4264,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 954,
											"end": 1008,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 954,
											"end": 1008,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1027,
											"end": 1052,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1027,
											"end": 1052,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1019,
											"end": 1083,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 1019,
											"end": 1083,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1019,
											"end": 1083,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1019,
											"end": 1083,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1019,
											"end": 1083,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1019,
											"end": 1083,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4471,
											"end": 4473,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1019,
											"end": 1083,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1019,
											"end": 1083,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1019,
											"end": 1083,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4453,
											"end": 4474,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4510,
											"end": 4512,
											"name": "PUSH",
											"source": 6,
											"value": "1A"
										},
										{
											"begin": 4490,
											"end": 4508,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4490,
											"end": 4508,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4490,
											"end": 4508,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4483,
											"end": 4513,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4549,
											"end": 4577,
											"name": "PUSH",
											"source": 6,
											"value": "496E76616C696420676F7665726E616E63652061646472657373000000000000"
										},
										{
											"begin": 4529,
											"end": 4547,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4529,
											"end": 4547,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4529,
											"end": 4547,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4522,
											"end": 4578,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4595,
											"end": 4613,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 4595,
											"end": 4613,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1019,
											"end": 1083,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 4269,
											"end": 4619,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1019,
											"end": 1083,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 1019,
											"end": 1083,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1094,
											"end": 1115,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 1094,
											"end": 1113,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 1094,
											"end": 1115,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1094,
											"end": 1115,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 1094,
											"end": 1115,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1126,
											"end": 1131,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1126,
											"end": 1140,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1126,
											"end": 1140,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1126,
											"end": 1140,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1126,
											"end": 1140,
											"name": "DUP11",
											"source": 5
										},
										{
											"begin": 1126,
											"end": 1140,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1126,
											"end": 1140,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1126,
											"end": 1140,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1126,
											"end": 1140,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1126,
											"end": 1140,
											"modifierDepth": 1,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 1126,
											"end": 1140,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1126,
											"end": 1140,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1126,
											"end": 1140,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1126,
											"end": 1140,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1151,
											"end": 1183,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1151,
											"end": 1183,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1151,
											"end": 1183,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1151,
											"end": 1183,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 1151,
											"end": 1183,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1151,
											"end": 1183,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1151,
											"end": 1183,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1151,
											"end": 1183,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1151,
											"end": 1183,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1151,
											"end": 1183,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1151,
											"end": 1183,
											"modifierDepth": 1,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 1151,
											"end": 1183,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1151,
											"end": 1183,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1194,
											"end": 1232,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 1194,
											"end": 1232,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1194,
											"end": 1212,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 1194,
											"end": 1232,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1194,
											"end": 1232,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 1194,
											"end": 1232,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5068,
											"end": 5082,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5064,
											"end": 5165,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5064,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 5064,
											"end": 5165,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 4777,
											"end": 4827,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4777,
											"end": 4827,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "PUSH",
											"source": 2,
											"value": "C7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2"
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4765,
											"end": 4767,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4750,
											"end": 4768,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 5064,
											"end": 5165,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 5064,
											"end": 5165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 5171,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 5171,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 5171,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 5171,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 5171,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 867,
											"end": 1240,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 867,
											"end": 1240,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 867,
											"end": 1240,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3246,
											"end": 3247,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3219,
											"end": 3237,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 3219,
											"end": 3249,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3155,
											"end": 3256,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3257,
											"end": 3486,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 3257,
											"end": 3486,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 966,
											"end": 976,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3352,
											"end": 3366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 3352,
											"end": 3364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 3352,
											"end": 3366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3352,
											"end": 3366,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 3352,
											"end": 3366,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3352,
											"end": 3376,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3352,
											"end": 3376,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3348,
											"end": 3444,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 3348,
											"end": 3444,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3399,
											"end": 3433,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3399,
											"end": 3433,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3399,
											"end": 3433,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3399,
											"end": 3433,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1564,
											"end": 1596,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1564,
											"end": 1596,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3399,
											"end": 3433,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3399,
											"end": 3433,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3399,
											"end": 3433,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1546,
											"end": 1597,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1519,
											"end": 1537,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1519,
											"end": 1537,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3399,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1400,
											"end": 1603,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3348,
											"end": 3444,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 3348,
											"end": 3444,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3453,
											"end": 3479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 3472,
											"end": 3478,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3453,
											"end": 3471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 3453,
											"end": 3479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3453,
											"end": 3479,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 3453,
											"end": 3479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3299,
											"end": 3486,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3257,
											"end": 3486,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2487,
											"end": 2494,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2487,
											"end": 2494,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 1335,
											"name": "PUSH",
											"source": 1,
											"value": "9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300"
										},
										{
											"begin": 2533,
											"end": 2553,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 2533,
											"end": 2553,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2441,
											"end": 2585,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1713,
											"end": 2118,
											"name": "tag",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 1713,
											"end": 2118,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1788,
											"end": 1798,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1788,
											"end": 1798,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1768,
											"end": 1785,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1788,
											"end": 1798,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1788,
											"end": 1798,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1788,
											"end": 1798,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1788,
											"end": 1793,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1788,
											"end": 1798,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1788,
											"end": 1798,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1788,
											"end": 1798,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1788,
											"end": 1798,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1788,
											"end": 1798,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1817,
											"end": 1828,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1817,
											"end": 1828,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1817,
											"end": 1828,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1817,
											"end": 1828,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1809,
											"end": 1853,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 1809,
											"end": 1853,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1809,
											"end": 1853,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1809,
											"end": 1853,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1809,
											"end": 1853,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1809,
											"end": 1853,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5040,
											"end": 5042,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1809,
											"end": 1853,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1809,
											"end": 1853,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1809,
											"end": 1853,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5043,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5079,
											"end": 5081,
											"name": "PUSH",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 5059,
											"end": 5077,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5059,
											"end": 5077,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5059,
											"end": 5077,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5052,
											"end": 5082,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "139BC81D1BDAD95B9CC81B1BD8DAD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5098,
											"end": 5116,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 5098,
											"end": 5116,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5098,
											"end": 5116,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5091,
											"end": 5137,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5154,
											"end": 5172,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 5154,
											"end": 5172,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1809,
											"end": 1853,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 4838,
											"end": 5178,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1809,
											"end": 1853,
											"name": "tag",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 1809,
											"end": 1853,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1891,
											"end": 1895,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1891,
											"end": 1906,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1891,
											"end": 1906,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1891,
											"end": 1906,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1872,
											"end": 1887,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 1872,
											"end": 1906,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1872,
											"end": 1906,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1864,
											"end": 1930,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 1864,
											"end": 1930,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1864,
											"end": 1930,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1864,
											"end": 1930,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1864,
											"end": 1930,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1864,
											"end": 1930,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5385,
											"end": 5387,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1864,
											"end": 1930,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1864,
											"end": 1930,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1864,
											"end": 1930,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5367,
											"end": 5388,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5424,
											"end": 5426,
											"name": "PUSH",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 5404,
											"end": 5422,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5404,
											"end": 5422,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5404,
											"end": 5422,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5397,
											"end": 5427,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "151BDAD95B9CC81CDD1A5B1B081B1BD8DAD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5443,
											"end": 5461,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 5443,
											"end": 5461,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5443,
											"end": 5461,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5436,
											"end": 5485,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5502,
											"end": 5520,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 5502,
											"end": 5520,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1864,
											"end": 1930,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 5183,
											"end": 5526,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1864,
											"end": 1930,
											"name": "tag",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 1864,
											"end": 1930,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1967,
											"end": 1972,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1967,
											"end": 1972,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1983,
											"end": 1992,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1983,
											"end": 1992,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1967,
											"end": 1972,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1994,
											"end": 2005,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1994,
											"end": 2005,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1994,
											"end": 2005,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1949,
											"end": 2006,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1949,
											"end": 2006,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1949,
											"end": 2006,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1949,
											"end": 2006,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1983,
											"end": 1992,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1983,
											"end": 1992,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1983,
											"end": 1992,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1949,
											"end": 2006,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1949,
											"end": 2006,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1949,
											"end": 2006,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5705,
											"end": 5756,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5772,
											"end": 5790,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5772,
											"end": 5790,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5772,
											"end": 5790,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5765,
											"end": 5799,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5765,
											"end": 5799,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5765,
											"end": 5799,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5765,
											"end": 5799,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1967,
											"end": 1972,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1967,
											"end": 1972,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1967,
											"end": 1972,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1949,
											"end": 1982,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 1949,
											"end": 1982,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5678,
											"end": 5696,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 5678,
											"end": 5696,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1949,
											"end": 2006,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1949,
											"end": 2006,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1949,
											"end": 2006,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1949,
											"end": 2006,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1949,
											"end": 2006,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1949,
											"end": 2006,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1949,
											"end": 2006,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1949,
											"end": 2006,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1949,
											"end": 2006,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1949,
											"end": 2006,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 1949,
											"end": 2006,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 1949,
											"end": 2006,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1949,
											"end": 2006,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1949,
											"end": 2006,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1949,
											"end": 2006,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 1949,
											"end": 2006,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1949,
											"end": 2006,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1949,
											"end": 2006,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1949,
											"end": 2006,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1949,
											"end": 2006,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 1949,
											"end": 2006,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1949,
											"end": 2006,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1949,
											"end": 2006,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1949,
											"end": 2006,
											"name": "tag",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 1949,
											"end": 2006,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1949,
											"end": 2006,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1949,
											"end": 2006,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1949,
											"end": 2006,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1949,
											"end": 2006,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1949,
											"end": 2006,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1949,
											"end": 2006,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1949,
											"end": 2006,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1949,
											"end": 2006,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1949,
											"end": 2006,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1949,
											"end": 2006,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1949,
											"end": 2006,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1949,
											"end": 2006,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1949,
											"end": 2006,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1949,
											"end": 2006,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1949,
											"end": 2006,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1949,
											"end": 2006,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1949,
											"end": 2006,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1949,
											"end": 2006,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1949,
											"end": 2006,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1949,
											"end": 2006,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1949,
											"end": 2006,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1949,
											"end": 2006,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1949,
											"end": 2006,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 1949,
											"end": 2006,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1949,
											"end": 2006,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1949,
											"end": 2006,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 1949,
											"end": 2006,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1949,
											"end": 2006,
											"name": "tag",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 1949,
											"end": 2006,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1941,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 1941,
											"end": 2026,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1941,
											"end": 2026,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1941,
											"end": 2026,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1941,
											"end": 2026,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1941,
											"end": 2026,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3524,
											"end": 3526,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1941,
											"end": 2026,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1941,
											"end": 2026,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1941,
											"end": 2026,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3506,
											"end": 3527,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3563,
											"end": 3565,
											"name": "PUSH",
											"source": 6,
											"value": "F"
										},
										{
											"begin": 3543,
											"end": 3561,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3543,
											"end": 3561,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3543,
											"end": 3561,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3536,
											"end": 3566,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "151C985B9CD9995C8819985A5B1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3582,
											"end": 3600,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 3582,
											"end": 3600,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3582,
											"end": 3600,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3575,
											"end": 3620,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3637,
											"end": 3655,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 3637,
											"end": 3655,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1941,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 3322,
											"end": 3661,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1941,
											"end": 2026,
											"name": "tag",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 1941,
											"end": 2026,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2059,
											"end": 2068,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2059,
											"end": 2068,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2059,
											"end": 2068,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2070,
											"end": 2081,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2070,
											"end": 2081,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2070,
											"end": 2081,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2044,
											"end": 2082,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2044,
											"end": 2082,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5956,
											"end": 5981,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5956,
											"end": 5981,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5956,
											"end": 5981,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2059,
											"end": 2068,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2059,
											"end": 2068,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2059,
											"end": 2068,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2059,
											"end": 2068,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2044,
											"end": 2082,
											"name": "PUSH",
											"source": 5,
											"value": "E7B379C6C1FA169E9079C25E9143B127637EEF8EC8C9D5C06DDB4AB3E1195888"
										},
										{
											"begin": 2044,
											"end": 2082,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5944,
											"end": 5946,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5929,
											"end": 5947,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2044,
											"end": 2082,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2044,
											"end": 2082,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2044,
											"end": 2082,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2044,
											"end": 2082,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2044,
											"end": 2082,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2044,
											"end": 2082,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2044,
											"end": 2082,
											"name": "LOG2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2100,
											"end": 2110,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2100,
											"end": 2110,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2100,
											"end": 2110,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2100,
											"end": 2110,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2100,
											"end": 2110,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2100,
											"end": 2105,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2100,
											"end": 2110,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2100,
											"end": 2110,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2100,
											"end": 2110,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2100,
											"end": 2110,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2100,
											"end": 2110,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2100,
											"end": 2110,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2100,
											"end": 2110,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2093,
											"end": 2110,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2093,
											"end": 2110,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2093,
											"end": 2110,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2093,
											"end": 2110,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2093,
											"end": 2110,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2093,
											"end": 2110,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2093,
											"end": 2110,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2093,
											"end": 2110,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2093,
											"end": 2110,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2093,
											"end": 2110,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2093,
											"end": 2110,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2093,
											"end": 2110,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2093,
											"end": 2110,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1713,
											"end": 2118,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2038,
											"end": 2206,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2038,
											"end": 2206,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2098,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2091,
											"end": 2098,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1676,
											"end": 1703,
											"name": "PUSH",
											"source": 0,
											"value": "237E158222E3E6968B72B9DB0D8043AACF074AD9F650F0D1606B4D82EE432C00"
										},
										{
											"begin": 2142,
											"end": 2167,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1545,
											"end": 1719,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2524,
											"end": 2771,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2524,
											"end": 2771,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1676,
											"end": 1703,
											"name": "PUSH",
											"source": 0,
											"value": "237E158222E3E6968B72B9DB0D8043AACF074AD9F650F0D1606B4D82EE432C00"
										},
										{
											"begin": 2680,
											"end": 2706,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2680,
											"end": 2706,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2680,
											"end": 2706,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2680,
											"end": 2706,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2680,
											"end": 2706,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2680,
											"end": 2706,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2680,
											"end": 2706,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2680,
											"end": 2706,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2680,
											"end": 2706,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2680,
											"end": 2706,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2746,
											"end": 2753,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 2746,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2746,
											"end": 2753,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2746,
											"end": 2753,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 2746,
											"end": 2753,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2721,
											"end": 2764,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2721,
											"end": 2764,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "38D16B8CAC22D99FC7C124B9CD0DE2D3FA1FAEF420BFE791D8C362D765E22700"
										},
										{
											"begin": 2721,
											"end": 2764,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2721,
											"end": 2764,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2721,
											"end": 2764,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2721,
											"end": 2764,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2721,
											"end": 2764,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2721,
											"end": 2764,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2721,
											"end": 2764,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2721,
											"end": 2764,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2721,
											"end": 2764,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2603,
											"end": 2771,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2524,
											"end": 2771,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2524,
											"end": 2771,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1819,
											"end": 1883,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1819,
											"end": 1883,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 6929,
											"end": 6947,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 6929,
											"end": 6949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 3177,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 2955,
											"end": 3177,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1676,
											"end": 1703,
											"name": "PUSH",
											"source": 0,
											"value": "237E158222E3E6968B72B9DB0D8043AACF074AD9F650F0D1606B4D82EE432C00"
										},
										{
											"begin": 3104,
											"end": 3126,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3104,
											"end": 3126,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3104,
											"end": 3126,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3104,
											"end": 3126,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3104,
											"end": 3126,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3136,
											"end": 3170,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 3161,
											"end": 3169,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3136,
											"end": 3160,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 3136,
											"end": 3170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3136,
											"end": 3170,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 3136,
											"end": 3170,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3027,
											"end": 3177,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2955,
											"end": 3177,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2955,
											"end": 3177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2658,
											"end": 2820,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 2658,
											"end": 2820,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 2717,
											"end": 2722,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 2717,
											"end": 2724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "tag",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1546,
											"end": 1597,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1519,
											"end": 1537,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1519,
											"end": 1537,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1400,
											"end": 1603,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7082,
											"end": 7223,
											"name": "tag",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 7082,
											"end": 7223,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3147,
											"end": 3213,
											"name": "PUSH",
											"source": 2,
											"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7144,
											"end": 7217,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 7144,
											"end": 7217,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1AFCD79F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "tag",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 1335,
											"name": "PUSH",
											"source": 1,
											"value": "9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 1,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3847,
											"end": 3871,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3847,
											"end": 3871,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 3837,
											"end": 4022,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3837,
											"end": 4022,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3774,
											"end": 4022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 111,
											"end": 181,
											"name": "tag",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14,
											"end": 187,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14,
											"end": 187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 192,
											"end": 589,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 192,
											"end": 589,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 278,
											"end": 284,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 286,
											"end": 292,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 294,
											"end": 300,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 302,
											"end": 308,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 355,
											"end": 358,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 343,
											"end": 352,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 334,
											"end": 341,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 330,
											"end": 353,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 326,
											"end": 359,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 323,
											"end": 376,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 323,
											"end": 376,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 323,
											"end": 376,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 372,
											"end": 373,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 369,
											"end": 370,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 362,
											"end": 374,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 323,
											"end": 376,
											"name": "tag",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 323,
											"end": 376,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 395,
											"end": 424,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 414,
											"end": 423,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 395,
											"end": 424,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 395,
											"end": 424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 395,
											"end": 424,
											"name": "tag",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 395,
											"end": 424,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 385,
											"end": 424,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 385,
											"end": 424,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 471,
											"end": 473,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 460,
											"end": 469,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 456,
											"end": 474,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 443,
											"end": 475,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 433,
											"end": 475,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 433,
											"end": 475,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 494,
											"end": 532,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 528,
											"end": 530,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 517,
											"end": 526,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 513,
											"end": 531,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 494,
											"end": 532,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 494,
											"end": 532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 494,
											"end": 532,
											"name": "tag",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 494,
											"end": 532,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 192,
											"end": 589,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 192,
											"end": 589,
											"name": "SWAP7",
											"source": 6
										},
										{
											"begin": 192,
											"end": 589,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 192,
											"end": 589,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 484,
											"end": 532,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 484,
											"end": 532,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 579,
											"end": 581,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 564,
											"end": 582,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 551,
											"end": 583,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 551,
											"end": 583,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 192,
											"end": 589,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 594,
											"end": 854,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 594,
											"end": 854,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 662,
											"end": 668,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 670,
											"end": 676,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 723,
											"end": 725,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 711,
											"end": 720,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 702,
											"end": 709,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 698,
											"end": 721,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 694,
											"end": 726,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 691,
											"end": 743,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 691,
											"end": 743,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 691,
											"end": 743,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 739,
											"end": 740,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 736,
											"end": 737,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 729,
											"end": 741,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 691,
											"end": 743,
											"name": "tag",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 691,
											"end": 743,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 762,
											"end": 791,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 781,
											"end": 790,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 762,
											"end": 791,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 762,
											"end": 791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 762,
											"end": 791,
											"name": "tag",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 762,
											"end": 791,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 752,
											"end": 791,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 752,
											"end": 791,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 810,
											"end": 848,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 844,
											"end": 846,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 833,
											"end": 842,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 829,
											"end": 847,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 810,
											"end": 848,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 810,
											"end": 848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 810,
											"end": 848,
											"name": "tag",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 810,
											"end": 848,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 800,
											"end": 848,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 800,
											"end": 848,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 594,
											"end": 854,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 594,
											"end": 854,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 594,
											"end": 854,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 594,
											"end": 854,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 594,
											"end": 854,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 594,
											"end": 854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 859,
											"end": 1045,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 859,
											"end": 1045,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 918,
											"end": 924,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 971,
											"end": 973,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 959,
											"end": 968,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 950,
											"end": 957,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 946,
											"end": 969,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 942,
											"end": 974,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 939,
											"end": 991,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 939,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 939,
											"end": 991,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 987,
											"end": 988,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 984,
											"end": 985,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 977,
											"end": 989,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 939,
											"end": 991,
											"name": "tag",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 939,
											"end": 991,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1010,
											"end": 1039,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 1029,
											"end": 1038,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1010,
											"end": 1039,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 1010,
											"end": 1039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1010,
											"end": 1039,
											"name": "tag",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 1010,
											"end": 1039,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1000,
											"end": 1039,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 859,
											"end": 1045,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 859,
											"end": 1045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3040,
											"end": 3317,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 3040,
											"end": 3317,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3107,
											"end": 3113,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3160,
											"end": 3162,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3148,
											"end": 3157,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3139,
											"end": 3146,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3135,
											"end": 3158,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3131,
											"end": 3163,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 3128,
											"end": 3180,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3128,
											"end": 3180,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 3128,
											"end": 3180,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3176,
											"end": 3177,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3173,
											"end": 3174,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3166,
											"end": 3178,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3128,
											"end": 3180,
											"name": "tag",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 3128,
											"end": 3180,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3208,
											"end": 3217,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3202,
											"end": 3218,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3266,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3254,
											"end": 3267,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3247,
											"end": 3268,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3240,
											"end": 3245,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3237,
											"end": 3269,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3227,
											"end": 3287,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 3227,
											"end": 3287,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3283,
											"end": 3284,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3280,
											"end": 3281,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3273,
											"end": 3285,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"contracts/LiquidtyLocker.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"acceptOwnership()": "79ba5097",
							"governanceContract()": "b172b222",
							"initialize(address,address)": "485cc955",
							"lockForDEX(address,uint256,address,uint256)": "40678be4",
							"locks(address)": "5de9a137",
							"owner()": "8da5cb5b",
							"pendingOwner()": "e30c3978",
							"renounceOwnership()": "715018a6",
							"token()": "fc0c546a",
							"transferOwnership(address)": "f2fde38b",
							"unlockTokens(address)": "cb67f948"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"unlockTime\",\"type\":\"uint256\"}],\"name\":\"TokensLocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensUnlocked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governanceContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_governance\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"dex\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"unlockTime\",\"type\":\"uint256\"}],\"name\":\"lockForDEX\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"locks\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unlockTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"dex\",\"type\":\"address\"}],\"name\":\"unlockTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"acceptOwnership()\":{\"details\":\"The new owner accepts the ownership transfer.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pendingOwner()\":{\"details\":\"Returns the address of the pending owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner. Setting `newOwner` to the zero address is allowed; this can be used to cancel an initiated ownership transfer.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LiquidtyLocker.sol\":\"LiquidityLocker\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol\":{\"keccak256\":\"0xe9570c90b688339474e80090b0cdf0b2c85c25aa28cc6044d489dda9efc2c716\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f358f7eab8cc53b784d5ff3f82073124d797638aee71487beca3543414a46a23\",\"dweb:/ipfs/QmWy153MjdHfUbqtCKELubAmMavjBEeRByTDv9MMoUVZN4\"]},\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f\",\"dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"contracts/LiquidtyLocker.sol\":{\"keccak256\":\"0xbac6788c5be465d3b438a4cd80884907f3a99b74f1f3290b4adaae5935e2f8a6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4b9dde815d575837a79cd3d6729649636cc1ec0a6f333d8c844a8b598c053354\",\"dweb:/ipfs/QmRuUzbNKBKYyNYzDq5DXoNzDQ5YpsYptbLfB8v9mSZRN3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 734,
								"contract": "contracts/LiquidtyLocker.sol:LiquidityLocker",
								"label": "token",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 736,
								"contract": "contracts/LiquidtyLocker.sol:LiquidityLocker",
								"label": "governanceContract",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 748,
								"contract": "contracts/LiquidtyLocker.sol:LiquidityLocker",
								"label": "locks",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_struct(Lock)743_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(Lock)743_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct LiquidityLocker.Lock)",
								"numberOfBytes": "32",
								"value": "t_struct(Lock)743_storage"
							},
							"t_struct(Lock)743_storage": {
								"encoding": "inplace",
								"label": "struct LiquidityLocker.Lock",
								"members": [
									{
										"astId": 738,
										"contract": "contracts/LiquidtyLocker.sol:LiquidityLocker",
										"label": "user",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 740,
										"contract": "contracts/LiquidtyLocker.sol:LiquidityLocker",
										"label": "amount",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 742,
										"contract": "contracts/LiquidtyLocker.sol:LiquidityLocker",
										"label": "unlockTime",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol",
					"exportedSymbols": {
						"Initializable": [
							599
						],
						"Ownable2StepUpgradeable": [
							136
						],
						"OwnableUpgradeable": [
							331
						]
					},
					"id": 137,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"file": "./OwnableUpgradeable.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 137,
							"sourceUnit": 332,
							"src": "133:60:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "OwnableUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 331,
										"src": "141:18:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 137,
							"sourceUnit": 600,
							"src": "194:63:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 599,
										"src": "202:13:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 7,
										"name": "Initializable",
										"nameLocations": [
											"1115:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 599,
										"src": "1115:13:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "1115:13:0"
								},
								{
									"baseName": {
										"id": 9,
										"name": "OwnableUpgradeable",
										"nameLocations": [
											"1130:18:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 331,
										"src": "1130:18:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "1130:18:0"
								}
							],
							"canonicalName": "Ownable2StepUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 6,
								"nodeType": "StructuredDocumentation",
								"src": "259:810:0",
								"text": " @dev Contract module which provides access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n This extension of the {Ownable} contract includes a two-step mechanism to transfer\n ownership, where the new owner must call {acceptOwnership} in order to replace the\n old one. This can help prevent common mistakes, such as transfers of ownership to\n incorrect accounts, or to contracts that are unable to interact with the\n permission system.\n The initial owner is specified at deployment time in the constructor for `Ownable`. This\n can later be changed with {transferOwnership} and {acceptOwnership}.\n This module is used through inheritance. It will make available all functions\n from parent (Ownable)."
							},
							"fullyImplemented": true,
							"id": 136,
							"linearizedBaseContracts": [
								136,
								331,
								723,
								599
							],
							"name": "Ownable2StepUpgradeable",
							"nameLocation": "1088:23:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Ownable2StepUpgradeable.Ownable2StepStorage",
									"documentation": {
										"id": 11,
										"nodeType": "StructuredDocumentation",
										"src": "1155:70:0",
										"text": "@custom:storage-location erc7201:openzeppelin.storage.Ownable2Step"
									},
									"id": 14,
									"members": [
										{
											"constant": false,
											"id": 13,
											"mutability": "mutable",
											"name": "_pendingOwner",
											"nameLocation": "1275:13:0",
											"nodeType": "VariableDeclaration",
											"scope": 14,
											"src": "1267:21:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 12,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1267:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Ownable2StepStorage",
									"nameLocation": "1237:19:0",
									"nodeType": "StructDefinition",
									"scope": 136,
									"src": "1230:65:0",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 17,
									"mutability": "constant",
									"name": "Ownable2StepStorageLocation",
									"nameLocation": "1442:27:0",
									"nodeType": "VariableDeclaration",
									"scope": 136,
									"src": "1417:121:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 15,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1417:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307832333765313538323232653365363936386237326239646230643830343361616366303734616439663635306630643136303662346438326565343332633030",
										"id": 16,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1472:66:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_16053720875717120191110171845200109550086765943194951757191984851604933389312_by_1",
											"typeString": "int_const 1605...(69 digits omitted)...9312"
										},
										"value": "0x237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c00"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 24,
										"nodeType": "Block",
										"src": "1633:86:0",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1652:61:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1666:37:0",
															"value": {
																"name": "Ownable2StepStorageLocation",
																"nodeType": "YulIdentifier",
																"src": "1676:27:0"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nodeType": "YulIdentifier",
																	"src": "1666:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 21,
														"isOffset": false,
														"isSlot": true,
														"src": "1666:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 17,
														"isOffset": false,
														"isSlot": false,
														"src": "1676:27:0",
														"valueSize": 1
													}
												],
												"id": 23,
												"nodeType": "InlineAssembly",
												"src": "1643:70:0"
											}
										]
									},
									"id": 25,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getOwnable2StepStorage",
									"nameLocation": "1554:23:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1577:2:0"
									},
									"returnParameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "1630:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "1602:29:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Ownable2StepStorage_$14_storage_ptr",
													"typeString": "struct Ownable2StepUpgradeable.Ownable2StepStorage"
												},
												"typeName": {
													"id": 20,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 19,
														"name": "Ownable2StepStorage",
														"nameLocations": [
															"1602:19:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 14,
														"src": "1602:19:0"
													},
													"referencedDeclaration": 14,
													"src": "1602:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Ownable2StepStorage_$14_storage_ptr",
														"typeString": "struct Ownable2StepUpgradeable.Ownable2StepStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1601:31:0"
									},
									"scope": 136,
									"src": "1545:174:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e22700",
									"id": 31,
									"name": "OwnershipTransferStarted",
									"nameLocation": "1731:24:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1772:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "1756:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1756:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 29,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1803:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "1787:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1787:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1755:57:0"
									},
									"src": "1725:88:0"
								},
								{
									"body": {
										"id": 36,
										"nodeType": "Block",
										"src": "1876:7:0",
										"statements": []
									},
									"id": 37,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 34,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 33,
												"name": "onlyInitializing",
												"nameLocations": [
													"1859:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 494,
												"src": "1859:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1859:16:0"
										}
									],
									"name": "__Ownable2Step_init",
									"nameLocation": "1828:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1847:2:0"
									},
									"returnParameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1876:0:0"
									},
									"scope": 136,
									"src": "1819:64:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 42,
										"nodeType": "Block",
										"src": "1956:7:0",
										"statements": []
									},
									"id": 43,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 40,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 39,
												"name": "onlyInitializing",
												"nameLocations": [
													"1939:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 494,
												"src": "1939:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1939:16:0"
										}
									],
									"name": "__Ownable2Step_init_unchained",
									"nameLocation": "1898:29:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1927:2:0"
									},
									"returnParameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1956:0:0"
									},
									"scope": 136,
									"src": "1889:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 58,
										"nodeType": "Block",
										"src": "2100:106:0",
										"statements": [
											{
												"assignments": [
													51
												],
												"declarations": [
													{
														"constant": false,
														"id": 51,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2138:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 58,
														"src": "2110:29:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Ownable2StepStorage_$14_storage_ptr",
															"typeString": "struct Ownable2StepUpgradeable.Ownable2StepStorage"
														},
														"typeName": {
															"id": 50,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 49,
																"name": "Ownable2StepStorage",
																"nameLocations": [
																	"2110:19:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 14,
																"src": "2110:19:0"
															},
															"referencedDeclaration": 14,
															"src": "2110:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Ownable2StepStorage_$14_storage_ptr",
																"typeString": "struct Ownable2StepUpgradeable.Ownable2StepStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 54,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 52,
														"name": "_getOwnable2StepStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "2142:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Ownable2StepStorage_$14_storage_ptr_$",
															"typeString": "function () pure returns (struct Ownable2StepUpgradeable.Ownable2StepStorage storage pointer)"
														}
													},
													"id": 53,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2142:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Ownable2StepStorage_$14_storage_ptr",
														"typeString": "struct Ownable2StepUpgradeable.Ownable2StepStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2110:57:0"
											},
											{
												"expression": {
													"expression": {
														"id": 55,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 51,
														"src": "2184:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Ownable2StepStorage_$14_storage_ptr",
															"typeString": "struct Ownable2StepUpgradeable.Ownable2StepStorage storage pointer"
														}
													},
													"id": 56,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2186:13:0",
													"memberName": "_pendingOwner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 13,
													"src": "2184:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 48,
												"id": 57,
												"nodeType": "Return",
												"src": "2177:22:0"
											}
										]
									},
									"documentation": {
										"id": 44,
										"nodeType": "StructuredDocumentation",
										"src": "1968:65:0",
										"text": " @dev Returns the address of the pending owner."
									},
									"functionSelector": "e30c3978",
									"id": 59,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "pendingOwner",
									"nameLocation": "2047:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2059:2:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "2091:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2091:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2090:9:0"
									},
									"scope": 136,
									"src": "2038:168:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										301
									],
									"body": {
										"id": 86,
										"nodeType": "Block",
										"src": "2603:168:0",
										"statements": [
											{
												"assignments": [
													70
												],
												"declarations": [
													{
														"constant": false,
														"id": 70,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2641:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 86,
														"src": "2613:29:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Ownable2StepStorage_$14_storage_ptr",
															"typeString": "struct Ownable2StepUpgradeable.Ownable2StepStorage"
														},
														"typeName": {
															"id": 69,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 68,
																"name": "Ownable2StepStorage",
																"nameLocations": [
																	"2613:19:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 14,
																"src": "2613:19:0"
															},
															"referencedDeclaration": 14,
															"src": "2613:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Ownable2StepStorage_$14_storage_ptr",
																"typeString": "struct Ownable2StepUpgradeable.Ownable2StepStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 73,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 71,
														"name": "_getOwnable2StepStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "2645:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Ownable2StepStorage_$14_storage_ptr_$",
															"typeString": "function () pure returns (struct Ownable2StepUpgradeable.Ownable2StepStorage storage pointer)"
														}
													},
													"id": 72,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2645:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Ownable2StepStorage_$14_storage_ptr",
														"typeString": "struct Ownable2StepUpgradeable.Ownable2StepStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2613:57:0"
											},
											{
												"expression": {
													"id": 78,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 74,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 70,
															"src": "2680:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Ownable2StepStorage_$14_storage_ptr",
																"typeString": "struct Ownable2StepUpgradeable.Ownable2StepStorage storage pointer"
															}
														},
														"id": 76,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2682:13:0",
														"memberName": "_pendingOwner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 13,
														"src": "2680:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 77,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 62,
														"src": "2698:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2680:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 79,
												"nodeType": "ExpressionStatement",
												"src": "2680:26:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 81,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 242,
																"src": "2746:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2746:7:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 83,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 62,
															"src": "2755:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 80,
														"name": "OwnershipTransferStarted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 31,
														"src": "2721:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2721:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "EmitStatement",
												"src": "2716:48:0"
											}
										]
									},
									"documentation": {
										"id": 60,
										"nodeType": "StructuredDocumentation",
										"src": "2212:307:0",
										"text": " @dev Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one.\n Can only be called by the current owner.\n Setting `newOwner` to the zero address is allowed; this can be used to cancel an initiated ownership transfer."
									},
									"functionSelector": "f2fde38b",
									"id": 87,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 66,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 65,
												"name": "onlyOwner",
												"nameLocations": [
													"2593:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 226,
												"src": "2593:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2593:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2533:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 64,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2584:8:0"
									},
									"parameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2559:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "2551:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2551:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2550:18:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2603:0:0"
									},
									"scope": 136,
									"src": "2524:247:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										330
									],
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "3027:150:0",
										"statements": [
											{
												"assignments": [
													96
												],
												"declarations": [
													{
														"constant": false,
														"id": 96,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3065:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "3037:29:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Ownable2StepStorage_$14_storage_ptr",
															"typeString": "struct Ownable2StepUpgradeable.Ownable2StepStorage"
														},
														"typeName": {
															"id": 95,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 94,
																"name": "Ownable2StepStorage",
																"nameLocations": [
																	"3037:19:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 14,
																"src": "3037:19:0"
															},
															"referencedDeclaration": 14,
															"src": "3037:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Ownable2StepStorage_$14_storage_ptr",
																"typeString": "struct Ownable2StepUpgradeable.Ownable2StepStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 99,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 97,
														"name": "_getOwnable2StepStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "3069:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Ownable2StepStorage_$14_storage_ptr_$",
															"typeString": "function () pure returns (struct Ownable2StepUpgradeable.Ownable2StepStorage storage pointer)"
														}
													},
													"id": 98,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3069:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Ownable2StepStorage_$14_storage_ptr",
														"typeString": "struct Ownable2StepUpgradeable.Ownable2StepStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3037:57:0"
											},
											{
												"expression": {
													"id": 102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "3104:22:0",
													"subExpression": {
														"expression": {
															"id": 100,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 96,
															"src": "3111:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Ownable2StepStorage_$14_storage_ptr",
																"typeString": "struct Ownable2StepUpgradeable.Ownable2StepStorage storage pointer"
															}
														},
														"id": 101,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3113:13:0",
														"memberName": "_pendingOwner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 13,
														"src": "3111:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 103,
												"nodeType": "ExpressionStatement",
												"src": "3104:22:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 90,
															"src": "3161:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 104,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "3136:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_Ownable2StepUpgradeable_$136_$",
																"typeString": "type(contract super Ownable2StepUpgradeable)"
															}
														},
														"id": 106,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3142:18:0",
														"memberName": "_transferOwnership",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 330,
														"src": "3136:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3136:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "ExpressionStatement",
												"src": "3136:34:0"
											}
										]
									},
									"documentation": {
										"id": 88,
										"nodeType": "StructuredDocumentation",
										"src": "2777:173:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`) and deletes any pending owner.\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2964:18:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 92,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3018:8:0"
									},
									"parameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2991:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2983:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 89,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2983:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2982:18:0"
									},
									"returnParameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3027:0:0"
									},
									"scope": 136,
									"src": "2955:222:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 134,
										"nodeType": "Block",
										"src": "3299:187:0",
										"statements": [
											{
												"assignments": [
													116
												],
												"declarations": [
													{
														"constant": false,
														"id": 116,
														"mutability": "mutable",
														"name": "sender",
														"nameLocation": "3317:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 134,
														"src": "3309:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 115,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3309:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 119,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 117,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 705,
														"src": "3326:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3326:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3309:29:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 120,
															"name": "pendingOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 59,
															"src": "3352:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 121,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3352:14:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 122,
														"name": "sender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 116,
														"src": "3370:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3352:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 129,
												"nodeType": "IfStatement",
												"src": "3348:96:0",
												"trueBody": {
													"id": 128,
													"nodeType": "Block",
													"src": "3378:66:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 125,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 116,
																		"src": "3426:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 124,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 167,
																	"src": "3399:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 126,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3399:34:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 127,
															"nodeType": "RevertStatement",
															"src": "3392:41:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 131,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 116,
															"src": "3472:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 130,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															111
														],
														"referencedDeclaration": 111,
														"src": "3453:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3453:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 133,
												"nodeType": "ExpressionStatement",
												"src": "3453:26:0"
											}
										]
									},
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "3183:69:0",
										"text": " @dev The new owner accepts the ownership transfer."
									},
									"functionSelector": "79ba5097",
									"id": 135,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "acceptOwnership",
									"nameLocation": "3266:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3281:2:0"
									},
									"returnParameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3299:0:0"
									},
									"scope": 136,
									"src": "3257:229:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 137,
							"src": "1070:2418:0",
							"usedErrors": [
								167,
								172,
								348,
								351
							],
							"usedEvents": [
								31,
								178,
								356
							]
						}
					],
					"src": "107:3382:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							723
						],
						"Initializable": [
							599
						],
						"OwnableUpgradeable": [
							331
						]
					},
					"id": 332,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 138,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 140,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 332,
							"sourceUnit": 724,
							"src": "128:67:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 139,
										"name": "ContextUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 723,
										"src": "136:18:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 142,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 332,
							"sourceUnit": 600,
							"src": "196:63:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 141,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 599,
										"src": "204:13:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 144,
										"name": "Initializable",
										"nameLocations": [
											"789:13:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 599,
										"src": "789:13:1"
									},
									"id": 145,
									"nodeType": "InheritanceSpecifier",
									"src": "789:13:1"
								},
								{
									"baseName": {
										"id": 146,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"804:18:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 723,
										"src": "804:18:1"
									},
									"id": 147,
									"nodeType": "InheritanceSpecifier",
									"src": "804:18:1"
								}
							],
							"canonicalName": "OwnableUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 143,
								"nodeType": "StructuredDocumentation",
								"src": "261:487:1",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 331,
							"linearizedBaseContracts": [
								331,
								723,
								599
							],
							"name": "OwnableUpgradeable",
							"nameLocation": "767:18:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "OwnableUpgradeable.OwnableStorage",
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "829:65:1",
										"text": "@custom:storage-location erc7201:openzeppelin.storage.Ownable"
									},
									"id": 151,
									"members": [
										{
											"constant": false,
											"id": 150,
											"mutability": "mutable",
											"name": "_owner",
											"nameLocation": "939:6:1",
											"nodeType": "VariableDeclaration",
											"scope": 151,
											"src": "931:14:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 149,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "931:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "OwnableStorage",
									"nameLocation": "906:14:1",
									"nodeType": "StructDefinition",
									"scope": 331,
									"src": "899:53:1",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 154,
									"mutability": "constant",
									"name": "OwnableStorageLocation",
									"nameLocation": "1094:22:1",
									"nodeType": "VariableDeclaration",
									"scope": 331,
									"src": "1069:116:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 152,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1069:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307839303136643039643732643430666461653266643863656163366236323334633737303632313466643339633163643165363039613035323863313939333030",
										"id": 153,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1119:66:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_65173360639460082030725920392146925864023520599682862633725751242436743107328_by_1",
											"typeString": "int_const 6517...(69 digits omitted)...7328"
										},
										"value": "0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 161,
										"nodeType": "Block",
										"src": "1270:81:1",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1289:56:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1303:32:1",
															"value": {
																"name": "OwnableStorageLocation",
																"nodeType": "YulIdentifier",
																"src": "1313:22:1"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nodeType": "YulIdentifier",
																	"src": "1303:6:1"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 158,
														"isOffset": false,
														"isSlot": true,
														"src": "1303:6:1",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 154,
														"isOffset": false,
														"isSlot": false,
														"src": "1313:22:1",
														"valueSize": 1
													}
												],
												"id": 160,
												"nodeType": "InlineAssembly",
												"src": "1280:65:1"
											}
										]
									},
									"id": 162,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getOwnableStorage",
									"nameLocation": "1201:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1219:2:1"
									},
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "1267:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "1244:24:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_OwnableStorage_$151_storage_ptr",
													"typeString": "struct OwnableUpgradeable.OwnableStorage"
												},
												"typeName": {
													"id": 157,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 156,
														"name": "OwnableStorage",
														"nameLocations": [
															"1244:14:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 151,
														"src": "1244:14:1"
													},
													"referencedDeclaration": 151,
													"src": "1244:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$151_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1243:26:1"
									},
									"scope": 331,
									"src": "1192:159:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 163,
										"nodeType": "StructuredDocumentation",
										"src": "1357:85:1",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 167,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "1453:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1488:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "1480:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 164,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1480:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1479:17:1"
									},
									"src": "1447:50:1"
								},
								{
									"documentation": {
										"id": 168,
										"nodeType": "StructuredDocumentation",
										"src": "1503:82:1",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 172,
									"name": "OwnableInvalidOwner",
									"nameLocation": "1596:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1624:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "1616:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 169,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1616:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1615:15:1"
									},
									"src": "1590:41:1"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 178,
									"name": "OwnershipTransferred",
									"nameLocation": "1643:20:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1680:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1664:29:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1711:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1695:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 175,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1695:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1663:57:1"
									},
									"src": "1637:84:1"
								},
								{
									"body": {
										"id": 190,
										"nodeType": "Block",
										"src": "1919:55:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 187,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 181,
															"src": "1954:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 186,
														"name": "__Ownable_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 218,
														"src": "1929:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1929:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 189,
												"nodeType": "ExpressionStatement",
												"src": "1929:38:1"
											}
										]
									},
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1727:115:1",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 191,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 184,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 183,
												"name": "onlyInitializing",
												"nameLocations": [
													"1902:16:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 494,
												"src": "1902:16:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "1902:16:1"
										}
									],
									"name": "__Ownable_init",
									"nameLocation": "1856:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1879:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "1871:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1871:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1870:22:1"
									},
									"returnParameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1919:0:1"
									},
									"scope": 331,
									"src": "1847:127:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 217,
										"nodeType": "Block",
										"src": "2062:153:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 198,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "2076:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 201,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 200,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2092:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 199,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2092:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 202,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2092:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2076:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 212,
												"nodeType": "IfStatement",
												"src": "2072:95:1",
												"trueBody": {
													"id": 211,
													"nodeType": "Block",
													"src": "2104:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 207,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2153:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 206,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2145:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 205,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2145:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 208,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2145:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 204,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 172,
																	"src": "2125:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 209,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2125:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 210,
															"nodeType": "RevertStatement",
															"src": "2118:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 214,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 193,
															"src": "2195:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 213,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 330,
														"src": "2176:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2176:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 216,
												"nodeType": "ExpressionStatement",
												"src": "2176:32:1"
											}
										]
									},
									"id": 218,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 196,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 195,
												"name": "onlyInitializing",
												"nameLocations": [
													"2045:16:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 494,
												"src": "2045:16:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2045:16:1"
										}
									],
									"name": "__Ownable_init_unchained",
									"nameLocation": "1989:24:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "2022:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "2014:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2014:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2013:22:1"
									},
									"returnParameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2062:0:1"
									},
									"scope": 331,
									"src": "1980:235:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 225,
										"nodeType": "Block",
										"src": "2324:41:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 221,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 259,
														"src": "2334:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2334:13:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 223,
												"nodeType": "ExpressionStatement",
												"src": "2334:13:1"
											},
											{
												"id": 224,
												"nodeType": "PlaceholderStatement",
												"src": "2357:1:1"
											}
										]
									},
									"documentation": {
										"id": 219,
										"nodeType": "StructuredDocumentation",
										"src": "2221:77:1",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 226,
									"name": "onlyOwner",
									"nameLocation": "2312:9:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2321:2:1"
									},
									"src": "2303:62:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 241,
										"nodeType": "Block",
										"src": "2496:89:1",
										"statements": [
											{
												"assignments": [
													234
												],
												"declarations": [
													{
														"constant": false,
														"id": 234,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2529:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 241,
														"src": "2506:24:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$151_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage"
														},
														"typeName": {
															"id": 233,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 232,
																"name": "OwnableStorage",
																"nameLocations": [
																	"2506:14:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 151,
																"src": "2506:14:1"
															},
															"referencedDeclaration": 151,
															"src": "2506:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$151_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 237,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 235,
														"name": "_getOwnableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 162,
														"src": "2533:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$151_storage_ptr_$",
															"typeString": "function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"
														}
													},
													"id": 236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2533:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$151_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:47:1"
											},
											{
												"expression": {
													"expression": {
														"id": 238,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 234,
														"src": "2570:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$151_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
														}
													},
													"id": 239,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2572:6:1",
													"memberName": "_owner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 150,
													"src": "2570:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 231,
												"id": 240,
												"nodeType": "Return",
												"src": "2563:15:1"
											}
										]
									},
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "2371:65:1",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 242,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "2450:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2455:2:1"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 242,
												"src": "2487:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 229,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2487:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2486:9:1"
									},
									"scope": 331,
									"src": "2441:144:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 258,
										"nodeType": "Block",
										"src": "2703:117:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 246,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "2717:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 247,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2717:7:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 248,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 705,
															"src": "2728:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 249,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2728:12:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2717:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 257,
												"nodeType": "IfStatement",
												"src": "2713:101:1",
												"trueBody": {
													"id": 256,
													"nodeType": "Block",
													"src": "2742:72:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 252,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 705,
																			"src": "2790:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 253,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2790:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 251,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 167,
																	"src": "2763:26:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 254,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2763:40:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 255,
															"nodeType": "RevertStatement",
															"src": "2756:47:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 243,
										"nodeType": "StructuredDocumentation",
										"src": "2591:62:1",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 259,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "2667:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2678:2:1"
									},
									"returnParameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2703:0:1"
									},
									"scope": 331,
									"src": "2658:162:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 272,
										"nodeType": "Block",
										"src": "3209:47:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 268,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3246:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 267,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3238:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 266,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3238:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 269,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3238:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 265,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 330,
														"src": "3219:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3219:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 271,
												"nodeType": "ExpressionStatement",
												"src": "3219:30:1"
											}
										]
									},
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "2826:324:1",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 273,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 263,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 262,
												"name": "onlyOwner",
												"nameLocations": [
													"3199:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 226,
												"src": "3199:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "3199:9:1"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "3164:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 261,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3181:2:1"
									},
									"returnParameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3209:0:1"
									},
									"scope": 331,
									"src": "3155:101:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 300,
										"nodeType": "Block",
										"src": "3475:145:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 281,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 276,
														"src": "3489:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 284,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3509:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 283,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3501:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 282,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3501:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 285,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3501:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3489:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 295,
												"nodeType": "IfStatement",
												"src": "3485:91:1",
												"trueBody": {
													"id": 294,
													"nodeType": "Block",
													"src": "3513:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 290,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3562:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 289,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3554:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 288,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3554:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 291,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3554:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 287,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 172,
																	"src": "3534:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 292,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3534:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 293,
															"nodeType": "RevertStatement",
															"src": "3527:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 297,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "3604:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 296,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 330,
														"src": "3585:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3585:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 299,
												"nodeType": "ExpressionStatement",
												"src": "3585:28:1"
											}
										]
									},
									"documentation": {
										"id": 274,
										"nodeType": "StructuredDocumentation",
										"src": "3262:138:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 301,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 279,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 278,
												"name": "onlyOwner",
												"nameLocations": [
													"3465:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 226,
												"src": "3465:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "3465:9:1"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "3414:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3440:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "3432:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 275,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3432:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3431:18:1"
									},
									"returnParameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3475:0:1"
									},
									"scope": 331,
									"src": "3405:215:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 329,
										"nodeType": "Block",
										"src": "3837:185:1",
										"statements": [
											{
												"assignments": [
													309
												],
												"declarations": [
													{
														"constant": false,
														"id": 309,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3870:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 329,
														"src": "3847:24:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$151_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage"
														},
														"typeName": {
															"id": 308,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 307,
																"name": "OwnableStorage",
																"nameLocations": [
																	"3847:14:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 151,
																"src": "3847:14:1"
															},
															"referencedDeclaration": 151,
															"src": "3847:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$151_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 312,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 310,
														"name": "_getOwnableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 162,
														"src": "3874:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$151_storage_ptr_$",
															"typeString": "function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"
														}
													},
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3874:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$151_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3847:47:1"
											},
											{
												"assignments": [
													314
												],
												"declarations": [
													{
														"constant": false,
														"id": 314,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "3912:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 329,
														"src": "3904:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 313,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3904:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 317,
												"initialValue": {
													"expression": {
														"id": 315,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 309,
														"src": "3923:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$151_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
														}
													},
													"id": 316,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3925:6:1",
													"memberName": "_owner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 150,
													"src": "3923:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3904:27:1"
											},
											{
												"expression": {
													"id": 322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 318,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "3941:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$151_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
															}
														},
														"id": 320,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3943:6:1",
														"memberName": "_owner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 150,
														"src": "3941:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 321,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 304,
														"src": "3952:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3941:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 323,
												"nodeType": "ExpressionStatement",
												"src": "3941:19:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 325,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 314,
															"src": "3996:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 326,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 304,
															"src": "4006:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 324,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 178,
														"src": "3975:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3975:40:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 328,
												"nodeType": "EmitStatement",
												"src": "3970:45:1"
											}
										]
									},
									"documentation": {
										"id": 302,
										"nodeType": "StructuredDocumentation",
										"src": "3626:143:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 330,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "3783:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3810:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 330,
												"src": "3802:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 303,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3802:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3801:18:1"
									},
									"returnParameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3837:0:1"
									},
									"scope": 331,
									"src": "3774:248:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 332,
							"src": "749:3275:1",
							"usedErrors": [
								167,
								172,
								348,
								351
							],
							"usedEvents": [
								178,
								356
							]
						}
					],
					"src": "102:3923:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"Initializable": [
							599
						]
					},
					"id": 600,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 333,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 334,
								"nodeType": "StructuredDocumentation",
								"src": "139:2209:2",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 599,
							"linearizedBaseContracts": [
								599
							],
							"name": "Initializable",
							"nameLocation": "2367:13:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Initializable.InitializableStorage",
									"documentation": {
										"id": 335,
										"nodeType": "StructuredDocumentation",
										"src": "2387:293:2",
										"text": " @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"
									},
									"id": 342,
									"members": [
										{
											"constant": false,
											"id": 338,
											"mutability": "mutable",
											"name": "_initialized",
											"nameLocation": "2820:12:2",
											"nodeType": "VariableDeclaration",
											"scope": 342,
											"src": "2813:19:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 337,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2813:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 341,
											"mutability": "mutable",
											"name": "_initializing",
											"nameLocation": "2955:13:2",
											"nodeType": "VariableDeclaration",
											"scope": 342,
											"src": "2950:18:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 340,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2950:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "InitializableStorage",
									"nameLocation": "2692:20:2",
									"nodeType": "StructDefinition",
									"scope": 599,
									"src": "2685:290:2",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 345,
									"mutability": "constant",
									"name": "INITIALIZABLE_STORAGE",
									"nameLocation": "3123:21:2",
									"nodeType": "VariableDeclaration",
									"scope": 599,
									"src": "3098:115:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 343,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3098:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030",
										"id": 344,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3147:66:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1",
											"typeString": "int_const 1089...(70 digits omitted)...9600"
										},
										"value": "0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "3220:60:2",
										"text": " @dev The contract is already initialized."
									},
									"errorSelector": "f92ee8a9",
									"id": 348,
									"name": "InvalidInitialization",
									"nameLocation": "3291:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3312:2:2"
									},
									"src": "3285:30:2"
								},
								{
									"documentation": {
										"id": 349,
										"nodeType": "StructuredDocumentation",
										"src": "3321:57:2",
										"text": " @dev The contract is not initializing."
									},
									"errorSelector": "d7e6bcf8",
									"id": 351,
									"name": "NotInitializing",
									"nameLocation": "3389:15:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3404:2:2"
									},
									"src": "3383:24:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 352,
										"nodeType": "StructuredDocumentation",
										"src": "3413:90:2",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"eventSelector": "c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2",
									"id": 356,
									"name": "Initialized",
									"nameLocation": "3514:11:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 354,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "3533:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 356,
												"src": "3526:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 353,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3526:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3525:16:2"
									},
									"src": "3508:34:2"
								},
								{
									"body": {
										"id": 438,
										"nodeType": "Block",
										"src": "4092:1079:2",
										"statements": [
											{
												"assignments": [
													361
												],
												"declarations": [
													{
														"constant": false,
														"id": 361,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4187:1:2",
														"nodeType": "VariableDeclaration",
														"scope": 438,
														"src": "4158:30:2",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$342_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 360,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 359,
																"name": "InitializableStorage",
																"nameLocations": [
																	"4158:20:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 342,
																"src": "4158:20:2"
															},
															"referencedDeclaration": 342,
															"src": "4158:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$342_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 364,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 362,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 598,
														"src": "4191:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$342_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4191:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$342_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4158:59:2"
											},
											{
												"assignments": [
													366
												],
												"declarations": [
													{
														"constant": false,
														"id": 366,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "4284:14:2",
														"nodeType": "VariableDeclaration",
														"scope": 438,
														"src": "4279:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 365,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4279:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 370,
												"initialValue": {
													"id": 369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4301:16:2",
													"subExpression": {
														"expression": {
															"id": 367,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 361,
															"src": "4302:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$342_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 368,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4304:13:2",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 341,
														"src": "4302:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4279:38:2"
											},
											{
												"assignments": [
													372
												],
												"declarations": [
													{
														"constant": false,
														"id": 372,
														"mutability": "mutable",
														"name": "initialized",
														"nameLocation": "4334:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 438,
														"src": "4327:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 371,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "4327:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 375,
												"initialValue": {
													"expression": {
														"id": 373,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 361,
														"src": "4348:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$342_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 374,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4350:12:2",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 338,
													"src": "4348:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4327:35:2"
											},
											{
												"assignments": [
													377
												],
												"declarations": [
													{
														"constant": false,
														"id": 377,
														"mutability": "mutable",
														"name": "initialSetup",
														"nameLocation": "4709:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 438,
														"src": "4704:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 376,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4704:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 383,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 382,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 380,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 378,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 372,
															"src": "4724:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 379,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4739:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4724:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 381,
														"name": "isTopLevelCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 366,
														"src": "4744:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4724:34:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4704:54:2"
											},
											{
												"assignments": [
													385
												],
												"declarations": [
													{
														"constant": false,
														"id": 385,
														"mutability": "mutable",
														"name": "construction",
														"nameLocation": "4773:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 438,
														"src": "4768:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 384,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4768:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 398,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 388,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 386,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 372,
															"src": "4788:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 387,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4803:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "4788:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 396,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 391,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4816:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Initializable_$599",
																				"typeString": "contract Initializable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Initializable_$599",
																				"typeString": "contract Initializable"
																			}
																		],
																		"id": 390,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4808:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 389,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4808:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 392,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4808:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 393,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4822:4:2",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "4808:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 394,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4827:6:2",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4808:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 395,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4837:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4808:30:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4788:50:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4768:70:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 400,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4853:13:2",
														"subExpression": {
															"id": 399,
															"name": "initialSetup",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 377,
															"src": "4854:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 402,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4870:13:2",
														"subExpression": {
															"id": 401,
															"name": "construction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 385,
															"src": "4871:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4853:30:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 408,
												"nodeType": "IfStatement",
												"src": "4849:91:2",
												"trueBody": {
													"id": 407,
													"nodeType": "Block",
													"src": "4885:55:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 404,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 348,
																	"src": "4906:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 405,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4906:23:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 406,
															"nodeType": "RevertStatement",
															"src": "4899:30:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 409,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 361,
															"src": "4949:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$342_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 411,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4951:12:2",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 338,
														"src": "4949:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 412,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4966:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "4949:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 414,
												"nodeType": "ExpressionStatement",
												"src": "4949:18:2"
											},
											{
												"condition": {
													"id": 415,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 366,
													"src": "4981:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 423,
												"nodeType": "IfStatement",
												"src": "4977:67:2",
												"trueBody": {
													"id": 422,
													"nodeType": "Block",
													"src": "4997:47:2",
													"statements": [
														{
															"expression": {
																"id": 420,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 416,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 361,
																		"src": "5011:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$342_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 418,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5013:13:2",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 341,
																	"src": "5011:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 419,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5029:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "5011:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 421,
															"nodeType": "ExpressionStatement",
															"src": "5011:22:2"
														}
													]
												}
											},
											{
												"id": 424,
												"nodeType": "PlaceholderStatement",
												"src": "5053:1:2"
											},
											{
												"condition": {
													"id": 425,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 366,
													"src": "5068:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 437,
												"nodeType": "IfStatement",
												"src": "5064:101:2",
												"trueBody": {
													"id": 436,
													"nodeType": "Block",
													"src": "5084:81:2",
													"statements": [
														{
															"expression": {
																"id": 430,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 426,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 361,
																		"src": "5098:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$342_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 428,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5100:13:2",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 341,
																	"src": "5098:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 429,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5116:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "5098:23:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 431,
															"nodeType": "ExpressionStatement",
															"src": "5098:23:2"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 433,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5152:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 432,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 356,
																	"src": "5140:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 434,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5140:14:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 435,
															"nodeType": "EmitStatement",
															"src": "5135:19:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 357,
										"nodeType": "StructuredDocumentation",
										"src": "3548:516:2",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."
									},
									"id": 439,
									"name": "initializer",
									"nameLocation": "4078:11:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4089:2:2"
									},
									"src": "4069:1102:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 485,
										"nodeType": "Block",
										"src": "6289:392:2",
										"statements": [
											{
												"assignments": [
													446
												],
												"declarations": [
													{
														"constant": false,
														"id": 446,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "6384:1:2",
														"nodeType": "VariableDeclaration",
														"scope": 485,
														"src": "6355:30:2",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$342_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 445,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 444,
																"name": "InitializableStorage",
																"nameLocations": [
																	"6355:20:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 342,
																"src": "6355:20:2"
															},
															"referencedDeclaration": 342,
															"src": "6355:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$342_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 449,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 447,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 598,
														"src": "6388:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$342_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6388:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$342_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6355:59:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 450,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 446,
															"src": "6429:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$342_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 451,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6431:13:2",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 341,
														"src": "6429:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 455,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 452,
																"name": "$",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 446,
																"src": "6448:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_InitializableStorage_$342_storage_ptr",
																	"typeString": "struct Initializable.InitializableStorage storage pointer"
																}
															},
															"id": 453,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6450:12:2",
															"memberName": "_initialized",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 338,
															"src": "6448:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 454,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 442,
															"src": "6466:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"src": "6448:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6429:44:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 461,
												"nodeType": "IfStatement",
												"src": "6425:105:2",
												"trueBody": {
													"id": 460,
													"nodeType": "Block",
													"src": "6475:55:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 457,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 348,
																	"src": "6496:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 458,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6496:23:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 459,
															"nodeType": "RevertStatement",
															"src": "6489:30:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 466,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 462,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 446,
															"src": "6539:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$342_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 464,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6541:12:2",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 338,
														"src": "6539:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 465,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 442,
														"src": "6556:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "6539:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 467,
												"nodeType": "ExpressionStatement",
												"src": "6539:24:2"
											},
											{
												"expression": {
													"id": 472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 468,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 446,
															"src": "6573:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$342_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 470,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6575:13:2",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 341,
														"src": "6573:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 471,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6591:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6573:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 473,
												"nodeType": "ExpressionStatement",
												"src": "6573:22:2"
											},
											{
												"id": 474,
												"nodeType": "PlaceholderStatement",
												"src": "6605:1:2"
											},
											{
												"expression": {
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 475,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 446,
															"src": "6616:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$342_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 477,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6618:13:2",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 341,
														"src": "6616:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 478,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6634:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "6616:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 480,
												"nodeType": "ExpressionStatement",
												"src": "6616:23:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 482,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 442,
															"src": "6666:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 481,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 356,
														"src": "6654:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
															"typeString": "function (uint64)"
														}
													},
													"id": 483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6654:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 484,
												"nodeType": "EmitStatement",
												"src": "6649:25:2"
											}
										]
									},
									"documentation": {
										"id": 440,
										"nodeType": "StructuredDocumentation",
										"src": "5177:1068:2",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."
									},
									"id": 486,
									"name": "reinitializer",
									"nameLocation": "6259:13:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 442,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "6280:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 486,
												"src": "6273:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 441,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "6273:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6272:16:2"
									},
									"src": "6250:431:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 493,
										"nodeType": "Block",
										"src": "6919:48:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 489,
														"name": "_checkInitializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 507,
														"src": "6929:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6929:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 491,
												"nodeType": "ExpressionStatement",
												"src": "6929:20:2"
											},
											{
												"id": 492,
												"nodeType": "PlaceholderStatement",
												"src": "6959:1:2"
											}
										]
									},
									"documentation": {
										"id": 487,
										"nodeType": "StructuredDocumentation",
										"src": "6687:199:2",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 494,
									"name": "onlyInitializing",
									"nameLocation": "6900:16:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6916:2:2"
									},
									"src": "6891:76:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 506,
										"nodeType": "Block",
										"src": "7134:89:2",
										"statements": [
											{
												"condition": {
													"id": 500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7148:18:2",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 498,
															"name": "_isInitializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 575,
															"src": "7149:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 499,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7149:17:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 505,
												"nodeType": "IfStatement",
												"src": "7144:73:2",
												"trueBody": {
													"id": 504,
													"nodeType": "Block",
													"src": "7168:49:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 501,
																	"name": "NotInitializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 351,
																	"src": "7189:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7189:17:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 503,
															"nodeType": "RevertStatement",
															"src": "7182:24:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 495,
										"nodeType": "StructuredDocumentation",
										"src": "6973:104:2",
										"text": " @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."
									},
									"id": 507,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkInitializing",
									"nameLocation": "7091:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7109:2:2"
									},
									"returnParameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7134:0:2"
									},
									"scope": 599,
									"src": "7082:141:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 552,
										"nodeType": "Block",
										"src": "7758:373:2",
										"statements": [
											{
												"assignments": [
													513
												],
												"declarations": [
													{
														"constant": false,
														"id": 513,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "7853:1:2",
														"nodeType": "VariableDeclaration",
														"scope": 552,
														"src": "7824:30:2",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$342_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 512,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 511,
																"name": "InitializableStorage",
																"nameLocations": [
																	"7824:20:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 342,
																"src": "7824:20:2"
															},
															"referencedDeclaration": 342,
															"src": "7824:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$342_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 516,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 514,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 598,
														"src": "7857:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$342_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 515,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7857:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$342_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7824:59:2"
											},
											{
												"condition": {
													"expression": {
														"id": 517,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 513,
														"src": "7898:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$342_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 518,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7900:13:2",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 341,
													"src": "7898:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 523,
												"nodeType": "IfStatement",
												"src": "7894:76:2",
												"trueBody": {
													"id": 522,
													"nodeType": "Block",
													"src": "7915:55:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 519,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 348,
																	"src": "7936:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 520,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7936:23:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 521,
															"nodeType": "RevertStatement",
															"src": "7929:30:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													},
													"id": 531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 524,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 513,
															"src": "7983:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$342_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 525,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7985:12:2",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 338,
														"src": "7983:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 528,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8006:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 527,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "8006:6:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	}
																],
																"id": 526,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8001:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 529,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8001:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint64",
																"typeString": "type(uint64)"
															}
														},
														"id": 530,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8014:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8001:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "7983:34:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 551,
												"nodeType": "IfStatement",
												"src": "7979:146:2",
												"trueBody": {
													"id": 550,
													"nodeType": "Block",
													"src": "8019:106:2",
													"statements": [
														{
															"expression": {
																"id": 540,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 532,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 513,
																		"src": "8033:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$342_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 534,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "8035:12:2",
																	"memberName": "_initialized",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 338,
																	"src": "8033:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 537,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8055:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				},
																				"typeName": {
																					"id": 536,
																					"name": "uint64",
																					"nodeType": "ElementaryTypeName",
																					"src": "8055:6:2",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				}
																			],
																			"id": 535,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "8050:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 538,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8050:12:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint64",
																			"typeString": "type(uint64)"
																		}
																	},
																	"id": 539,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "8063:3:2",
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "8050:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"src": "8033:33:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"id": 541,
															"nodeType": "ExpressionStatement",
															"src": "8033:33:2"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 545,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "8102:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					},
																					"typeName": {
																						"id": 544,
																						"name": "uint64",
																						"nodeType": "ElementaryTypeName",
																						"src": "8102:6:2",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					}
																				],
																				"id": 543,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "8097:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 546,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8097:12:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint64",
																				"typeString": "type(uint64)"
																			}
																		},
																		"id": 547,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "8110:3:2",
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "8097:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	],
																	"id": 542,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 356,
																	"src": "8085:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 548,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8085:29:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 549,
															"nodeType": "EmitStatement",
															"src": "8080:34:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 508,
										"nodeType": "StructuredDocumentation",
										"src": "7229:475:2",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
									},
									"id": 553,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "7718:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7738:2:2"
									},
									"returnParameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7758:0:2"
									},
									"scope": 599,
									"src": "7709:422:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 563,
										"nodeType": "Block",
										"src": "8306:63:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 559,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 598,
															"src": "8323:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$342_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 560,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8323:26:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$342_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 561,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8350:12:2",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 338,
													"src": "8323:39:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 558,
												"id": 562,
												"nodeType": "Return",
												"src": "8316:46:2"
											}
										]
									},
									"documentation": {
										"id": 554,
										"nodeType": "StructuredDocumentation",
										"src": "8137:99:2",
										"text": " @dev Returns the highest version that has been initialized. See {reinitializer}."
									},
									"id": 564,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializedVersion",
									"nameLocation": "8250:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8272:2:2"
									},
									"returnParameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "8298:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 556,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "8298:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8297:8:2"
									},
									"scope": 599,
									"src": "8241:128:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 574,
										"nodeType": "Block",
										"src": "8541:64:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 570,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 598,
															"src": "8558:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$342_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 571,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8558:26:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$342_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 572,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8585:13:2",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 341,
													"src": "8558:40:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 569,
												"id": 573,
												"nodeType": "Return",
												"src": "8551:47:2"
											}
										]
									},
									"documentation": {
										"id": 565,
										"nodeType": "StructuredDocumentation",
										"src": "8375:105:2",
										"text": " @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."
									},
									"id": 575,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isInitializing",
									"nameLocation": "8494:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8509:2:2"
									},
									"returnParameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "8535:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 567,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8535:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8534:6:2"
									},
									"scope": 599,
									"src": "8485:120:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 583,
										"nodeType": "Block",
										"src": "8896:45:2",
										"statements": [
											{
												"expression": {
													"id": 581,
													"name": "INITIALIZABLE_STORAGE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 345,
													"src": "8913:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 580,
												"id": 582,
												"nodeType": "Return",
												"src": "8906:28:2"
											}
										]
									},
									"documentation": {
										"id": 576,
										"nodeType": "StructuredDocumentation",
										"src": "8611:203:2",
										"text": " @dev Pointer to storage slot. Allows integrators to override it with a custom storage location.\n NOTE: Consider following the ERC-7201 formula to derive storage locations."
									},
									"id": 584,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_initializableStorageSlot",
									"nameLocation": "8828:25:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 577,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8853:2:2"
									},
									"returnParameters": {
										"id": 580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 579,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "8887:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 578,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8887:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8886:9:2"
									},
									"scope": 599,
									"src": "8819:122:2",
									"stateMutability": "pure",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 597,
										"nodeType": "Block",
										"src": "9161:115:2",
										"statements": [
											{
												"assignments": [
													592
												],
												"declarations": [
													{
														"constant": false,
														"id": 592,
														"mutability": "mutable",
														"name": "slot",
														"nameLocation": "9179:4:2",
														"nodeType": "VariableDeclaration",
														"scope": 597,
														"src": "9171:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 591,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "9171:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 595,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 593,
														"name": "_initializableStorageSlot",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 584,
														"src": "9186:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_bytes32_$",
															"typeString": "function () pure returns (bytes32)"
														}
													},
													"id": 594,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9186:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9171:42:2"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "9232:38:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9246:14:2",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "9256:4:2"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nodeType": "YulIdentifier",
																	"src": "9246:6:2"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 589,
														"isOffset": false,
														"isSlot": true,
														"src": "9246:6:2",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 592,
														"isOffset": false,
														"isSlot": false,
														"src": "9256:4:2",
														"valueSize": 1
													}
												],
												"id": 596,
												"nodeType": "InlineAssembly",
												"src": "9223:47:2"
											}
										]
									},
									"documentation": {
										"id": 585,
										"nodeType": "StructuredDocumentation",
										"src": "8947:67:2",
										"text": " @dev Returns a pointer to the storage namespace."
									},
									"id": 598,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializableStorage",
									"nameLocation": "9080:24:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9104:2:2"
									},
									"returnParameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 589,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "9158:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "9129:30:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_InitializableStorage_$342_storage_ptr",
													"typeString": "struct Initializable.InitializableStorage"
												},
												"typeName": {
													"id": 588,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 587,
														"name": "InitializableStorage",
														"nameLocations": [
															"9129:20:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 342,
														"src": "9129:20:2"
													},
													"referencedDeclaration": 342,
													"src": "9129:20:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$342_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9128:32:2"
									},
									"scope": 599,
									"src": "9071:205:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 600,
							"src": "2349:6929:2",
							"usedErrors": [
								348,
								351
							],
							"usedEvents": [
								356
							]
						}
					],
					"src": "113:9166:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
					"exportedSymbols": {
						"IERC20Upgradeable": [
							677
						]
					},
					"id": 678,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 601,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Upgradeable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 602,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 677,
							"linearizedBaseContracts": [
								677
							],
							"name": "IERC20Upgradeable",
							"nameLocation": "212:17:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 603,
										"nodeType": "StructuredDocumentation",
										"src": "236:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 611,
									"name": "Transfer",
									"nameLocation": "405:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "430:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "414:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "414:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "452:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "436:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "436:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "464:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "456:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "456:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "413:57:3"
									},
									"src": "399:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 612,
										"nodeType": "StructuredDocumentation",
										"src": "477:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 620,
									"name": "Approval",
									"nameLocation": "636:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 614,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "661:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "645:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 613,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "645:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 616,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "684:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "668:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 615,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 618,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "701:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "693:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 617,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "644:63:3"
									},
									"src": "630:78:3"
								},
								{
									"documentation": {
										"id": 621,
										"nodeType": "StructuredDocumentation",
										"src": "714:66:3",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 626,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "794:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 622,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "805:2:3"
									},
									"returnParameters": {
										"id": 625,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 626,
												"src": "831:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 623,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "831:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "830:9:3"
									},
									"scope": 677,
									"src": "785:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 627,
										"nodeType": "StructuredDocumentation",
										"src": "846:72:3",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 634,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "932:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 629,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "950:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 634,
												"src": "942:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 628,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "942:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "941:17:3"
									},
									"returnParameters": {
										"id": 633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 634,
												"src": "982:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 631,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "982:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "981:9:3"
									},
									"scope": 677,
									"src": "923:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 635,
										"nodeType": "StructuredDocumentation",
										"src": "997:202:3",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 644,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 637,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "1222:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 636,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 639,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1242:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "1234:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 638,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:28:3"
									},
									"returnParameters": {
										"id": 643,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "1268:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 641,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:6:3"
									},
									"scope": 677,
									"src": "1204:70:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 645,
										"nodeType": "StructuredDocumentation",
										"src": "1280:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 654,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1558:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1576:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 654,
												"src": "1568:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 646,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1568:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1591:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 654,
												"src": "1583:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 648,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1583:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1567:32:3"
									},
									"returnParameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 652,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 654,
												"src": "1623:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 651,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1623:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1622:9:3"
									},
									"scope": 677,
									"src": "1549:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "1638:642:3",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 664,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2294:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2310:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "2302:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2302:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2327:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "2319:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 658,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2319:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2301:33:3"
									},
									"returnParameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "2353:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 661,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2353:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2352:6:3"
									},
									"scope": 677,
									"src": "2285:74:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 665,
										"nodeType": "StructuredDocumentation",
										"src": "2365:287:3",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 676,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2666:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2687:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 676,
												"src": "2679:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 666,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2701:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 676,
												"src": "2693:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 668,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2693:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2713:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 676,
												"src": "2705:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 670,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2705:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2678:42:3"
									},
									"returnParameters": {
										"id": 675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 676,
												"src": "2739:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 673,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2739:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2738:6:3"
									},
									"scope": 677,
									"src": "2657:88:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 678,
							"src": "202:2545:3",
							"usedErrors": [],
							"usedEvents": [
								611,
								620
							]
						}
					],
					"src": "106:2642:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							723
						],
						"Initializable": [
							599
						]
					},
					"id": 724,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 679,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 681,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 724,
							"sourceUnit": 600,
							"src": "126:63:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 680,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 599,
										"src": "134:13:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 683,
										"name": "Initializable",
										"nameLocations": [
											"728:13:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 599,
										"src": "728:13:4"
									},
									"id": 684,
									"nodeType": "InheritanceSpecifier",
									"src": "728:13:4"
								}
							],
							"canonicalName": "ContextUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 682,
								"nodeType": "StructuredDocumentation",
								"src": "191:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 723,
							"linearizedBaseContracts": [
								723,
								599
							],
							"name": "ContextUpgradeable",
							"nameLocation": "706:18:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "800:7:4",
										"statements": []
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 687,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 686,
												"name": "onlyInitializing",
												"nameLocations": [
													"783:16:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 494,
												"src": "783:16:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "783:16:4"
										}
									],
									"name": "__Context_init",
									"nameLocation": "757:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "771:2:4"
									},
									"returnParameters": {
										"id": 688,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "800:0:4"
									},
									"scope": 723,
									"src": "748:59:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 695,
										"nodeType": "Block",
										"src": "875:7:4",
										"statements": []
									},
									"id": 696,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 693,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 692,
												"name": "onlyInitializing",
												"nameLocations": [
													"858:16:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 494,
												"src": "858:16:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "858:16:4"
										}
									],
									"name": "__Context_init_unchained",
									"nameLocation": "822:24:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 691,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "846:2:4"
									},
									"returnParameters": {
										"id": 694,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "875:0:4"
									},
									"scope": 723,
									"src": "813:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 704,
										"nodeType": "Block",
										"src": "949:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 701,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "966:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "970:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "966:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 700,
												"id": 703,
												"nodeType": "Return",
												"src": "959:17:4"
											}
										]
									},
									"id": 705,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "896:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 697,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "906:2:4"
									},
									"returnParameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "940:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "940:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "939:9:4"
									},
									"scope": 723,
									"src": "887:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 713,
										"nodeType": "Block",
										"src": "1056:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 710,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1073:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 711,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1077:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "1073:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 709,
												"id": 712,
												"nodeType": "Return",
												"src": "1066:15:4"
											}
										]
									},
									"id": 714,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "998:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 706,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1006:2:4"
									},
									"returnParameters": {
										"id": 709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 708,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 714,
												"src": "1040:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 707,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1040:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1039:16:4"
									},
									"scope": 723,
									"src": "989:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 721,
										"nodeType": "Block",
										"src": "1166:25:4",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 719,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1183:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 718,
												"id": 720,
												"nodeType": "Return",
												"src": "1176:8:4"
											}
										]
									},
									"id": 722,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "1103:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1123:2:4"
									},
									"returnParameters": {
										"id": 718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 717,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "1157:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 716,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1157:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1156:9:4"
									},
									"scope": 723,
									"src": "1094:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 724,
							"src": "688:505:4",
							"usedErrors": [
								348,
								351
							],
							"usedEvents": [
								356
							]
						}
					],
					"src": "101:1093:4"
				},
				"id": 4
			},
			"contracts/LiquidtyLocker.sol": {
				"ast": {
					"absolutePath": "contracts/LiquidtyLocker.sol",
					"exportedSymbols": {
						"IERC20Upgradeable": [
							677
						],
						"Initializable": [
							599
						],
						"LiquidityLocker": [
							935
						],
						"Ownable2StepUpgradeable": [
							136
						],
						"OwnableUpgradeable": [
							331
						]
					},
					"id": 936,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 725,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
							"id": 726,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 936,
							"sourceUnit": 678,
							"src": "61:79:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol",
							"id": 727,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 936,
							"sourceUnit": 137,
							"src": "142:80:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"id": 728,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 936,
							"sourceUnit": 600,
							"src": "224:75:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 729,
										"name": "Initializable",
										"nameLocations": [
											"331:13:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 599,
										"src": "331:13:5"
									},
									"id": 730,
									"nodeType": "InheritanceSpecifier",
									"src": "331:13:5"
								},
								{
									"baseName": {
										"id": 731,
										"name": "Ownable2StepUpgradeable",
										"nameLocations": [
											"346:23:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 136,
										"src": "346:23:5"
									},
									"id": 732,
									"nodeType": "InheritanceSpecifier",
									"src": "346:23:5"
								}
							],
							"canonicalName": "LiquidityLocker",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 935,
							"linearizedBaseContracts": [
								935,
								136,
								331,
								723,
								599
							],
							"name": "LiquidityLocker",
							"nameLocation": "312:15:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "fc0c546a",
									"id": 734,
									"mutability": "mutable",
									"name": "token",
									"nameLocation": "392:5:5",
									"nodeType": "VariableDeclaration",
									"scope": 935,
									"src": "377:20:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 733,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "377:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b172b222",
									"id": 736,
									"mutability": "mutable",
									"name": "governanceContract",
									"nameLocation": "419:18:5",
									"nodeType": "VariableDeclaration",
									"scope": 935,
									"src": "404:33:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 735,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "404:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "LiquidityLocker.Lock",
									"id": 743,
									"members": [
										{
											"constant": false,
											"id": 738,
											"mutability": "mutable",
											"name": "user",
											"nameLocation": "477:4:5",
											"nodeType": "VariableDeclaration",
											"scope": 743,
											"src": "469:12:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 737,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "469:7:5",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 740,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "500:6:5",
											"nodeType": "VariableDeclaration",
											"scope": 743,
											"src": "492:14:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 739,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "492:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 742,
											"mutability": "mutable",
											"name": "unlockTime",
											"nameLocation": "525:10:5",
											"nodeType": "VariableDeclaration",
											"scope": 743,
											"src": "517:18:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 741,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "517:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Lock",
									"nameLocation": "453:4:5",
									"nodeType": "StructDefinition",
									"scope": 935,
									"src": "446:97:5",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5de9a137",
									"id": 748,
									"mutability": "mutable",
									"name": "locks",
									"nameLocation": "583:5:5",
									"nodeType": "VariableDeclaration",
									"scope": 935,
									"src": "551:37:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Lock_$743_storage_$",
										"typeString": "mapping(address => struct LiquidityLocker.Lock)"
									},
									"typeName": {
										"id": 747,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 744,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "559:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "551:24:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Lock_$743_storage_$",
											"typeString": "mapping(address => struct LiquidityLocker.Lock)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 746,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 745,
												"name": "Lock",
												"nameLocations": [
													"570:4:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 743,
												"src": "570:4:5"
											},
											"referencedDeclaration": 743,
											"src": "570:4:5",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Lock_$743_storage_ptr",
												"typeString": "struct LiquidityLocker.Lock"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "d741e738a23fd18a03a26522320d9fc6cac1fed483e215ea9150fbc2fc43385d",
									"id": 756,
									"name": "TokensLocked",
									"nameLocation": "603:12:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 755,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 750,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "632:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 756,
												"src": "616:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 749,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "616:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 752,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "646:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 756,
												"src": "638:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 751,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "638:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 754,
												"indexed": false,
												"mutability": "mutable",
												"name": "unlockTime",
												"nameLocation": "662:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 756,
												"src": "654:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 753,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "615:58:5"
									},
									"src": "597:77:5"
								},
								{
									"anonymous": false,
									"eventSelector": "e7b379c6c1fa169e9079c25e9143b127637eef8ec8c9d5c06ddb4ab3e1195888",
									"id": 762,
									"name": "TokensUnlocked",
									"nameLocation": "686:14:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 761,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 758,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "717:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "701:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 757,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "701:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 760,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "731:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "723:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 759,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "723:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "700:38:5"
									},
									"src": "680:59:5"
								},
								{
									"body": {
										"id": 773,
										"nodeType": "Block",
										"src": "766:93:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 768,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 765,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "785:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 766,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "789:6:5",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "785:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 767,
																"name": "governanceContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 736,
																"src": "799:18:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "785:32:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c792044414f2063616e2063616c6c",
															"id": 769,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "819:19:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e4b297bc74c0ea843dcb41a7c34db9c9a65b1e779888213d098f02662d62d9ab",
																"typeString": "literal_string \"Only DAO can call\""
															},
															"value": "Only DAO can call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e4b297bc74c0ea843dcb41a7c34db9c9a65b1e779888213d098f02662d62d9ab",
																"typeString": "literal_string \"Only DAO can call\""
															}
														],
														"id": 764,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "777:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 770,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "777:62:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 771,
												"nodeType": "ExpressionStatement",
												"src": "777:62:5"
											},
											{
												"id": 772,
												"nodeType": "PlaceholderStatement",
												"src": "850:1:5"
											}
										]
									},
									"id": 774,
									"name": "onlyDAO",
									"nameLocation": "756:7:5",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 763,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "763:2:5"
									},
									"src": "747:112:5",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 818,
										"nodeType": "Block",
										"src": "943:297:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 789,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 784,
																"name": "_token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 776,
																"src": "962:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 787,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "980:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 786,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "972:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 785,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "972:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 788,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "972:10:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "962:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420746f6b656e2061646472657373",
															"id": 790,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "984:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743",
																"typeString": "literal_string \"Invalid token address\""
															},
															"value": "Invalid token address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743",
																"typeString": "literal_string \"Invalid token address\""
															}
														],
														"id": 783,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "954:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 791,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "954:54:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 792,
												"nodeType": "ExpressionStatement",
												"src": "954:54:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 799,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 794,
																"name": "_governance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 778,
																"src": "1027:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 797,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1050:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 796,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1042:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 795,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1042:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 798,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1042:10:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1027:25:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420676f7665726e616e63652061646472657373",
															"id": 800,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1054:28:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_23776fb288274964545f569a8ed394955609b3a092d15c2921488382ceadb7e6",
																"typeString": "literal_string \"Invalid governance address\""
															},
															"value": "Invalid governance address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_23776fb288274964545f569a8ed394955609b3a092d15c2921488382ceadb7e6",
																"typeString": "literal_string \"Invalid governance address\""
															}
														],
														"id": 793,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1019:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 801,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1019:64:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 802,
												"nodeType": "ExpressionStatement",
												"src": "1019:64:5"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 803,
														"name": "__Ownable2Step_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 37,
														"src": "1094:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:21:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 805,
												"nodeType": "ExpressionStatement",
												"src": "1094:21:5"
											},
											{
												"expression": {
													"id": 808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 806,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 734,
														"src": "1126:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 807,
														"name": "_token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 776,
														"src": "1134:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1126:14:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 809,
												"nodeType": "ExpressionStatement",
												"src": "1126:14:5"
											},
											{
												"expression": {
													"id": 812,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 810,
														"name": "governanceContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 736,
														"src": "1151:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 811,
														"name": "_governance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 778,
														"src": "1172:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1151:32:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 813,
												"nodeType": "ExpressionStatement",
												"src": "1151:32:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 815,
															"name": "governanceContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 736,
															"src": "1213:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 814,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															111
														],
														"referencedDeclaration": 111,
														"src": "1194:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1194:38:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 817,
												"nodeType": "ExpressionStatement",
												"src": "1194:38:5"
											}
										]
									},
									"functionSelector": "485cc955",
									"id": 819,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 781,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 780,
												"name": "initializer",
												"nameLocations": [
													"931:11:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 439,
												"src": "931:11:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "931:11:5"
										}
									],
									"name": "initialize",
									"nameLocation": "876:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 776,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "895:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "887:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 775,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "887:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 778,
												"mutability": "mutable",
												"name": "_governance",
												"nameLocation": "911:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "903:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 777,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "903:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "886:37:5"
									},
									"returnParameters": {
										"id": 782,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "943:0:5"
									},
									"scope": 935,
									"src": "867:373:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 878,
										"nodeType": "Block",
										"src": "1348:357:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 835,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 833,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 823,
																"src": "1367:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 834,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1376:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1367:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e2030",
															"id": 836,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1379:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
																"typeString": "literal_string \"Amount must be greater than 0\""
															},
															"value": "Amount must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
																"typeString": "literal_string \"Amount must be greater than 0\""
															}
														],
														"id": 832,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1359:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 837,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1359:52:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 838,
												"nodeType": "ExpressionStatement",
												"src": "1359:52:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 843,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 840,
																"name": "unlockTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 827,
																"src": "1430:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"expression": {
																	"id": 841,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "1443:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 842,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1449:9:5",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "1443:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1430:28:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420756e6c6f636b2074696d65",
															"id": 844,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1460:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_613fd76440d4b379fde309457caabc84e732a7046afb346ee2e95eb2e6a4f407",
																"typeString": "literal_string \"Invalid unlock time\""
															},
															"value": "Invalid unlock time"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_613fd76440d4b379fde309457caabc84e732a7046afb346ee2e95eb2e6a4f407",
																"typeString": "literal_string \"Invalid unlock time\""
															}
														],
														"id": 839,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1422:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1422:60:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 846,
												"nodeType": "ExpressionStatement",
												"src": "1422:60:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 852,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 821,
																	"src": "1539:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 855,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "1553:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_LiquidityLocker_$935",
																				"typeString": "contract LiquidityLocker"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_LiquidityLocker_$935",
																				"typeString": "contract LiquidityLocker"
																			}
																		],
																		"id": 854,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1545:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 853,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1545:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 856,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1545:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 857,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 823,
																	"src": "1560:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 849,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 734,
																			"src": "1519:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 848,
																		"name": "IERC20Upgradeable",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 677,
																		"src": "1501:17:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$677_$",
																			"typeString": "type(contract IERC20Upgradeable)"
																		}
																	},
																	"id": 850,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1501:24:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$677",
																		"typeString": "contract IERC20Upgradeable"
																	}
																},
																"id": 851,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1526:12:5",
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 676,
																"src": "1501:37:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 858,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1501:66:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c6564",
															"id": 859,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1569:17:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															},
															"value": "Transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															}
														],
														"id": 847,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1493:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1493:94:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 861,
												"nodeType": "ExpressionStatement",
												"src": "1493:94:5"
											},
											{
												"expression": {
													"id": 870,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 862,
															"name": "locks",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 748,
															"src": "1600:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Lock_$743_storage_$",
																"typeString": "mapping(address => struct LiquidityLocker.Lock storage ref)"
															}
														},
														"id": 864,
														"indexExpression": {
															"id": 863,
															"name": "dex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 825,
															"src": "1606:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1600:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Lock_$743_storage",
															"typeString": "struct LiquidityLocker.Lock storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 866,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 821,
																"src": "1618:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 867,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 823,
																"src": "1624:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 868,
																"name": "unlockTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 827,
																"src": "1632:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 865,
															"name": "Lock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 743,
															"src": "1613:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Lock_$743_storage_ptr_$",
																"typeString": "type(struct LiquidityLocker.Lock storage pointer)"
															}
														},
														"id": 869,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1613:30:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Lock_$743_memory_ptr",
															"typeString": "struct LiquidityLocker.Lock memory"
														}
													},
													"src": "1600:43:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Lock_$743_storage",
														"typeString": "struct LiquidityLocker.Lock storage ref"
													}
												},
												"id": 871,
												"nodeType": "ExpressionStatement",
												"src": "1600:43:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 873,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 821,
															"src": "1672:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 874,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 823,
															"src": "1678:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 875,
															"name": "unlockTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 827,
															"src": "1686:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 872,
														"name": "TokensLocked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 756,
														"src": "1659:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 876,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1659:38:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 877,
												"nodeType": "EmitStatement",
												"src": "1654:43:5"
											}
										]
									},
									"functionSelector": "40678be4",
									"id": 879,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 830,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 829,
												"name": "onlyDAO",
												"nameLocations": [
													"1340:7:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 774,
												"src": "1340:7:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "1340:7:5"
										}
									],
									"name": "lockForDEX",
									"nameLocation": "1257:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 828,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 821,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1276:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 879,
												"src": "1268:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 820,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1268:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 823,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1290:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 879,
												"src": "1282:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 822,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1282:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 825,
												"mutability": "mutable",
												"name": "dex",
												"nameLocation": "1306:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 879,
												"src": "1298:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 824,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1298:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 827,
												"mutability": "mutable",
												"name": "unlockTime",
												"nameLocation": "1319:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 879,
												"src": "1311:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 826,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1311:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:63:5"
									},
									"returnParameters": {
										"id": 831,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1348:0:5"
									},
									"scope": 935,
									"src": "1248:457:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 933,
										"nodeType": "Block",
										"src": "1757:361:5",
										"statements": [
											{
												"assignments": [
													886
												],
												"declarations": [
													{
														"constant": false,
														"id": 886,
														"mutability": "mutable",
														"name": "lock",
														"nameLocation": "1781:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 933,
														"src": "1768:17:5",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Lock_$743_storage_ptr",
															"typeString": "struct LiquidityLocker.Lock"
														},
														"typeName": {
															"id": 885,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 884,
																"name": "Lock",
																"nameLocations": [
																	"1768:4:5"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 743,
																"src": "1768:4:5"
															},
															"referencedDeclaration": 743,
															"src": "1768:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Lock_$743_storage_ptr",
																"typeString": "struct LiquidityLocker.Lock"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 890,
												"initialValue": {
													"baseExpression": {
														"id": 887,
														"name": "locks",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 748,
														"src": "1788:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Lock_$743_storage_$",
															"typeString": "mapping(address => struct LiquidityLocker.Lock storage ref)"
														}
													},
													"id": 889,
													"indexExpression": {
														"id": 888,
														"name": "dex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 881,
														"src": "1794:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1788:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Lock_$743_storage",
														"typeString": "struct LiquidityLocker.Lock storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1768:30:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 895,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 892,
																	"name": "lock",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 886,
																	"src": "1817:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Lock_$743_storage_ptr",
																		"typeString": "struct LiquidityLocker.Lock storage pointer"
																	}
																},
																"id": 893,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1822:6:5",
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 740,
																"src": "1817:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 894,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1831:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1817:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f20746f6b656e73206c6f636b6564",
															"id": 896,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1834:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d7c6f828de87952fca262cc4b14b50f81b65b63cac9cf1ed7420737d6d7e32a",
																"typeString": "literal_string \"No tokens locked\""
															},
															"value": "No tokens locked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d7c6f828de87952fca262cc4b14b50f81b65b63cac9cf1ed7420737d6d7e32a",
																"typeString": "literal_string \"No tokens locked\""
															}
														],
														"id": 891,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1809:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 897,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1809:44:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 898,
												"nodeType": "ExpressionStatement",
												"src": "1809:44:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 904,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 900,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "1872:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 901,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1878:9:5",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "1872:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"expression": {
																	"id": 902,
																	"name": "lock",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 886,
																	"src": "1891:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Lock_$743_storage_ptr",
																		"typeString": "struct LiquidityLocker.Lock storage pointer"
																	}
																},
																"id": 903,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1896:10:5",
																"memberName": "unlockTime",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 742,
																"src": "1891:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1872:34:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e73207374696c6c206c6f636b6564",
															"id": 905,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1908:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30ffff19ac546a939931fb7c95cf4c9a2a3d5bf3e75c143dfb2075e4b78f021d",
																"typeString": "literal_string \"Tokens still locked\""
															},
															"value": "Tokens still locked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30ffff19ac546a939931fb7c95cf4c9a2a3d5bf3e75c143dfb2075e4b78f021d",
																"typeString": "literal_string \"Tokens still locked\""
															}
														],
														"id": 899,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1864:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 906,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1864:66:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 907,
												"nodeType": "ExpressionStatement",
												"src": "1864:66:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 913,
																		"name": "lock",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 886,
																		"src": "1983:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Lock_$743_storage_ptr",
																			"typeString": "struct LiquidityLocker.Lock storage pointer"
																		}
																	},
																	"id": 914,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1988:4:5",
																	"memberName": "user",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 738,
																	"src": "1983:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"expression": {
																		"id": 915,
																		"name": "lock",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 886,
																		"src": "1994:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Lock_$743_storage_ptr",
																			"typeString": "struct LiquidityLocker.Lock storage pointer"
																		}
																	},
																	"id": 916,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1999:6:5",
																	"memberName": "amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 740,
																	"src": "1994:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 910,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 734,
																			"src": "1967:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 909,
																		"name": "IERC20Upgradeable",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 677,
																		"src": "1949:17:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$677_$",
																			"typeString": "type(contract IERC20Upgradeable)"
																		}
																	},
																	"id": 911,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1949:24:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$677",
																		"typeString": "contract IERC20Upgradeable"
																	}
																},
																"id": 912,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1974:8:5",
																"memberName": "transfer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 644,
																"src": "1949:33:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 917,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1949:57:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c6564",
															"id": 918,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2008:17:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															},
															"value": "Transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															}
														],
														"id": 908,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1941:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 919,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1941:85:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 920,
												"nodeType": "ExpressionStatement",
												"src": "1941:85:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 922,
																"name": "lock",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 886,
																"src": "2059:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Lock_$743_storage_ptr",
																	"typeString": "struct LiquidityLocker.Lock storage pointer"
																}
															},
															"id": 923,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2064:4:5",
															"memberName": "user",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 738,
															"src": "2059:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 924,
																"name": "lock",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 886,
																"src": "2070:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Lock_$743_storage_ptr",
																	"typeString": "struct LiquidityLocker.Lock storage pointer"
																}
															},
															"id": 925,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2075:6:5",
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 740,
															"src": "2070:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 921,
														"name": "TokensUnlocked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 762,
														"src": "2044:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 926,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2044:38:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 927,
												"nodeType": "EmitStatement",
												"src": "2039:43:5"
											},
											{
												"expression": {
													"id": 931,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "2093:17:5",
													"subExpression": {
														"baseExpression": {
															"id": 928,
															"name": "locks",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 748,
															"src": "2100:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Lock_$743_storage_$",
																"typeString": "mapping(address => struct LiquidityLocker.Lock storage ref)"
															}
														},
														"id": 930,
														"indexExpression": {
															"id": 929,
															"name": "dex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 881,
															"src": "2106:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2100:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Lock_$743_storage",
															"typeString": "struct LiquidityLocker.Lock storage ref"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 932,
												"nodeType": "ExpressionStatement",
												"src": "2093:17:5"
											}
										]
									},
									"functionSelector": "cb67f948",
									"id": 934,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unlockTokens",
									"nameLocation": "1722:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 882,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 881,
												"mutability": "mutable",
												"name": "dex",
												"nameLocation": "1743:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 934,
												"src": "1735:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 880,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1735:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1734:13:5"
									},
									"returnParameters": {
										"id": 883,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1757:0:5"
									},
									"scope": 935,
									"src": "1713:405:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 936,
							"src": "303:1818:5",
							"usedErrors": [
								167,
								172,
								348,
								351
							],
							"usedEvents": [
								31,
								178,
								356,
								756,
								762
							]
						}
					],
					"src": "33:2088:5"
				},
				"id": 5
			}
		}
	}
}